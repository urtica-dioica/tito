{"version":3,"names":["cov_14oev6t39t","actualCoverage","hrRequestService_1","s","require","express_1","logger_1","__importDefault","HrRequestController","listRequests","req","res","f","requestId","getRequestId","type","status","departmentId","search","page","b","limit","query","requests","hrRequestService","getAllRequests","Number","json","success","data","error","default","message","getRequestStats","stats","getRequestById","id","params","request","exports","hrRequestController"],"sources":["/home/kim/tito/server/src/controllers/hr/hrRequestController.ts"],"sourcesContent":["import { Request, Response } from 'express';\nimport { hrRequestService } from '../../services/hr/hrRequestService';\nimport { getRequestId } from '../../utils/types/express';\nimport logger from '../../utils/logger';\n\nexport class HrRequestController {\n  /**\n   * List all employee requests with filtering and pagination\n   */\n  async listRequests(req: Request, res: Response): Promise<void> {\n    const requestId = getRequestId(req);\n    \n    try {\n      const {\n        type,\n        status,\n        departmentId,\n        search,\n        page = 1,\n        limit = 50\n      } = req.query;\n\n      const requests = await hrRequestService.getAllRequests({\n        type: type as string,\n        status: status as 'pending' | 'approved' | 'rejected',\n        departmentId: departmentId as string,\n        search: search as string,\n        page: Number(page),\n        limit: Number(limit)\n      });\n\n      res.json({\n        success: true,\n        data: requests,\n        requestId\n      });\n    } catch (error) {\n      logger.error('Error listing HR requests', { \n        error: (error as Error).message, \n        requestId,\n        query: req.query\n      });\n\n      res.status(500).json({\n        success: false,\n        message: 'Failed to fetch requests',\n        error: (error as Error).message,\n        requestId\n      });\n    }\n  }\n\n  /**\n   * Get request statistics\n   */\n  async getRequestStats(req: Request, res: Response): Promise<void> {\n    const requestId = getRequestId(req);\n    \n    try {\n      const stats = await hrRequestService.getRequestStats();\n\n      res.json({\n        success: true,\n        data: stats,\n        requestId\n      });\n    } catch (error) {\n      logger.error('Error getting request stats', { \n        error: (error as Error).message, \n        requestId\n      });\n\n      res.status(500).json({\n        success: false,\n        message: 'Failed to fetch request statistics',\n        error: (error as Error).message,\n        requestId\n      });\n    }\n  }\n\n  /**\n   * Get request details by ID\n   */\n  async getRequestById(req: Request, res: Response): Promise<void> {\n    const requestId = getRequestId(req);\n    \n    try {\n      const { id } = req.params;\n\n      if (!id) {\n        res.status(400).json({\n          success: false,\n          message: 'Request ID is required',\n          requestId\n        });\n        return;\n      }\n\n      const request = await hrRequestService.getRequestById(id);\n\n      if (!request) {\n        res.status(404).json({\n          success: false,\n          message: 'Request not found',\n          requestId\n        });\n        return;\n      }\n\n      res.json({\n        success: true,\n        data: request,\n        requestId\n      });\n    } catch (error) {\n      logger.error('Error getting request by ID', { \n        error: (error as Error).message, \n        requestId,\n        params: req.params\n      });\n\n      res.status(500).json({\n        success: false,\n        message: 'Failed to fetch request details',\n        error: (error as Error).message,\n        requestId\n      });\n    }\n  }\n}\n\nexport const hrRequestController = new HrRequestController();\n"],"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","ignoreList":[]}