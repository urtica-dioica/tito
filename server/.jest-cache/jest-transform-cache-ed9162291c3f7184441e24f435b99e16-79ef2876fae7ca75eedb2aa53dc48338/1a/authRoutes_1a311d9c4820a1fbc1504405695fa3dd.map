{"version":3,"names":["cov_tfiwor0dl","actualCoverage","s","express_1","require","authController_1","authenticate_1","roles_1","router","Router","post","authController","login","bind","refreshToken","requestPasswordReset","resetPassword","setupPassword","use","authenticate","get","requireAuth","getProfile","put","updateProfile","changePassword","logout","requireRole","USER_ROLES","HR","createUser","getAllUsers","updateUser","exports","default"],"sources":["/home/kim/tito/server/src/routes/auth/authRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { authController } from '../../controllers/auth/authController';\nimport { authenticate, requireAuth, requireRole } from '../../middleware/auth/authenticate';\nimport { USER_ROLES } from '../../utils/constants/roles';\n\nconst router = Router();\n\n// Public routes (no authentication required)\nrouter.post('/login', authController.login.bind(authController));\nrouter.post('/refresh-token', authController.refreshToken.bind(authController));\nrouter.post('/request-password-reset', authController.requestPasswordReset.bind(authController));\nrouter.post('/reset-password', authController.resetPassword.bind(authController));\nrouter.post('/setup-password', authController.setupPassword.bind(authController));\n\n// Protected routes (authentication required)\nrouter.use(authenticate); // Apply authentication middleware to all routes below\n\n// User profile and password management\nrouter.get('/profile', requireAuth, authController.getProfile.bind(authController));\nrouter.put('/profile', requireAuth, authController.updateProfile.bind(authController));\nrouter.put('/change-password', requireAuth, authController.changePassword.bind(authController));\nrouter.post('/logout', requireAuth, authController.logout.bind(authController));\n\n// HR-only routes\nrouter.post('/users', requireRole(USER_ROLES.HR), authController.createUser.bind(authController));\nrouter.get('/users', requireRole(USER_ROLES.HR), authController.getAllUsers.bind(authController));\nrouter.put('/users/:id', requireRole(USER_ROLES.HR), authController.updateUser.bind(authController));\n\nexport default router; "],"mappings":"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","ignoreList":[]}