{"version":3,"names":["express_1","cov_1yzx35aapc","s","require","departmentController_1","authenticate_1","authorize_1","validate_1","departmentSchemas_1","router","Router","departmentController","DepartmentController","use","authenticate","requireHR","post","validateBody","createDepartmentSchema","createDepartment","get","validateQuery","departmentQuerySchema","listDepartments","getDepartmentStats","departmentHeadsQuerySchema","getDepartmentHeads","validateParams","departmentParamsSchema","getDepartmentHeadById","createDepartmentHeadSchema","createDepartmentHead","put","updateDepartmentHead","delete","deleteDepartmentHead","getDepartment","updateDepartmentSchema","updateDepartment","deleteDepartment","hardDeleteDepartment","assignDepartmentHeadSchema","assignDepartmentHead","removeDepartmentHead","getDepartmentEmployees","exports","default"],"sources":["/home/kim/tito/server/src/routes/hr/departmentRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { DepartmentController } from '../../controllers/hr/departmentController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { requireHR } from '../../middleware/auth/authorize';\nimport { validateBody, validateQuery, validateParams } from '../../middleware/validation/validate';\nimport { createDepartmentSchema, updateDepartmentSchema, departmentParamsSchema, departmentQuerySchema, assignDepartmentHeadSchema, departmentHeadsQuerySchema, createDepartmentHeadSchema } from '../../middleware/validation/schemas/departmentSchemas';\n\nconst router = Router();\nconst departmentController = new DepartmentController();\n\n// Apply authentication and HR admin authorization to all routes\nrouter.use(authenticate);\nrouter.use(requireHR);\n\n/**\n * @route POST /api/v1/hr/departments\n * @desc Create a new department\n * @access HR Admin only\n */\nrouter.post(\n  '/',\n  validateBody(createDepartmentSchema),\n  departmentController.createDepartment\n);\n\n/**\n * @route GET /api/v1/hr/departments\n * @desc List departments with filtering and pagination\n * @access HR Admin only\n */\nrouter.get(\n  '/',\n  validateQuery(departmentQuerySchema),\n  departmentController.listDepartments\n);\n\n/**\n * @route GET /api/v1/hr/departments/stats\n * @desc Get department statistics\n * @access HR Admin only\n */\nrouter.get(\n  '/stats',\n  departmentController.getDepartmentStats\n);\n\n// Department Head Management Routes\n\n/**\n * @route GET /api/v1/hr/departments/heads\n * @desc List all department heads with filtering and pagination\n * @access HR Admin only\n */\nrouter.get(\n  '/heads',\n  validateQuery(departmentHeadsQuerySchema),\n  departmentController.getDepartmentHeads\n);\n\n/**\n * @route GET /api/v1/hr/departments/heads/:id\n * @desc Get department head by ID\n * @access HR Admin only\n */\nrouter.get(\n  '/heads/:id',\n  validateParams(departmentParamsSchema),\n  departmentController.getDepartmentHeadById\n);\n\n/**\n * @route POST /api/v1/hr/departments/heads\n * @desc Create a new department head user\n * @access HR Admin only\n */\nrouter.post(\n  '/heads',\n  validateBody(createDepartmentHeadSchema),\n  departmentController.createDepartmentHead\n);\n\n/**\n * @route PUT /api/v1/hr/departments/heads/:id\n * @desc Update department head\n * @access HR Admin only\n */\nrouter.put(\n  '/heads/:id',\n  validateParams(departmentParamsSchema),\n  departmentController.updateDepartmentHead\n);\n\n/**\n * @route DELETE /api/v1/hr/departments/heads/:id\n * @desc Delete department head\n * @access HR Admin only\n */\nrouter.delete(\n  '/heads/:id',\n  validateParams(departmentParamsSchema),\n  departmentController.deleteDepartmentHead\n);\n\n/**\n * @route GET /api/v1/hr/departments/:id\n * @desc Get department by ID\n * @access HR Admin only\n */\nrouter.get(\n  '/:id',\n  validateParams(departmentParamsSchema),\n  departmentController.getDepartment\n);\n\n/**\n * @route PUT /api/v1/hr/departments/:id\n * @desc Update department\n * @access HR Admin only\n */\nrouter.put(\n  '/:id',\n  validateParams(departmentParamsSchema),\n  validateBody(updateDepartmentSchema),\n  departmentController.updateDepartment\n);\n\n/**\n * @route DELETE /api/v1/hr/departments/:id\n * @desc Delete department (soft delete)\n * @access HR Admin only\n */\nrouter.delete(\n  '/:id',\n  validateParams(departmentParamsSchema),\n  departmentController.deleteDepartment\n);\n\n/**\n * @route DELETE /api/v1/hr/departments/:id/hard-delete\n * @desc Hard delete department (permanently remove from database)\n * @access HR Admin only\n */\nrouter.delete(\n  '/:id/hard-delete',\n  validateParams(departmentParamsSchema),\n  departmentController.hardDeleteDepartment\n);\n\n/**\n * @route POST /api/v1/hr/departments/:id/assign-head\n * @desc Assign department head\n * @access HR Admin only\n */\nrouter.post(\n  '/:id/assign-head',\n  validateParams(departmentParamsSchema),\n  validateBody(assignDepartmentHeadSchema),\n  departmentController.assignDepartmentHead\n);\n\n/**\n * @route DELETE /api/v1/hr/departments/:id/remove-head\n * @desc Remove department head\n * @access HR Admin only\n */\nrouter.delete(\n  '/:id/remove-head',\n  validateParams(departmentParamsSchema),\n  departmentController.removeDepartmentHead\n);\n\n/**\n * @route GET /api/v1/hr/departments/:id/employees\n * @desc Get employees in a department\n * @access HR Admin only\n */\nrouter.get(\n  '/:id/employees',\n  validateParams(departmentParamsSchema),\n  departmentController.getDepartmentEmployees\n);\n\nexport default router;"],"mappings":"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","ignoreList":[]}