68bc3b5d91bfb6322455752ad4ac4271
"use strict";

/* istanbul ignore next */
function cov_2hktmh3hxi() {
  var path = "/home/kim/tito/server/src/middleware/validation/schemas/payrollSchemas.ts";
  var hash = "e74438832f6a8d43f1809b5aeefe89c2e423da7e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/middleware/validation/schemas/payrollSchemas.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 392
        }
      },
      "4": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "6": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "7": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "8": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "9": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "10": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 66,
          column: 3
        }
      },
      "11": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "12": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 63
        }
      },
      "13": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "14": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 65
        }
      },
      "15": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "16": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "17": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 78,
          column: 3
        }
      },
      "18": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "19": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 95,
          column: 3
        }
      },
      "20": {
        start: {
          line: 97,
          column: 0
        },
        end: {
          line: 100,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 54,
            column: 10
          },
          end: {
            line: 54,
            column: 11
          }
        },
        loc: {
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 54
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 25
          }
        }, {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 56,
            column: 48
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 24
          }
        }, {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 46
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/middleware/validation/schemas/payrollSchemas.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/middleware/validation/schemas/payrollSchemas.ts"],
      sourcesContent: ["import Joi from 'joi';\n\n// Payroll Period Schemas\nexport const createPayrollPeriodSchema = Joi.object({\n  period_name: Joi.string().required().min(1).max(100),\n  start_date: Joi.date().required(),\n  end_date: Joi.date().required().greater(Joi.ref('start_date')),\n  status: Joi.string().valid('draft', 'processing', 'sent_for_review', 'completed').optional()\n});\n\nexport const updatePayrollPeriodSchema = Joi.object({\n  period_name: Joi.string().min(1).max(100).optional(),\n  start_date: Joi.date().optional(),\n  end_date: Joi.date().optional(),\n  status: Joi.string().valid('draft', 'processing', 'sent_for_review', 'completed').optional()\n});\n\nexport const payrollPeriodQuerySchema = Joi.object({\n  page: Joi.number().integer().min(1).optional(),\n  limit: Joi.number().integer().min(1).max(100).optional(),\n  status: Joi.string().valid('draft', 'processing', 'sent_for_review', 'completed').optional(),\n  startDate: Joi.date().optional(),\n  endDate: Joi.date().optional()\n});\n\n// Payroll Record Schemas\nexport const updatePayrollRecordSchema = Joi.object({\n  base_salary: Joi.number().positive().optional(),\n  regular_hours: Joi.number().positive().optional(),\n  hourly_rate: Joi.number().positive().optional(),\n  regular_pay: Joi.number().min(0).optional(),\n  overtime_hours: Joi.number().min(0).optional(),\n  overtime_pay: Joi.number().min(0).optional(),\n  total_pay: Joi.number().min(0).optional(),\n  net_pay: Joi.number().min(0).optional(),\n  status: Joi.string().valid('draft', 'processed', 'paid').optional()\n});\n\nexport const payrollRecordQuerySchema = Joi.object({\n  page: Joi.number().integer().min(1).optional(),\n  limit: Joi.number().integer().min(1).max(100).optional(),\n  payroll_period_id: Joi.string().uuid().optional(),\n  employee_id: Joi.string().uuid().optional(),\n  status: Joi.string().valid('draft', 'processed', 'paid').optional()\n});\n\n// Deduction Type Schemas\nexport const createDeductionTypeSchema = Joi.object({\n  name: Joi.string().required().min(1).max(100),\n  description: Joi.string().max(500).optional().allow(null),\n  percentage: Joi.number().min(0).max(100).optional().allow(null),\n  fixed_amount: Joi.number().min(0).optional().allow(null),\n  is_active: Joi.boolean().optional()\n}).custom((value, helpers) => {\n  // Either percentage or fixed_amount must be provided, but not both\n  if (!value.percentage && !value.fixed_amount) {\n    return helpers.error('custom.eitherPercentageOrFixed');\n  }\n  if (value.percentage && value.fixed_amount) {\n    return helpers.error('custom.notBothPercentageAndFixed');\n  }\n  return value;\n}).messages({\n  'custom.eitherPercentageOrFixed': 'Either percentage or fixed amount must be provided',\n  'custom.notBothPercentageAndFixed': 'Cannot specify both percentage and fixed amount'\n});\n\nexport const updateDeductionTypeSchema = Joi.object({\n  name: Joi.string().min(1).max(100).optional(),\n  description: Joi.string().max(500).optional().allow(null),\n  percentage: Joi.number().min(0).max(100).optional().allow(null),\n  fixed_amount: Joi.number().min(0).optional().allow(null),\n  is_active: Joi.boolean().optional()\n});\n\nexport const deductionTypeQuerySchema = Joi.object({\n  page: Joi.number().integer().min(1).optional(),\n  limit: Joi.number().integer().min(1).max(100).optional(),\n  is_active: Joi.boolean().optional()\n});\n\n// Payroll Calculation Schemas\nexport const calculatePayrollSchema = Joi.object({\n  employee_id: Joi.string().uuid().required(),\n  payroll_period_id: Joi.string().uuid().required(),\n  base_salary: Joi.number().positive().required(),\n  regular_hours: Joi.number().min(0).required(),\n  overtime_hours: Joi.number().min(0).required(),\n  deductions: Joi.array().items(\n    Joi.object({\n      type: Joi.string().required(),\n      amount: Joi.number().min(0).required(),\n      percentage: Joi.number().min(0).max(100).optional()\n    })\n  ).optional()\n});\n\n// Payroll Approval Schemas\nexport const approvePayrollSchema = Joi.object({\n  comments: Joi.string().max(500).optional()\n});\n\n// Payroll Summary Query Schema\nexport const payrollSummaryQuerySchema = Joi.object({\n  include_details: Joi.boolean().optional(),\n  group_by_department: Joi.boolean().optional()\n});"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e74438832f6a8d43f1809b5aeefe89c2e423da7e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hktmh3hxi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hktmh3hxi();
var __importDefault =
/* istanbul ignore next */
(cov_2hktmh3hxi().s[0]++,
/* istanbul ignore next */
(cov_2hktmh3hxi().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2hktmh3hxi().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2hktmh3hxi().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2hktmh3hxi().f[0]++;
  cov_2hktmh3hxi().s[1]++;
  return /* istanbul ignore next */(cov_2hktmh3hxi().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2hktmh3hxi().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2hktmh3hxi().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2hktmh3hxi().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2hktmh3hxi().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2hktmh3hxi().s[3]++;
exports.payrollSummaryQuerySchema = exports.approvePayrollSchema = exports.calculatePayrollSchema = exports.deductionTypeQuerySchema = exports.updateDeductionTypeSchema = exports.createDeductionTypeSchema = exports.payrollRecordQuerySchema = exports.updatePayrollRecordSchema = exports.payrollPeriodQuerySchema = exports.updatePayrollPeriodSchema = exports.createPayrollPeriodSchema = void 0;
const joi_1 =
/* istanbul ignore next */
(cov_2hktmh3hxi().s[4]++, __importDefault(require("joi")));
// Payroll Period Schemas
/* istanbul ignore next */
cov_2hktmh3hxi().s[5]++;
exports.createPayrollPeriodSchema = joi_1.default.object({
  period_name: joi_1.default.string().required().min(1).max(100),
  start_date: joi_1.default.date().required(),
  end_date: joi_1.default.date().required().greater(joi_1.default.ref('start_date')),
  status: joi_1.default.string().valid('draft', 'processing', 'sent_for_review', 'completed').optional()
});
/* istanbul ignore next */
cov_2hktmh3hxi().s[6]++;
exports.updatePayrollPeriodSchema = joi_1.default.object({
  period_name: joi_1.default.string().min(1).max(100).optional(),
  start_date: joi_1.default.date().optional(),
  end_date: joi_1.default.date().optional(),
  status: joi_1.default.string().valid('draft', 'processing', 'sent_for_review', 'completed').optional()
});
/* istanbul ignore next */
cov_2hktmh3hxi().s[7]++;
exports.payrollPeriodQuerySchema = joi_1.default.object({
  page: joi_1.default.number().integer().min(1).optional(),
  limit: joi_1.default.number().integer().min(1).max(100).optional(),
  status: joi_1.default.string().valid('draft', 'processing', 'sent_for_review', 'completed').optional(),
  startDate: joi_1.default.date().optional(),
  endDate: joi_1.default.date().optional()
});
// Payroll Record Schemas
/* istanbul ignore next */
cov_2hktmh3hxi().s[8]++;
exports.updatePayrollRecordSchema = joi_1.default.object({
  base_salary: joi_1.default.number().positive().optional(),
  regular_hours: joi_1.default.number().positive().optional(),
  hourly_rate: joi_1.default.number().positive().optional(),
  regular_pay: joi_1.default.number().min(0).optional(),
  overtime_hours: joi_1.default.number().min(0).optional(),
  overtime_pay: joi_1.default.number().min(0).optional(),
  total_pay: joi_1.default.number().min(0).optional(),
  net_pay: joi_1.default.number().min(0).optional(),
  status: joi_1.default.string().valid('draft', 'processed', 'paid').optional()
});
/* istanbul ignore next */
cov_2hktmh3hxi().s[9]++;
exports.payrollRecordQuerySchema = joi_1.default.object({
  page: joi_1.default.number().integer().min(1).optional(),
  limit: joi_1.default.number().integer().min(1).max(100).optional(),
  payroll_period_id: joi_1.default.string().uuid().optional(),
  employee_id: joi_1.default.string().uuid().optional(),
  status: joi_1.default.string().valid('draft', 'processed', 'paid').optional()
});
// Deduction Type Schemas
/* istanbul ignore next */
cov_2hktmh3hxi().s[10]++;
exports.createDeductionTypeSchema = joi_1.default.object({
  name: joi_1.default.string().required().min(1).max(100),
  description: joi_1.default.string().max(500).optional().allow(null),
  percentage: joi_1.default.number().min(0).max(100).optional().allow(null),
  fixed_amount: joi_1.default.number().min(0).optional().allow(null),
  is_active: joi_1.default.boolean().optional()
}).custom((value, helpers) => {
  /* istanbul ignore next */
  cov_2hktmh3hxi().f[1]++;
  cov_2hktmh3hxi().s[11]++;
  // Either percentage or fixed_amount must be provided, but not both
  if (
  /* istanbul ignore next */
  (cov_2hktmh3hxi().b[4][0]++, !value.percentage) &&
  /* istanbul ignore next */
  (cov_2hktmh3hxi().b[4][1]++, !value.fixed_amount)) {
    /* istanbul ignore next */
    cov_2hktmh3hxi().b[3][0]++;
    cov_2hktmh3hxi().s[12]++;
    return helpers.error('custom.eitherPercentageOrFixed');
  } else
  /* istanbul ignore next */
  {
    cov_2hktmh3hxi().b[3][1]++;
  }
  cov_2hktmh3hxi().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_2hktmh3hxi().b[6][0]++, value.percentage) &&
  /* istanbul ignore next */
  (cov_2hktmh3hxi().b[6][1]++, value.fixed_amount)) {
    /* istanbul ignore next */
    cov_2hktmh3hxi().b[5][0]++;
    cov_2hktmh3hxi().s[14]++;
    return helpers.error('custom.notBothPercentageAndFixed');
  } else
  /* istanbul ignore next */
  {
    cov_2hktmh3hxi().b[5][1]++;
  }
  cov_2hktmh3hxi().s[15]++;
  return value;
}).messages({
  'custom.eitherPercentageOrFixed': 'Either percentage or fixed amount must be provided',
  'custom.notBothPercentageAndFixed': 'Cannot specify both percentage and fixed amount'
});
/* istanbul ignore next */
cov_2hktmh3hxi().s[16]++;
exports.updateDeductionTypeSchema = joi_1.default.object({
  name: joi_1.default.string().min(1).max(100).optional(),
  description: joi_1.default.string().max(500).optional().allow(null),
  percentage: joi_1.default.number().min(0).max(100).optional().allow(null),
  fixed_amount: joi_1.default.number().min(0).optional().allow(null),
  is_active: joi_1.default.boolean().optional()
});
/* istanbul ignore next */
cov_2hktmh3hxi().s[17]++;
exports.deductionTypeQuerySchema = joi_1.default.object({
  page: joi_1.default.number().integer().min(1).optional(),
  limit: joi_1.default.number().integer().min(1).max(100).optional(),
  is_active: joi_1.default.boolean().optional()
});
// Payroll Calculation Schemas
/* istanbul ignore next */
cov_2hktmh3hxi().s[18]++;
exports.calculatePayrollSchema = joi_1.default.object({
  employee_id: joi_1.default.string().uuid().required(),
  payroll_period_id: joi_1.default.string().uuid().required(),
  base_salary: joi_1.default.number().positive().required(),
  regular_hours: joi_1.default.number().min(0).required(),
  overtime_hours: joi_1.default.number().min(0).required(),
  deductions: joi_1.default.array().items(joi_1.default.object({
    type: joi_1.default.string().required(),
    amount: joi_1.default.number().min(0).required(),
    percentage: joi_1.default.number().min(0).max(100).optional()
  })).optional()
});
// Payroll Approval Schemas
/* istanbul ignore next */
cov_2hktmh3hxi().s[19]++;
exports.approvePayrollSchema = joi_1.default.object({
  comments: joi_1.default.string().max(500).optional()
});
// Payroll Summary Query Schema
/* istanbul ignore next */
cov_2hktmh3hxi().s[20]++;
exports.payrollSummaryQuerySchema = joi_1.default.object({
  include_details: joi_1.default.boolean().optional(),
  group_by_department: joi_1.default.boolean().optional()
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,