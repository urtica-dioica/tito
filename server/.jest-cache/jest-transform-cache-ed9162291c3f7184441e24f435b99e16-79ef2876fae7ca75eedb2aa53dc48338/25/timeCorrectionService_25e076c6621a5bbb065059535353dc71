9a888aa74c4302e2680b7f464f01d8e7
"use strict";

/* istanbul ignore next */
function cov_1ft8dm7n3c() {
  var path = "/home/kim/tito/server/src/services/attendance/timeCorrectionService.ts";
  var hash = "fca867deba8da707672a405e3db0ea83dc28b685";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/services/attendance/timeCorrectionService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 71
        }
      },
      "4": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 88
        }
      },
      "5": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "6": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 9,
          column: 80
        }
      },
      "7": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "8": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 51
        }
      },
      "9": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "10": {
        start: {
          line: 13,
          column: 36
        },
        end: {
          line: 13,
          column: 84
        }
      },
      "11": {
        start: {
          line: 19,
          column: 80
        },
        end: {
          line: 19,
          column: 84
        }
      },
      "12": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 76
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "14": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 50
        }
      },
      "15": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "16": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 54
        }
      },
      "17": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "19": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "20": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 74
        }
      },
      "21": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 35,
          column: 99
        }
      },
      "22": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "23": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 111
        }
      },
      "24": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "25": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 121
        }
      },
      "26": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 56,
          column: 11
        }
      },
      "27": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "28": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 96
        }
      },
      "29": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 110
        }
      },
      "30": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 107
        }
      },
      "31": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 130
        }
      },
      "32": {
        start: {
          line: 87,
          column: 62
        },
        end: {
          line: 87,
          column: 66
        }
      },
      "33": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 89,
          column: 100
        }
      },
      "34": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "35": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 65
        }
      },
      "36": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "37": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 66
        }
      },
      "38": {
        start: {
          line: 97,
          column: 27
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "39": {
        start: {
          line: 102,
          column: 31
        },
        end: {
          line: 102,
          column: 138
        }
      },
      "40": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "41": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 72
        }
      },
      "42": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "43": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 59
        }
      },
      "44": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 30
        }
      },
      "46": {
        start: {
          line: 126,
          column: 72
        },
        end: {
          line: 126,
          column: 79
        }
      },
      "47": {
        start: {
          line: 128,
          column: 31
        },
        end: {
          line: 128,
          column: 124
        }
      },
      "48": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "49": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "50": {
        start: {
          line: 137,
          column: 33
        },
        end: {
          line: 137,
          column: 132
        }
      },
      "51": {
        start: {
          line: 138,
          column: 32
        },
        end: {
          line: 138,
          column: 89
        }
      },
      "52": {
        start: {
          line: 138,
          column: 59
        },
        end: {
          line: 138,
          column: 88
        }
      },
      "53": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "54": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 15
        }
      },
      "55": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "56": {
        start: {
          line: 154,
          column: 27
        },
        end: {
          line: 154,
          column: 78
        }
      },
      "57": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 37
        }
      },
      "58": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "59": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 38
        }
      },
      "60": {
        start: {
          line: 159,
          column: 13
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "61": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 35
        }
      },
      "62": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "63": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "64": {
        start: {
          line: 179,
          column: 22
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "65": {
        start: {
          line: 199,
          column: 23
        },
        end: {
          line: 199,
          column: 107
        }
      },
      "66": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "67": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 24
        }
      },
      "68": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 34
        }
      },
      "69": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "70": {
        start: {
          line: 214,
          column: 25
        },
        end: {
          line: 214,
          column: 123
        }
      },
      "71": {
        start: {
          line: 216,
          column: 23
        },
        end: {
          line: 216,
          column: 105
        }
      },
      "72": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 33
        }
      },
      "73": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 128
        }
      },
      "74": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 229,
          column: 93
        }
      },
      "75": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "76": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 65
        }
      },
      "77": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "78": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 64
        }
      },
      "79": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 104
        }
      },
      "80": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "81": {
        start: {
          line: 256,
          column: 23
        },
        end: {
          line: 256,
          column: 25
        }
      },
      "82": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 258,
          column: 81
        }
      },
      "83": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "84": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 46
        }
      },
      "85": {
        start: {
          line: 262,
          column: 13
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "86": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 50
        }
      },
      "87": {
        start: {
          line: 266,
          column: 22
        },
        end: {
          line: 266,
          column: 32
        }
      },
      "88": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 40
        }
      },
      "89": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "90": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 70
        }
      },
      "91": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "92": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 66
        }
      },
      "93": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "94": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 70
        }
      },
      "95": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "96": {
        start: {
          line: 281,
          column: 36
        },
        end: {
          line: 281,
          column: 118
        }
      },
      "97": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 284,
          column: 13
        }
      },
      "98": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 111
        }
      },
      "99": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 289,
          column: 10
        }
      },
      "100": {
        start: {
          line: 292,
          column: 0
        },
        end: {
          line: 292,
          column: 54
        }
      },
      "101": {
        start: {
          line: 293,
          column: 0
        },
        end: {
          line: 293,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 44
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 39
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 48
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 50
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 74
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 68
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 45
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 86
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 39
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 125
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 138,
            column: 54
          },
          end: {
            line: 138,
            column: 55
          }
        },
        loc: {
          start: {
            line: 138,
            column: 59
          },
          end: {
            line: 138,
            column: 88
          }
        },
        line: 138
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 67
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 178
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 50
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 213
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 59
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 222
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 42
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 228
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 98
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 241
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 46
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 255
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 74,
            column: 37
          },
          end: {
            line: 74,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 46
          },
          end: {
            line: 74,
            column: 48
          }
        }],
        line: 74
      },
      "8": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "9": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 98,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 31
          },
          end: {
            line: 98,
            column: 41
          }
        }, {
          start: {
            line: 98,
            column: 44
          },
          end: {
            line: 98,
            column: 54
          }
        }],
        line: 98
      },
      "11": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "14": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: 145,
            column: 13
          },
          end: {
            line: 152,
            column: 9
          }
        }],
        line: 139
      },
      "15": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: 159,
            column: 13
          },
          end: {
            line: 161,
            column: 9
          }
        }],
        line: 156
      },
      "16": {
        loc: {
          start: {
            line: 159,
            column: 13
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 13
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "17": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "18": {
        loc: {
          start: {
            line: 207,
            column: 27
          },
          end: {
            line: 207,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 60
          },
          end: {
            line: 207,
            column: 80
          }
        }, {
          start: {
            line: 207,
            column: 83
          },
          end: {
            line: 207,
            column: 104
          }
        }],
        line: 207
      },
      "19": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "20": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "21": {
        loc: {
          start: {
            line: 241,
            column: 76
          },
          end: {
            line: 241,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 241,
            column: 83
          },
          end: {
            line: 241,
            column: 84
          }
        }],
        line: 241
      },
      "22": {
        loc: {
          start: {
            line: 241,
            column: 86
          },
          end: {
            line: 241,
            column: 96
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 241,
            column: 94
          },
          end: {
            line: 241,
            column: 96
          }
        }],
        line: 241
      },
      "23": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: 262,
            column: 13
          },
          end: {
            line: 264,
            column: 9
          }
        }],
        line: 259
      },
      "24": {
        loc: {
          start: {
            line: 262,
            column: 13
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 13
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "25": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "26": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "27": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "28": {
        loc: {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 276,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 276,
            column: 24
          }
        }, {
          start: {
            line: 276,
            column: 28
          },
          end: {
            line: 276,
            column: 58
          }
        }],
        line: 276
      },
      "29": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "30": {
        loc: {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/services/attendance/timeCorrectionService.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/services/attendance/timeCorrectionService.ts"],
      sourcesContent: ["import { timeCorrectionRequestModel, TimeCorrectionRequest, CreateTimeCorrectionRequestData, UpdateTimeCorrectionRequestData } from '../../models/attendance/TimeCorrectionRequest';\nimport { attendanceRecordModel } from '../../models/attendance/AttendanceRecord';\nimport { attendanceSessionModel } from '../../models/attendance/AttendanceSession';\nimport { employeeModel } from '../../models/hr/Employee';\nimport { getPool } from '../../config/database';\nimport logger from '../../utils/logger';\nimport { defaultHoursCalculator } from '../../utils/attendanceHoursCalculator';\n\nexport interface CreateTimeCorrectionData {\n  employeeId: string;\n  requestDate: Date;\n  sessionType: 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out';\n  requestedTime: Date;\n  reason: string;\n}\n\nexport interface ApproveTimeCorrectionData {\n  requestId: string;\n  approverId: string;\n  approved: boolean;\n  comments?: string;\n}\n\nexport interface TimeCorrectionWithDetails extends TimeCorrectionRequest {\n  employeeCode: string;\n  employeeName: string;\n  departmentName: string | null;\n  approverName: string | null;\n}\n\nexport class TimeCorrectionService {\n  /**\n   * Create a time correction request\n   */\n  async createTimeCorrectionRequest(data: CreateTimeCorrectionData): Promise<TimeCorrectionRequest> {\n    const { employeeId, requestDate, sessionType, requestedTime, reason } = data;\n\n    // Verify employee exists and is active\n    const employee = await employeeModel.findById(employeeId);\n    if (!employee) {\n      throw new Error('Employee not found');\n    }\n\n    if (employee.status !== 'active') {\n      throw new Error('Employee is not active');\n    }\n\n    // Validate request date (cannot be in the future)\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n    if (requestDate > today) {\n      throw new Error('Cannot request correction for future dates');\n    }\n\n    // Check if there's already a pending request for the same date and session type\n    const existingRequest = await this.getExistingRequest(employeeId, requestDate, sessionType);\n    if (existingRequest) {\n      throw new Error('A pending time correction request already exists for this date and session type');\n    }\n\n    // Create the time correction request\n    const requestData: CreateTimeCorrectionRequestData = {\n      employeeId,\n      requestDate,\n      sessionType,\n      requestedTime,\n      reason\n    };\n\n    const request = await timeCorrectionRequestModel.createTimeCorrectionRequest(requestData);\n\n    logger.info('Time correction request created', {\n      requestId: request.id,\n      employeeId,\n      employeeCode: employee.employee_id,\n      requestDate,\n      sessionType,\n      requestedTime,\n      reason\n    });\n\n    return request;\n  }\n\n  /**\n   * Get time correction request by ID\n   */\n  async getTimeCorrectionRequest(id: string): Promise<TimeCorrectionWithDetails | null> {\n    return await timeCorrectionRequestModel.findByIdWithDetails(id);\n  }\n\n  /**\n   * Update time correction request\n   */\n  async updateTimeCorrectionRequest(id: string, data: UpdateTimeCorrectionRequestData): Promise<TimeCorrectionRequest | null> {\n    return await timeCorrectionRequestModel.updateTimeCorrectionRequest(id, data);\n  }\n\n  /**\n   * List time correction requests with filtering\n   */\n  async listTimeCorrectionRequests(params: {\n    page?: number;\n    limit?: number;\n    employeeId?: string;\n    departmentId?: string;\n    status?: 'pending' | 'approved' | 'rejected';\n    sessionType?: 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out';\n    startDate?: Date;\n    endDate?: Date;\n    search?: string;\n    sortBy?: string;\n    sortOrder?: 'asc' | 'desc';\n  } = {}): Promise<{\n    requests: TimeCorrectionWithDetails[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    return await timeCorrectionRequestModel.listTimeCorrectionRequests(params);\n  }\n\n  /**\n   * Get pending requests for a department head\n   */\n  async getPendingRequestsForDepartmentHead(departmentHeadUserId: string): Promise<TimeCorrectionWithDetails[]> {\n    return await timeCorrectionRequestModel.getPendingRequestsForDepartmentHead(departmentHeadUserId);\n  }\n\n  /**\n   * Approve or reject a time correction request\n   */\n  async approveTimeCorrectionRequest(data: ApproveTimeCorrectionData): Promise<TimeCorrectionRequest> {\n    const { requestId, approverId, approved, comments } = data;\n\n    // Get the request\n    const request = await timeCorrectionRequestModel.findById(requestId);\n    if (!request) {\n      throw new Error('Time correction request not found');\n    }\n\n    if (request.status !== 'pending') {\n      throw new Error('Request has already been processed');\n    }\n\n    // Update the request status\n    const updateData: UpdateTimeCorrectionRequestData = {\n      status: approved ? 'approved' : 'rejected',\n      approvedBy: approverId,\n      approvedAt: new Date()\n    };\n\n    const updatedRequest = await timeCorrectionRequestModel.updateTimeCorrectionRequest(requestId, updateData);\n    if (!updatedRequest) {\n      throw new Error('Failed to update time correction request');\n    }\n\n    // If approved, apply the time correction\n    if (approved) {\n      await this.applyTimeCorrection(updatedRequest);\n    }\n\n    logger.info('Time correction request processed', {\n      requestId,\n      approverId,\n      approved,\n      comments,\n      employeeId: request.employeeId,\n      requestDate: request.requestDate,\n      sessionType: request.sessionType,\n      requestedTime: request.requestedTime\n    });\n\n    return updatedRequest;\n  }\n\n  /**\n   * Apply approved time correction to attendance records\n   */\n  private async applyTimeCorrection(request: TimeCorrectionRequest): Promise<void> {\n    const { employeeId, requestDate, sessionType, requestedTime } = request;\n\n    // Get or create attendance record for the date\n    let attendanceRecord = await attendanceRecordModel.findByEmployeeAndDate(employeeId, requestDate);\n    \n    if (!attendanceRecord) {\n      attendanceRecord = await attendanceRecordModel.createAttendanceRecord({\n        employeeId,\n        date: requestDate,\n        overallStatus: 'present'\n      });\n    }\n\n    // Check if session already exists\n    const existingSessions = await attendanceSessionModel.getSessionsByAttendanceRecord(attendanceRecord.id);\n    const existingSession = existingSessions.find(s => s.sessionType === sessionType);\n\n    if (existingSession) {\n      // Update existing session\n      await attendanceSessionModel.updateAttendanceSession(existingSession.id, {\n        timestamp: requestedTime\n      });\n    } else {\n      // Create new session\n      await attendanceSessionModel.createAttendanceSession({\n        attendanceRecordId: attendanceRecord.id,\n        sessionType,\n        timestamp: requestedTime\n      });\n    }\n\n    // Recalculate overall status\n    const totalHours = await this.calculateDailyHours(attendanceRecord.id);\n    let overallStatus: 'present' | 'late' | 'absent' | 'partial' = 'present';\n    \n    if (totalHours < 4) {\n      overallStatus = 'partial';\n    } else if (totalHours < 8) {\n      overallStatus = 'late';\n    }\n\n    await attendanceRecordModel.updateAttendanceRecord(attendanceRecord.id, {\n      overallStatus\n    });\n\n    logger.info('Time correction applied successfully', {\n      requestId: request.id,\n      employeeId,\n      requestDate,\n      sessionType,\n      requestedTime,\n      totalHours,\n      overallStatus\n    });\n  }\n\n  /**\n   * Get existing time correction request\n   */\n  private async getExistingRequest(\n    employeeId: string, \n    requestDate: Date, \n    sessionType: 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out'\n  ): Promise<TimeCorrectionRequest | null> {\n    const query = `\n      SELECT \n        id,\n        employee_id as \"employeeId\",\n        correction_date as \"requestDate\",\n        session_type as \"sessionType\",\n        requested_clock_in as \"requestedClockIn\",\n        requested_clock_out as \"requestedClockOut\",\n        reason,\n        status,\n        approver_id as \"approvedBy\",\n        approved_at as \"approvedAt\",\n        created_at as \"createdAt\",\n        updated_at as \"updatedAt\"\n      FROM time_correction_requests\n      WHERE employee_id = $1 \n        AND correction_date = $2 \n        AND session_type = $3 \n        AND status = 'pending'\n    `;\n\n    const result = await getPool().query(query, [employeeId, requestDate, sessionType]);\n    if (result.rows.length === 0) {\n      return null;\n    }\n\n    // Transform the result to match the interface\n    const row = result.rows[0];\n    return {\n      ...row,\n      requestedTime: row.sessionType === 'clock_in' ? row.requestedClockIn : row.requestedClockOut\n    };\n  }\n\n  /**\n   * Calculate daily hours for an attendance record using the new mathematical formulation\n   */\n  private async calculateDailyHours(attendanceRecordId: string): Promise<number> {\n    const sessions = await attendanceSessionModel.getSessionsByAttendanceRecord(attendanceRecordId);\n    \n    // Use the new hours calculator\n    const result = defaultHoursCalculator.calculateFromSessions(sessions);\n    \n    return result.totalHours;\n  }\n\n  /**\n   * Get time correction request statistics\n   */\n  async getTimeCorrectionStats(employeeId?: string, departmentId?: string): Promise<{\n    totalRequests: number;\n    pendingRequests: number;\n    approvedRequests: number;\n    rejectedRequests: number;\n  }> {\n    return await timeCorrectionRequestModel.getTimeCorrectionRequestStats(employeeId, departmentId);\n  }\n\n  /**\n   * Delete time correction request\n   */\n  async deleteTimeCorrectionRequest(id: string): Promise<boolean> {\n    const request = await timeCorrectionRequestModel.findById(id);\n    if (!request) {\n      throw new Error('Time correction request not found');\n    }\n\n    if (request.status !== 'pending') {\n      throw new Error('Cannot delete processed requests');\n    }\n\n    return await timeCorrectionRequestModel.deleteTimeCorrectionRequest(id);\n  }\n\n  /**\n   * Get time correction requests for an employee\n   */\n  async getEmployeeTimeCorrectionRequests(\n    employeeId: string,\n    startDate?: Date,\n    endDate?: Date,\n    page: number = 1,\n    limit: number = 20\n  ): Promise<{\n    requests: TimeCorrectionWithDetails[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    return await timeCorrectionRequestModel.listTimeCorrectionRequests({\n      employeeId,\n      startDate,\n      endDate,\n      page,\n      limit,\n      sortBy: 'created_at',\n      sortOrder: 'desc'\n    });\n  }\n\n  /**\n   * Validate time correction request\n   */\n  async validateTimeCorrectionRequest(data: CreateTimeCorrectionData): Promise<{\n    isValid: boolean;\n    errors: string[];\n  }> {\n    const errors: string[] = [];\n\n    // Check if employee exists\n    const employee = await employeeModel.findById(data.employeeId);\n    if (!employee) {\n      errors.push('Employee not found');\n    } else if (employee.status !== 'active') {\n      errors.push('Employee is not active');\n    }\n\n    // Validate request date\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n    if (data.requestDate > today) {\n      errors.push('Cannot request correction for future dates');\n    }\n\n    // Validate requested time\n    if (data.requestedTime > new Date()) {\n      errors.push('Requested time cannot be in the future');\n    }\n\n    // Validate reason\n    if (!data.reason || data.reason.trim().length < 10) {\n      errors.push('Reason must be at least 10 characters long');\n    }\n\n    // Check for existing pending request\n    if (employee) {\n      const existingRequest = await this.getExistingRequest(\n        data.employeeId, \n        data.requestDate, \n        data.sessionType\n      );\n      if (existingRequest) {\n        errors.push('A pending time correction request already exists for this date and session type');\n      }\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n}\n\nexport const timeCorrectionService = new TimeCorrectionService();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fca867deba8da707672a405e3db0ea83dc28b685"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ft8dm7n3c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ft8dm7n3c();
var __importDefault =
/* istanbul ignore next */
(cov_1ft8dm7n3c().s[0]++,
/* istanbul ignore next */
(cov_1ft8dm7n3c().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ft8dm7n3c().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1ft8dm7n3c().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1ft8dm7n3c().f[0]++;
  cov_1ft8dm7n3c().s[1]++;
  return /* istanbul ignore next */(cov_1ft8dm7n3c().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1ft8dm7n3c().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1ft8dm7n3c().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1ft8dm7n3c().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1ft8dm7n3c().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ft8dm7n3c().s[3]++;
exports.timeCorrectionService = exports.TimeCorrectionService = void 0;
const TimeCorrectionRequest_1 =
/* istanbul ignore next */
(cov_1ft8dm7n3c().s[4]++, require("../../models/attendance/TimeCorrectionRequest"));
const AttendanceRecord_1 =
/* istanbul ignore next */
(cov_1ft8dm7n3c().s[5]++, require("../../models/attendance/AttendanceRecord"));
const AttendanceSession_1 =
/* istanbul ignore next */
(cov_1ft8dm7n3c().s[6]++, require("../../models/attendance/AttendanceSession"));
const Employee_1 =
/* istanbul ignore next */
(cov_1ft8dm7n3c().s[7]++, require("../../models/hr/Employee"));
const database_1 =
/* istanbul ignore next */
(cov_1ft8dm7n3c().s[8]++, require("../../config/database"));
const logger_1 =
/* istanbul ignore next */
(cov_1ft8dm7n3c().s[9]++, __importDefault(require("../../utils/logger")));
const attendanceHoursCalculator_1 =
/* istanbul ignore next */
(cov_1ft8dm7n3c().s[10]++, require("../../utils/attendanceHoursCalculator"));
class TimeCorrectionService {
  /**
   * Create a time correction request
   */
  async createTimeCorrectionRequest(data) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[1]++;
    const {
      employeeId,
      requestDate,
      sessionType,
      requestedTime,
      reason
    } =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[11]++, data);
    // Verify employee exists and is active
    const employee =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[12]++, await Employee_1.employeeModel.findById(employeeId));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[13]++;
    if (!employee) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[3][0]++;
      cov_1ft8dm7n3c().s[14]++;
      throw new Error('Employee not found');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[3][1]++;
    }
    cov_1ft8dm7n3c().s[15]++;
    if (employee.status !== 'active') {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[4][0]++;
      cov_1ft8dm7n3c().s[16]++;
      throw new Error('Employee is not active');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[4][1]++;
    }
    // Validate request date (cannot be in the future)
    const today =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[17]++, new Date());
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[18]++;
    today.setHours(23, 59, 59, 999);
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[19]++;
    if (requestDate > today) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[5][0]++;
      cov_1ft8dm7n3c().s[20]++;
      throw new Error('Cannot request correction for future dates');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[5][1]++;
    }
    // Check if there's already a pending request for the same date and session type
    const existingRequest =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[21]++, await this.getExistingRequest(employeeId, requestDate, sessionType));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[22]++;
    if (existingRequest) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[6][0]++;
      cov_1ft8dm7n3c().s[23]++;
      throw new Error('A pending time correction request already exists for this date and session type');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[6][1]++;
    }
    // Create the time correction request
    const requestData =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[24]++, {
      employeeId,
      requestDate,
      sessionType,
      requestedTime,
      reason
    });
    const request =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[25]++, await TimeCorrectionRequest_1.timeCorrectionRequestModel.createTimeCorrectionRequest(requestData));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[26]++;
    logger_1.default.info('Time correction request created', {
      requestId: request.id,
      employeeId,
      employeeCode: employee.employee_id,
      requestDate,
      sessionType,
      requestedTime,
      reason
    });
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[27]++;
    return request;
  }
  /**
   * Get time correction request by ID
   */
  async getTimeCorrectionRequest(id) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[2]++;
    cov_1ft8dm7n3c().s[28]++;
    return await TimeCorrectionRequest_1.timeCorrectionRequestModel.findByIdWithDetails(id);
  }
  /**
   * Update time correction request
   */
  async updateTimeCorrectionRequest(id, data) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[3]++;
    cov_1ft8dm7n3c().s[29]++;
    return await TimeCorrectionRequest_1.timeCorrectionRequestModel.updateTimeCorrectionRequest(id, data);
  }
  /**
   * List time correction requests with filtering
   */
  async listTimeCorrectionRequests(params =
  /* istanbul ignore next */
  (cov_1ft8dm7n3c().b[7][0]++, {})) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[4]++;
    cov_1ft8dm7n3c().s[30]++;
    return await TimeCorrectionRequest_1.timeCorrectionRequestModel.listTimeCorrectionRequests(params);
  }
  /**
   * Get pending requests for a department head
   */
  async getPendingRequestsForDepartmentHead(departmentHeadUserId) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[5]++;
    cov_1ft8dm7n3c().s[31]++;
    return await TimeCorrectionRequest_1.timeCorrectionRequestModel.getPendingRequestsForDepartmentHead(departmentHeadUserId);
  }
  /**
   * Approve or reject a time correction request
   */
  async approveTimeCorrectionRequest(data) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[6]++;
    const {
      requestId,
      approverId,
      approved,
      comments
    } =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[32]++, data);
    // Get the request
    const request =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[33]++, await TimeCorrectionRequest_1.timeCorrectionRequestModel.findById(requestId));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[34]++;
    if (!request) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[8][0]++;
      cov_1ft8dm7n3c().s[35]++;
      throw new Error('Time correction request not found');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[8][1]++;
    }
    cov_1ft8dm7n3c().s[36]++;
    if (request.status !== 'pending') {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[9][0]++;
      cov_1ft8dm7n3c().s[37]++;
      throw new Error('Request has already been processed');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[9][1]++;
    }
    // Update the request status
    const updateData =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[38]++, {
      status: approved ?
      /* istanbul ignore next */
      (cov_1ft8dm7n3c().b[10][0]++, 'approved') :
      /* istanbul ignore next */
      (cov_1ft8dm7n3c().b[10][1]++, 'rejected'),
      approvedBy: approverId,
      approvedAt: new Date()
    });
    const updatedRequest =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[39]++, await TimeCorrectionRequest_1.timeCorrectionRequestModel.updateTimeCorrectionRequest(requestId, updateData));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[40]++;
    if (!updatedRequest) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[11][0]++;
      cov_1ft8dm7n3c().s[41]++;
      throw new Error('Failed to update time correction request');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[11][1]++;
    }
    // If approved, apply the time correction
    cov_1ft8dm7n3c().s[42]++;
    if (approved) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[12][0]++;
      cov_1ft8dm7n3c().s[43]++;
      await this.applyTimeCorrection(updatedRequest);
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[12][1]++;
    }
    cov_1ft8dm7n3c().s[44]++;
    logger_1.default.info('Time correction request processed', {
      requestId,
      approverId,
      approved,
      comments,
      employeeId: request.employeeId,
      requestDate: request.requestDate,
      sessionType: request.sessionType,
      requestedTime: request.requestedTime
    });
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[45]++;
    return updatedRequest;
  }
  /**
   * Apply approved time correction to attendance records
   */
  async applyTimeCorrection(request) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[7]++;
    const {
      employeeId,
      requestDate,
      sessionType,
      requestedTime
    } =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[46]++, request);
    // Get or create attendance record for the date
    let attendanceRecord =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[47]++, await AttendanceRecord_1.attendanceRecordModel.findByEmployeeAndDate(employeeId, requestDate));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[48]++;
    if (!attendanceRecord) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[13][0]++;
      cov_1ft8dm7n3c().s[49]++;
      attendanceRecord = await AttendanceRecord_1.attendanceRecordModel.createAttendanceRecord({
        employeeId,
        date: requestDate,
        overallStatus: 'present'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[13][1]++;
    }
    // Check if session already exists
    const existingSessions =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[50]++, await AttendanceSession_1.attendanceSessionModel.getSessionsByAttendanceRecord(attendanceRecord.id));
    const existingSession =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[51]++, existingSessions.find(s => {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().f[8]++;
      cov_1ft8dm7n3c().s[52]++;
      return s.sessionType === sessionType;
    }));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[53]++;
    if (existingSession) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[14][0]++;
      cov_1ft8dm7n3c().s[54]++;
      // Update existing session
      await AttendanceSession_1.attendanceSessionModel.updateAttendanceSession(existingSession.id, {
        timestamp: requestedTime
      });
    } else {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[14][1]++;
      cov_1ft8dm7n3c().s[55]++;
      // Create new session
      await AttendanceSession_1.attendanceSessionModel.createAttendanceSession({
        attendanceRecordId: attendanceRecord.id,
        sessionType,
        timestamp: requestedTime
      });
    }
    // Recalculate overall status
    const totalHours =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[56]++, await this.calculateDailyHours(attendanceRecord.id));
    let overallStatus =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[57]++, 'present');
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[58]++;
    if (totalHours < 4) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[15][0]++;
      cov_1ft8dm7n3c().s[59]++;
      overallStatus = 'partial';
    } else {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[15][1]++;
      cov_1ft8dm7n3c().s[60]++;
      if (totalHours < 8) {
        /* istanbul ignore next */
        cov_1ft8dm7n3c().b[16][0]++;
        cov_1ft8dm7n3c().s[61]++;
        overallStatus = 'late';
      } else
      /* istanbul ignore next */
      {
        cov_1ft8dm7n3c().b[16][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[62]++;
    await AttendanceRecord_1.attendanceRecordModel.updateAttendanceRecord(attendanceRecord.id, {
      overallStatus
    });
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[63]++;
    logger_1.default.info('Time correction applied successfully', {
      requestId: request.id,
      employeeId,
      requestDate,
      sessionType,
      requestedTime,
      totalHours,
      overallStatus
    });
  }
  /**
   * Get existing time correction request
   */
  async getExistingRequest(employeeId, requestDate, sessionType) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[9]++;
    const query =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[64]++, `
      SELECT 
        id,
        employee_id as "employeeId",
        correction_date as "requestDate",
        session_type as "sessionType",
        requested_clock_in as "requestedClockIn",
        requested_clock_out as "requestedClockOut",
        reason,
        status,
        approver_id as "approvedBy",
        approved_at as "approvedAt",
        created_at as "createdAt",
        updated_at as "updatedAt"
      FROM time_correction_requests
      WHERE employee_id = $1 
        AND correction_date = $2 
        AND session_type = $3 
        AND status = 'pending'
    `);
    const result =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[65]++, await (0, database_1.getPool)().query(query, [employeeId, requestDate, sessionType]));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[66]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[17][0]++;
      cov_1ft8dm7n3c().s[67]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[17][1]++;
    }
    // Transform the result to match the interface
    const row =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[68]++, result.rows[0]);
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[69]++;
    return {
      ...row,
      requestedTime: row.sessionType === 'clock_in' ?
      /* istanbul ignore next */
      (cov_1ft8dm7n3c().b[18][0]++, row.requestedClockIn) :
      /* istanbul ignore next */
      (cov_1ft8dm7n3c().b[18][1]++, row.requestedClockOut)
    };
  }
  /**
   * Calculate daily hours for an attendance record using the new mathematical formulation
   */
  async calculateDailyHours(attendanceRecordId) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[10]++;
    const sessions =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[70]++, await AttendanceSession_1.attendanceSessionModel.getSessionsByAttendanceRecord(attendanceRecordId));
    // Use the new hours calculator
    const result =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[71]++, attendanceHoursCalculator_1.defaultHoursCalculator.calculateFromSessions(sessions));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[72]++;
    return result.totalHours;
  }
  /**
   * Get time correction request statistics
   */
  async getTimeCorrectionStats(employeeId, departmentId) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[11]++;
    cov_1ft8dm7n3c().s[73]++;
    return await TimeCorrectionRequest_1.timeCorrectionRequestModel.getTimeCorrectionRequestStats(employeeId, departmentId);
  }
  /**
   * Delete time correction request
   */
  async deleteTimeCorrectionRequest(id) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[12]++;
    const request =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[74]++, await TimeCorrectionRequest_1.timeCorrectionRequestModel.findById(id));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[75]++;
    if (!request) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[19][0]++;
      cov_1ft8dm7n3c().s[76]++;
      throw new Error('Time correction request not found');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[19][1]++;
    }
    cov_1ft8dm7n3c().s[77]++;
    if (request.status !== 'pending') {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[20][0]++;
      cov_1ft8dm7n3c().s[78]++;
      throw new Error('Cannot delete processed requests');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[20][1]++;
    }
    cov_1ft8dm7n3c().s[79]++;
    return await TimeCorrectionRequest_1.timeCorrectionRequestModel.deleteTimeCorrectionRequest(id);
  }
  /**
   * Get time correction requests for an employee
   */
  async getEmployeeTimeCorrectionRequests(employeeId, startDate, endDate, page =
  /* istanbul ignore next */
  (cov_1ft8dm7n3c().b[21][0]++, 1), limit =
  /* istanbul ignore next */
  (cov_1ft8dm7n3c().b[22][0]++, 20)) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[13]++;
    cov_1ft8dm7n3c().s[80]++;
    return await TimeCorrectionRequest_1.timeCorrectionRequestModel.listTimeCorrectionRequests({
      employeeId,
      startDate,
      endDate,
      page,
      limit,
      sortBy: 'created_at',
      sortOrder: 'desc'
    });
  }
  /**
   * Validate time correction request
   */
  async validateTimeCorrectionRequest(data) {
    /* istanbul ignore next */
    cov_1ft8dm7n3c().f[14]++;
    const errors =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[81]++, []);
    // Check if employee exists
    const employee =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[82]++, await Employee_1.employeeModel.findById(data.employeeId));
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[83]++;
    if (!employee) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[23][0]++;
      cov_1ft8dm7n3c().s[84]++;
      errors.push('Employee not found');
    } else {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[23][1]++;
      cov_1ft8dm7n3c().s[85]++;
      if (employee.status !== 'active') {
        /* istanbul ignore next */
        cov_1ft8dm7n3c().b[24][0]++;
        cov_1ft8dm7n3c().s[86]++;
        errors.push('Employee is not active');
      } else
      /* istanbul ignore next */
      {
        cov_1ft8dm7n3c().b[24][1]++;
      }
    }
    // Validate request date
    const today =
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().s[87]++, new Date());
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[88]++;
    today.setHours(23, 59, 59, 999);
    /* istanbul ignore next */
    cov_1ft8dm7n3c().s[89]++;
    if (data.requestDate > today) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[25][0]++;
      cov_1ft8dm7n3c().s[90]++;
      errors.push('Cannot request correction for future dates');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[25][1]++;
    }
    // Validate requested time
    cov_1ft8dm7n3c().s[91]++;
    if (data.requestedTime > new Date()) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[26][0]++;
      cov_1ft8dm7n3c().s[92]++;
      errors.push('Requested time cannot be in the future');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[26][1]++;
    }
    // Validate reason
    cov_1ft8dm7n3c().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().b[28][0]++, !data.reason) ||
    /* istanbul ignore next */
    (cov_1ft8dm7n3c().b[28][1]++, data.reason.trim().length < 10)) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[27][0]++;
      cov_1ft8dm7n3c().s[94]++;
      errors.push('Reason must be at least 10 characters long');
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[27][1]++;
    }
    // Check for existing pending request
    cov_1ft8dm7n3c().s[95]++;
    if (employee) {
      /* istanbul ignore next */
      cov_1ft8dm7n3c().b[29][0]++;
      const existingRequest =
      /* istanbul ignore next */
      (cov_1ft8dm7n3c().s[96]++, await this.getExistingRequest(data.employeeId, data.requestDate, data.sessionType));
      /* istanbul ignore next */
      cov_1ft8dm7n3c().s[97]++;
      if (existingRequest) {
        /* istanbul ignore next */
        cov_1ft8dm7n3c().b[30][0]++;
        cov_1ft8dm7n3c().s[98]++;
        errors.push('A pending time correction request already exists for this date and session type');
      } else
      /* istanbul ignore next */
      {
        cov_1ft8dm7n3c().b[30][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ft8dm7n3c().b[29][1]++;
    }
    cov_1ft8dm7n3c().s[99]++;
    return {
      isValid: errors.length === 0,
      errors
    };
  }
}
/* istanbul ignore next */
cov_1ft8dm7n3c().s[100]++;
exports.TimeCorrectionService = TimeCorrectionService;
/* istanbul ignore next */
cov_1ft8dm7n3c().s[101]++;
exports.timeCorrectionService = new TimeCorrectionService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,