a01b7b4f052fff63ceb0c325566e8653
"use strict";

/* istanbul ignore next */
function cov_guy4e4fj4() {
  var path = "/home/kim/tito/server/src/routes/attendance/overtimeRoutes.ts";
  var hash = "74c65a6122acf9ac3f976b11b7df29b3e0a4645f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/routes/attendance/overtimeRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 29
        },
        end: {
          line: 4,
          column: 87
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 68
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 38
        }
      },
      "6": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 122
        }
      },
      "8": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 133
        }
      },
      "9": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 135
        }
      },
      "10": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 149
        }
      },
      "11": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 134
        }
      },
      "12": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 133
        }
      },
      "13": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 55,
          column: 146
        }
      },
      "14": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 140
        }
      },
      "15": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 67,
          column: 127
        }
      },
      "16": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 25
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/home/kim/tito/server/src/routes/attendance/overtimeRoutes.ts",
      mappings: ";;AAAA,qCAAiC;AACjC,wFAAqF;AACrF,qEAAkE;AAClE,+DAA4D;AAE5D,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,qCAAqC;AACrC,MAAM,CAAC,GAAG,CAAC,2BAAY,CAAC,CAAC;AAEzB;;;;GAIG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAA,qBAAS,EAAC,CAAC,UAAU,CAAC,CAAC,EAAE,uCAAkB,CAAC,qBAAqB,CAAC,CAAC;AAEpF;;;;;GAKG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAA,qBAAS,EAAC,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,EAAE,uCAAkB,CAAC,oBAAoB,CAAC,CAAC;AAE/F;;;;;GAKG;AACH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,IAAA,qBAAS,EAAC,CAAC,UAAU,CAAC,CAAC,EAAE,uCAAkB,CAAC,2BAA2B,CAAC,CAAC;AAEjG;;;;GAIG;AACH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,IAAA,qBAAS,EAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,uCAAkB,CAAC,mCAAmC,CAAC,CAAC;AAE/G;;;;;GAKG;AACH,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAA,qBAAS,EAAC,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,EAAE,uCAAkB,CAAC,gBAAgB,CAAC,CAAC;AAEhG;;;;;GAKG;AACH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,IAAA,qBAAS,EAAC,CAAC,UAAU,CAAC,CAAC,EAAE,uCAAkB,CAAC,0BAA0B,CAAC,CAAC;AAE/F;;;;GAIG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAA,qBAAS,EAAC,CAAC,UAAU,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAC,EAAE,uCAAkB,CAAC,kBAAkB,CAAC,CAAC;AAE5G;;;;GAIG;AACH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,IAAA,qBAAS,EAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,uCAAkB,CAAC,sBAAsB,CAAC,CAAC;AAEtG;;;;GAIG;AACH,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAA,qBAAS,EAAC,CAAC,UAAU,CAAC,CAAC,EAAE,uCAAkB,CAAC,qBAAqB,CAAC,CAAC;AAEzF,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["/home/kim/tito/server/src/routes/attendance/overtimeRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\nimport { overtimeController } from '../../controllers/attendance/overtimeController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { authorize } from '../../middleware/auth/authorize';\n\nconst router = Router();\n\n// Apply authentication to all routes\nrouter.use(authenticate);\n\n/**\n * @route POST /api/v1/overtime\n * @desc Create an overtime request\n * @access Employee\n */\nrouter.post('/', authorize(['employee']), overtimeController.createOvertimeRequest);\n\n/**\n * @route GET /api/v1/overtime\n * @desc List overtime requests\n * @access HR, Department Head\n * @query page, limit, employeeId, departmentId, status, startDate, endDate, search, sortBy, sortOrder\n */\nrouter.get('/', authorize(['hr', 'department_head']), overtimeController.listOvertimeRequests);\n\n/**\n * @route GET /api/v1/overtime/employee\n * @desc Get employee's overtime requests\n * @access Employee\n * @query startDate, endDate, page, limit\n */\nrouter.get('/employee', authorize(['employee']), overtimeController.getEmployeeOvertimeRequests);\n\n/**\n * @route GET /api/v1/overtime/pending\n * @desc Get pending requests for department head\n * @access Department Head\n */\nrouter.get('/pending', authorize(['department_head']), overtimeController.getPendingRequestsForDepartmentHead);\n\n/**\n * @route GET /api/v1/overtime/stats\n * @desc Get overtime statistics\n * @access HR, Department Head\n * @query employeeId, departmentId\n */\nrouter.get('/stats', authorize(['hr', 'department_head']), overtimeController.getOvertimeStats);\n\n/**\n * @route GET /api/v1/overtime/summary\n * @desc Get employee overtime summary\n * @access Employee\n * @query startDate, endDate\n */\nrouter.get('/summary', authorize(['employee']), overtimeController.getEmployeeOvertimeSummary);\n\n/**\n * @route GET /api/v1/overtime/:id\n * @desc Get overtime request by ID\n * @access Employee, HR, Department Head\n */\nrouter.get('/:id', authorize(['employee', 'hr', 'department_head']), overtimeController.getOvertimeRequest);\n\n/**\n * @route PUT /api/v1/overtime/:id/approve\n * @desc Approve or reject an overtime request\n * @access Department Head\n */\nrouter.put('/:id/approve', authorize(['department_head']), overtimeController.approveOvertimeRequest);\n\n/**\n * @route DELETE /api/v1/overtime/:id\n * @desc Delete an overtime request\n * @access Employee (own requests only)\n */\nrouter.delete('/:id', authorize(['employee']), overtimeController.deleteOvertimeRequest);\n\nexport default router;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "74c65a6122acf9ac3f976b11b7df29b3e0a4645f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_guy4e4fj4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_guy4e4fj4();
cov_guy4e4fj4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_guy4e4fj4().s[1]++, require("express"));
const overtimeController_1 =
/* istanbul ignore next */
(cov_guy4e4fj4().s[2]++, require("../../controllers/attendance/overtimeController"));
const authenticate_1 =
/* istanbul ignore next */
(cov_guy4e4fj4().s[3]++, require("../../middleware/auth/authenticate"));
const authorize_1 =
/* istanbul ignore next */
(cov_guy4e4fj4().s[4]++, require("../../middleware/auth/authorize"));
const router =
/* istanbul ignore next */
(cov_guy4e4fj4().s[5]++, (0, express_1.Router)());
// Apply authentication to all routes
/* istanbul ignore next */
cov_guy4e4fj4().s[6]++;
router.use(authenticate_1.authenticate);
/**
 * @route POST /api/v1/overtime
 * @desc Create an overtime request
 * @access Employee
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[7]++;
router.post('/', (0, authorize_1.authorize)(['employee']), overtimeController_1.overtimeController.createOvertimeRequest);
/**
 * @route GET /api/v1/overtime
 * @desc List overtime requests
 * @access HR, Department Head
 * @query page, limit, employeeId, departmentId, status, startDate, endDate, search, sortBy, sortOrder
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[8]++;
router.get('/', (0, authorize_1.authorize)(['hr', 'department_head']), overtimeController_1.overtimeController.listOvertimeRequests);
/**
 * @route GET /api/v1/overtime/employee
 * @desc Get employee's overtime requests
 * @access Employee
 * @query startDate, endDate, page, limit
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[9]++;
router.get('/employee', (0, authorize_1.authorize)(['employee']), overtimeController_1.overtimeController.getEmployeeOvertimeRequests);
/**
 * @route GET /api/v1/overtime/pending
 * @desc Get pending requests for department head
 * @access Department Head
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[10]++;
router.get('/pending', (0, authorize_1.authorize)(['department_head']), overtimeController_1.overtimeController.getPendingRequestsForDepartmentHead);
/**
 * @route GET /api/v1/overtime/stats
 * @desc Get overtime statistics
 * @access HR, Department Head
 * @query employeeId, departmentId
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[11]++;
router.get('/stats', (0, authorize_1.authorize)(['hr', 'department_head']), overtimeController_1.overtimeController.getOvertimeStats);
/**
 * @route GET /api/v1/overtime/summary
 * @desc Get employee overtime summary
 * @access Employee
 * @query startDate, endDate
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[12]++;
router.get('/summary', (0, authorize_1.authorize)(['employee']), overtimeController_1.overtimeController.getEmployeeOvertimeSummary);
/**
 * @route GET /api/v1/overtime/:id
 * @desc Get overtime request by ID
 * @access Employee, HR, Department Head
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[13]++;
router.get('/:id', (0, authorize_1.authorize)(['employee', 'hr', 'department_head']), overtimeController_1.overtimeController.getOvertimeRequest);
/**
 * @route PUT /api/v1/overtime/:id/approve
 * @desc Approve or reject an overtime request
 * @access Department Head
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[14]++;
router.put('/:id/approve', (0, authorize_1.authorize)(['department_head']), overtimeController_1.overtimeController.approveOvertimeRequest);
/**
 * @route DELETE /api/v1/overtime/:id
 * @desc Delete an overtime request
 * @access Employee (own requests only)
 */
/* istanbul ignore next */
cov_guy4e4fj4().s[15]++;
router.delete('/:id', (0, authorize_1.authorize)(['employee']), overtimeController_1.overtimeController.deleteOvertimeRequest);
/* istanbul ignore next */
cov_guy4e4fj4().s[16]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZ3V5NGU0Zmo0IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiZXhwcmVzc18xIiwicmVxdWlyZSIsIm92ZXJ0aW1lQ29udHJvbGxlcl8xIiwiYXV0aGVudGljYXRlXzEiLCJhdXRob3JpemVfMSIsInJvdXRlciIsIlJvdXRlciIsInVzZSIsImF1dGhlbnRpY2F0ZSIsInBvc3QiLCJhdXRob3JpemUiLCJvdmVydGltZUNvbnRyb2xsZXIiLCJjcmVhdGVPdmVydGltZVJlcXVlc3QiLCJnZXQiLCJsaXN0T3ZlcnRpbWVSZXF1ZXN0cyIsImdldEVtcGxveWVlT3ZlcnRpbWVSZXF1ZXN0cyIsImdldFBlbmRpbmdSZXF1ZXN0c0ZvckRlcGFydG1lbnRIZWFkIiwiZ2V0T3ZlcnRpbWVTdGF0cyIsImdldEVtcGxveWVlT3ZlcnRpbWVTdW1tYXJ5IiwiZ2V0T3ZlcnRpbWVSZXF1ZXN0IiwicHV0IiwiYXBwcm92ZU92ZXJ0aW1lUmVxdWVzdCIsImRlbGV0ZSIsImRlbGV0ZU92ZXJ0aW1lUmVxdWVzdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiL2hvbWUva2ltL3RpdG8vc2VydmVyL3NyYy9yb3V0ZXMvYXR0ZW5kYW5jZS9vdmVydGltZVJvdXRlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IG92ZXJ0aW1lQ29udHJvbGxlciB9IGZyb20gJy4uLy4uL2NvbnRyb2xsZXJzL2F0dGVuZGFuY2Uvb3ZlcnRpbWVDb250cm9sbGVyJztcbmltcG9ydCB7IGF1dGhlbnRpY2F0ZSB9IGZyb20gJy4uLy4uL21pZGRsZXdhcmUvYXV0aC9hdXRoZW50aWNhdGUnO1xuaW1wb3J0IHsgYXV0aG9yaXplIH0gZnJvbSAnLi4vLi4vbWlkZGxld2FyZS9hdXRoL2F1dGhvcml6ZSc7XG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG4vLyBBcHBseSBhdXRoZW50aWNhdGlvbiB0byBhbGwgcm91dGVzXG5yb3V0ZXIudXNlKGF1dGhlbnRpY2F0ZSk7XG5cbi8qKlxuICogQHJvdXRlIFBPU1QgL2FwaS92MS9vdmVydGltZVxuICogQGRlc2MgQ3JlYXRlIGFuIG92ZXJ0aW1lIHJlcXVlc3RcbiAqIEBhY2Nlc3MgRW1wbG95ZWVcbiAqL1xucm91dGVyLnBvc3QoJy8nLCBhdXRob3JpemUoWydlbXBsb3llZSddKSwgb3ZlcnRpbWVDb250cm9sbGVyLmNyZWF0ZU92ZXJ0aW1lUmVxdWVzdCk7XG5cbi8qKlxuICogQHJvdXRlIEdFVCAvYXBpL3YxL292ZXJ0aW1lXG4gKiBAZGVzYyBMaXN0IG92ZXJ0aW1lIHJlcXVlc3RzXG4gKiBAYWNjZXNzIEhSLCBEZXBhcnRtZW50IEhlYWRcbiAqIEBxdWVyeSBwYWdlLCBsaW1pdCwgZW1wbG95ZWVJZCwgZGVwYXJ0bWVudElkLCBzdGF0dXMsIHN0YXJ0RGF0ZSwgZW5kRGF0ZSwgc2VhcmNoLCBzb3J0QnksIHNvcnRPcmRlclxuICovXG5yb3V0ZXIuZ2V0KCcvJywgYXV0aG9yaXplKFsnaHInLCAnZGVwYXJ0bWVudF9oZWFkJ10pLCBvdmVydGltZUNvbnRyb2xsZXIubGlzdE92ZXJ0aW1lUmVxdWVzdHMpO1xuXG4vKipcbiAqIEByb3V0ZSBHRVQgL2FwaS92MS9vdmVydGltZS9lbXBsb3llZVxuICogQGRlc2MgR2V0IGVtcGxveWVlJ3Mgb3ZlcnRpbWUgcmVxdWVzdHNcbiAqIEBhY2Nlc3MgRW1wbG95ZWVcbiAqIEBxdWVyeSBzdGFydERhdGUsIGVuZERhdGUsIHBhZ2UsIGxpbWl0XG4gKi9cbnJvdXRlci5nZXQoJy9lbXBsb3llZScsIGF1dGhvcml6ZShbJ2VtcGxveWVlJ10pLCBvdmVydGltZUNvbnRyb2xsZXIuZ2V0RW1wbG95ZWVPdmVydGltZVJlcXVlc3RzKTtcblxuLyoqXG4gKiBAcm91dGUgR0VUIC9hcGkvdjEvb3ZlcnRpbWUvcGVuZGluZ1xuICogQGRlc2MgR2V0IHBlbmRpbmcgcmVxdWVzdHMgZm9yIGRlcGFydG1lbnQgaGVhZFxuICogQGFjY2VzcyBEZXBhcnRtZW50IEhlYWRcbiAqL1xucm91dGVyLmdldCgnL3BlbmRpbmcnLCBhdXRob3JpemUoWydkZXBhcnRtZW50X2hlYWQnXSksIG92ZXJ0aW1lQ29udHJvbGxlci5nZXRQZW5kaW5nUmVxdWVzdHNGb3JEZXBhcnRtZW50SGVhZCk7XG5cbi8qKlxuICogQHJvdXRlIEdFVCAvYXBpL3YxL292ZXJ0aW1lL3N0YXRzXG4gKiBAZGVzYyBHZXQgb3ZlcnRpbWUgc3RhdGlzdGljc1xuICogQGFjY2VzcyBIUiwgRGVwYXJ0bWVudCBIZWFkXG4gKiBAcXVlcnkgZW1wbG95ZWVJZCwgZGVwYXJ0bWVudElkXG4gKi9cbnJvdXRlci5nZXQoJy9zdGF0cycsIGF1dGhvcml6ZShbJ2hyJywgJ2RlcGFydG1lbnRfaGVhZCddKSwgb3ZlcnRpbWVDb250cm9sbGVyLmdldE92ZXJ0aW1lU3RhdHMpO1xuXG4vKipcbiAqIEByb3V0ZSBHRVQgL2FwaS92MS9vdmVydGltZS9zdW1tYXJ5XG4gKiBAZGVzYyBHZXQgZW1wbG95ZWUgb3ZlcnRpbWUgc3VtbWFyeVxuICogQGFjY2VzcyBFbXBsb3llZVxuICogQHF1ZXJ5IHN0YXJ0RGF0ZSwgZW5kRGF0ZVxuICovXG5yb3V0ZXIuZ2V0KCcvc3VtbWFyeScsIGF1dGhvcml6ZShbJ2VtcGxveWVlJ10pLCBvdmVydGltZUNvbnRyb2xsZXIuZ2V0RW1wbG95ZWVPdmVydGltZVN1bW1hcnkpO1xuXG4vKipcbiAqIEByb3V0ZSBHRVQgL2FwaS92MS9vdmVydGltZS86aWRcbiAqIEBkZXNjIEdldCBvdmVydGltZSByZXF1ZXN0IGJ5IElEXG4gKiBAYWNjZXNzIEVtcGxveWVlLCBIUiwgRGVwYXJ0bWVudCBIZWFkXG4gKi9cbnJvdXRlci5nZXQoJy86aWQnLCBhdXRob3JpemUoWydlbXBsb3llZScsICdocicsICdkZXBhcnRtZW50X2hlYWQnXSksIG92ZXJ0aW1lQ29udHJvbGxlci5nZXRPdmVydGltZVJlcXVlc3QpO1xuXG4vKipcbiAqIEByb3V0ZSBQVVQgL2FwaS92MS9vdmVydGltZS86aWQvYXBwcm92ZVxuICogQGRlc2MgQXBwcm92ZSBvciByZWplY3QgYW4gb3ZlcnRpbWUgcmVxdWVzdFxuICogQGFjY2VzcyBEZXBhcnRtZW50IEhlYWRcbiAqL1xucm91dGVyLnB1dCgnLzppZC9hcHByb3ZlJywgYXV0aG9yaXplKFsnZGVwYXJ0bWVudF9oZWFkJ10pLCBvdmVydGltZUNvbnRyb2xsZXIuYXBwcm92ZU92ZXJ0aW1lUmVxdWVzdCk7XG5cbi8qKlxuICogQHJvdXRlIERFTEVURSAvYXBpL3YxL292ZXJ0aW1lLzppZFxuICogQGRlc2MgRGVsZXRlIGFuIG92ZXJ0aW1lIHJlcXVlc3RcbiAqIEBhY2Nlc3MgRW1wbG95ZWUgKG93biByZXF1ZXN0cyBvbmx5KVxuICovXG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgYXV0aG9yaXplKFsnZW1wbG95ZWUnXSksIG92ZXJ0aW1lQ29udHJvbGxlci5kZWxldGVPdmVydGltZVJlcXVlc3QpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFpQkE7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7QUFqQkEsTUFBQUMsU0FBQTtBQUFBO0FBQUEsQ0FBQUgsYUFBQSxHQUFBRSxDQUFBLE9BQUFFLE9BQUE7QUFDQSxNQUFBQyxvQkFBQTtBQUFBO0FBQUEsQ0FBQUwsYUFBQSxHQUFBRSxDQUFBLE9B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