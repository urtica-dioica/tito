051b1e50d04bde48e90f810f2193f773
"use strict";

/* istanbul ignore next */
function cov_esx51xm5y() {
  var path = "/home/kim/tito/server/src/models/hr/SystemSettings.ts";
  var hash = "1954491255c6cec95336527f6200c30cfe4ec02e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/models/hr/SystemSettings.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 37
        }
      },
      "4": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 51
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 63
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "7": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "9": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 20,
          column: 7
        }
      },
      "10": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 26,
          column: 13
        }
      },
      "11": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 60
        }
      },
      "12": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "14": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 27
        }
      },
      "15": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 100
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 24
        }
      },
      "17": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "18": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 48
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "20": {
        start: {
          line: 46,
          column: 26
        },
        end: {
          line: 46,
          column: 71
        }
      },
      "21": {
        start: {
          line: 47,
          column: 27
        },
        end: {
          line: 47,
          column: 58
        }
      },
      "22": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 42
        }
      },
      "23": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 103
        }
      },
      "24": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 24
        }
      },
      "25": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 29
        }
      },
      "26": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 48
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "28": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 80
        }
      },
      "29": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 59
        }
      },
      "30": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "31": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 105
        }
      },
      "32": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 24
        }
      },
      "33": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 29
        }
      },
      "34": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 48
        }
      },
      "35": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "36": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "37": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 80,
          column: 52
        }
      },
      "38": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 31
        }
      },
      "39": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 94
        }
      },
      "40": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "41": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 29
        }
      },
      "42": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 48
        }
      },
      "43": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "44": {
        start: {
          line: 94,
          column: 27
        },
        end: {
          line: 94,
          column: 29
        }
      },
      "45": {
        start: {
          line: 95,
          column: 27
        },
        end: {
          line: 95,
          column: 29
        }
      },
      "46": {
        start: {
          line: 96,
          column: 29
        },
        end: {
          line: 96,
          column: 30
        }
      },
      "47": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "48": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 64
        }
      },
      "49": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "50": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "51": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 60
        }
      },
      "52": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 44
        }
      },
      "53": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "54": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 62
        }
      },
      "55": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 46
        }
      },
      "56": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "57": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 47
        }
      },
      "58": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 58
        }
      },
      "59": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 28
        }
      },
      "60": {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 119,
          column: 7
        }
      },
      "61": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 120,
          column: 60
        }
      },
      "62": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "63": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 28
        }
      },
      "64": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 94
        }
      },
      "65": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 34
        }
      },
      "66": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 104
        }
      },
      "67": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 24
        }
      },
      "68": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 29
        }
      },
      "69": {
        start: {
          line: 136,
          column: 23
        },
        end: {
          line: 136,
          column: 48
        }
      },
      "70": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "71": {
        start: {
          line: 138,
          column: 26
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "72": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 144,
          column: 66
        }
      },
      "73": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "74": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 28
        }
      },
      "75": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 105
        }
      },
      "76": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 34
        }
      },
      "77": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 113
        }
      },
      "78": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 24
        }
      },
      "79": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 29
        }
      },
      "80": {
        start: {
          line: 160,
          column: 23
        },
        end: {
          line: 160,
          column: 48
        }
      },
      "81": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "82": {
        start: {
          line: 162,
          column: 26
        },
        end: {
          line: 162,
          column: 69
        }
      },
      "83": {
        start: {
          line: 163,
          column: 27
        },
        end: {
          line: 163,
          column: 58
        }
      },
      "84": {
        start: {
          line: 164,
          column: 28
        },
        end: {
          line: 164,
          column: 54
        }
      },
      "85": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "86": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 83
        }
      },
      "87": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 27
        }
      },
      "88": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 98
        }
      },
      "89": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 24
        }
      },
      "90": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 29
        }
      },
      "91": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 179,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 73
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 27
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 91
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 34
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 135
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 21
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 159
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 32
          }
        }, {
          start: {
            line: 25,
            column: 36
          },
          end: {
            line: 25,
            column: 40
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 41
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 63,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 63,
            column: 33
          }
        }, {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 63,
            column: 41
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "9": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "10": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "11": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "12": {
        loc: {
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 44
          }
        }, {
          start: {
            line: 164,
            column: 48
          },
          end: {
            line: 164,
            column: 49
          }
        }],
        line: 164
      },
      "13": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/models/hr/SystemSettings.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/models/hr/SystemSettings.ts"],
      sourcesContent: ["import { getPool } from '../../config/database';\nimport logger from '../../utils/logger';\n\nexport interface SystemSetting {\n  id: string;\n  setting_key: string;\n  setting_value: string;\n  data_type: string;\n  description: string | null;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface CreateSystemSettingData {\n  setting_key: string;\n  setting_value: string;\n  data_type: string;\n  description?: string | null;\n}\n\nexport interface UpdateSystemSettingData {\n  setting_value?: string;\n  data_type?: string;\n  description?: string | null;\n}\n\nclass SystemSettingsModel {\n  private pool = getPool();\n\n  async create(data: CreateSystemSettingData): Promise<SystemSetting> {\n    const client = await this.pool.connect();\n    try {\n      const query = `\n        INSERT INTO system_settings (setting_key, setting_value, data_type, description)\n        VALUES ($1, $2, $3, $4)\n        RETURNING *\n      `;\n      const values = [\n        data.setting_key,\n        data.setting_value,\n        data.data_type,\n        data.description || null\n      ];\n      \n      const result = await client.query(query, values);\n      const setting = result.rows[0];\n      \n      logger.info('System setting created', { \n        settingId: setting.id, \n        settingKey: setting.setting_key \n      });\n      return setting;\n    } catch (error) {\n      logger.error('Error creating system setting', { error: (error as Error).message, data });\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n\n  async findById(id: string): Promise<SystemSetting | null> {\n    const client = await this.pool.connect();\n    try {\n      const query = 'SELECT * FROM system_settings WHERE id = $1';\n      const result = await client.query(query, [id]);\n      return result.rows[0] || null;\n    } catch (error) {\n      logger.error('Error finding system setting by ID', { error: (error as Error).message, id });\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n\n  async findByKey(key: string): Promise<SystemSetting | null> {\n    const client = await this.pool.connect();\n    try {\n      const query = 'SELECT * FROM system_settings WHERE setting_key = $1';\n      const result = await client.query(query, [key]);\n      return result.rows[0] || null;\n    } catch (error) {\n      logger.error('Error finding system setting by key', { error: (error as Error).message, key });\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n\n  async findAll(): Promise<SystemSetting[]> {\n    const client = await this.pool.connect();\n    try {\n      const query = `\n        SELECT * FROM system_settings \n        ORDER BY setting_key ASC\n      `;\n      const result = await client.query(query);\n      return result.rows;\n    } catch (error) {\n      logger.error('Error finding system settings', { error: (error as Error).message });\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n\n  async update(id: string, data: UpdateSystemSettingData): Promise<SystemSetting | null> {\n    const client = await this.pool.connect();\n    try {\n      const fields: string[] = [];\n      const values: any[] = [];\n      let paramIndex = 1;\n\n      if (data.setting_value !== undefined) {\n        fields.push(`setting_value = $${paramIndex++}`);\n        values.push(data.setting_value);\n      }\n\n      if (data.data_type !== undefined) {\n        fields.push(`data_type = $${paramIndex++}`);\n        values.push(data.data_type);\n      }\n\n      if (data.description !== undefined) {\n        fields.push(`description = $${paramIndex++}`);\n        values.push(data.description);\n      }\n\n      if (fields.length === 0) {\n        return await this.findById(id);\n      }\n\n      fields.push(`updated_at = CURRENT_TIMESTAMP`);\n      values.push(id);\n\n      const query = `\n        UPDATE system_settings \n        SET ${fields.join(', ')}\n        WHERE id = $${paramIndex}\n        RETURNING *\n      `;\n\n      const result = await client.query(query, values);\n      \n      if (result.rows.length === 0) {\n        return null;\n      }\n\n      logger.info('System setting updated', { settingId: id, updates: data });\n      return result.rows[0];\n    } catch (error) {\n      logger.error('Error updating system setting', { error: (error as Error).message, id, data });\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n\n  async updateByKey(key: string, value: string): Promise<SystemSetting | null> {\n    const client = await this.pool.connect();\n    try {\n      const query = `\n        UPDATE system_settings \n        SET setting_value = $1, updated_at = CURRENT_TIMESTAMP\n        WHERE setting_key = $2\n        RETURNING *\n      `;\n      const result = await client.query(query, [value, key]);\n      \n      if (result.rows.length === 0) {\n        return null;\n      }\n\n      logger.info('System setting updated by key', { settingKey: key, newValue: value });\n      return result.rows[0];\n    } catch (error) {\n      logger.error('Error updating system setting by key', { error: (error as Error).message, key, value });\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n\n  async delete(id: string): Promise<boolean> {\n    const client = await this.pool.connect();\n    try {\n      const query = 'DELETE FROM system_settings WHERE id = $1';\n      const result = await client.query(query, [id]);\n      \n      const deleted = (result.rowCount || 0) > 0;\n      if (deleted) {\n        logger.info('System setting deleted', { settingId: id });\n      }\n      \n      return deleted;\n    } catch (error) {\n      logger.error('Error deleting system setting', { error: (error as Error).message, id });\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n}\n\nexport const systemSettingsModel = new SystemSettingsModel();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1954491255c6cec95336527f6200c30cfe4ec02e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_esx51xm5y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_esx51xm5y();
var __importDefault =
/* istanbul ignore next */
(cov_esx51xm5y().s[0]++,
/* istanbul ignore next */
(cov_esx51xm5y().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_esx51xm5y().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_esx51xm5y().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_esx51xm5y().f[0]++;
  cov_esx51xm5y().s[1]++;
  return /* istanbul ignore next */(cov_esx51xm5y().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_esx51xm5y().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_esx51xm5y().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_esx51xm5y().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_esx51xm5y().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_esx51xm5y().s[3]++;
exports.systemSettingsModel = void 0;
const database_1 =
/* istanbul ignore next */
(cov_esx51xm5y().s[4]++, require("../../config/database"));
const logger_1 =
/* istanbul ignore next */
(cov_esx51xm5y().s[5]++, __importDefault(require("../../utils/logger")));
class SystemSettingsModel {
  constructor() {
    /* istanbul ignore next */
    cov_esx51xm5y().f[1]++;
    cov_esx51xm5y().s[6]++;
    this.pool = (0, database_1.getPool)();
  }
  async create(data) {
    /* istanbul ignore next */
    cov_esx51xm5y().f[2]++;
    const client =
    /* istanbul ignore next */
    (cov_esx51xm5y().s[7]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_esx51xm5y().s[8]++;
    try {
      const query =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[9]++, `
        INSERT INTO system_settings (setting_key, setting_value, data_type, description)
        VALUES ($1, $2, $3, $4)
        RETURNING *
      `);
      const values =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[10]++, [data.setting_key, data.setting_value, data.data_type,
      /* istanbul ignore next */
      (cov_esx51xm5y().b[3][0]++, data.description) ||
      /* istanbul ignore next */
      (cov_esx51xm5y().b[3][1]++, null)]);
      const result =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[11]++, await client.query(query, values));
      const setting =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[12]++, result.rows[0]);
      /* istanbul ignore next */
      cov_esx51xm5y().s[13]++;
      logger_1.default.info('System setting created', {
        settingId: setting.id,
        settingKey: setting.setting_key
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[14]++;
      return setting;
    } catch (error) {
      /* istanbul ignore next */
      cov_esx51xm5y().s[15]++;
      logger_1.default.error('Error creating system setting', {
        error: error.message,
        data
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[16]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_esx51xm5y().s[17]++;
      client.release();
    }
  }
  async findById(id) {
    /* istanbul ignore next */
    cov_esx51xm5y().f[3]++;
    const client =
    /* istanbul ignore next */
    (cov_esx51xm5y().s[18]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_esx51xm5y().s[19]++;
    try {
      const query =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[20]++, 'SELECT * FROM system_settings WHERE id = $1');
      const result =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[21]++, await client.query(query, [id]));
      /* istanbul ignore next */
      cov_esx51xm5y().s[22]++;
      return /* istanbul ignore next */(cov_esx51xm5y().b[4][0]++, result.rows[0]) ||
      /* istanbul ignore next */
      (cov_esx51xm5y().b[4][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_esx51xm5y().s[23]++;
      logger_1.default.error('Error finding system setting by ID', {
        error: error.message,
        id
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[24]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_esx51xm5y().s[25]++;
      client.release();
    }
  }
  async findByKey(key) {
    /* istanbul ignore next */
    cov_esx51xm5y().f[4]++;
    const client =
    /* istanbul ignore next */
    (cov_esx51xm5y().s[26]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_esx51xm5y().s[27]++;
    try {
      const query =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[28]++, 'SELECT * FROM system_settings WHERE setting_key = $1');
      const result =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[29]++, await client.query(query, [key]));
      /* istanbul ignore next */
      cov_esx51xm5y().s[30]++;
      return /* istanbul ignore next */(cov_esx51xm5y().b[5][0]++, result.rows[0]) ||
      /* istanbul ignore next */
      (cov_esx51xm5y().b[5][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_esx51xm5y().s[31]++;
      logger_1.default.error('Error finding system setting by key', {
        error: error.message,
        key
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[32]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_esx51xm5y().s[33]++;
      client.release();
    }
  }
  async findAll() {
    /* istanbul ignore next */
    cov_esx51xm5y().f[5]++;
    const client =
    /* istanbul ignore next */
    (cov_esx51xm5y().s[34]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_esx51xm5y().s[35]++;
    try {
      const query =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[36]++, `
        SELECT * FROM system_settings 
        ORDER BY setting_key ASC
      `);
      const result =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[37]++, await client.query(query));
      /* istanbul ignore next */
      cov_esx51xm5y().s[38]++;
      return result.rows;
    } catch (error) {
      /* istanbul ignore next */
      cov_esx51xm5y().s[39]++;
      logger_1.default.error('Error finding system settings', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[40]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_esx51xm5y().s[41]++;
      client.release();
    }
  }
  async update(id, data) {
    /* istanbul ignore next */
    cov_esx51xm5y().f[6]++;
    const client =
    /* istanbul ignore next */
    (cov_esx51xm5y().s[42]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_esx51xm5y().s[43]++;
    try {
      const fields =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[44]++, []);
      const values =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[45]++, []);
      let paramIndex =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[46]++, 1);
      /* istanbul ignore next */
      cov_esx51xm5y().s[47]++;
      if (data.setting_value !== undefined) {
        /* istanbul ignore next */
        cov_esx51xm5y().b[6][0]++;
        cov_esx51xm5y().s[48]++;
        fields.push(`setting_value = $${paramIndex++}`);
        /* istanbul ignore next */
        cov_esx51xm5y().s[49]++;
        values.push(data.setting_value);
      } else
      /* istanbul ignore next */
      {
        cov_esx51xm5y().b[6][1]++;
      }
      cov_esx51xm5y().s[50]++;
      if (data.data_type !== undefined) {
        /* istanbul ignore next */
        cov_esx51xm5y().b[7][0]++;
        cov_esx51xm5y().s[51]++;
        fields.push(`data_type = $${paramIndex++}`);
        /* istanbul ignore next */
        cov_esx51xm5y().s[52]++;
        values.push(data.data_type);
      } else
      /* istanbul ignore next */
      {
        cov_esx51xm5y().b[7][1]++;
      }
      cov_esx51xm5y().s[53]++;
      if (data.description !== undefined) {
        /* istanbul ignore next */
        cov_esx51xm5y().b[8][0]++;
        cov_esx51xm5y().s[54]++;
        fields.push(`description = $${paramIndex++}`);
        /* istanbul ignore next */
        cov_esx51xm5y().s[55]++;
        values.push(data.description);
      } else
      /* istanbul ignore next */
      {
        cov_esx51xm5y().b[8][1]++;
      }
      cov_esx51xm5y().s[56]++;
      if (fields.length === 0) {
        /* istanbul ignore next */
        cov_esx51xm5y().b[9][0]++;
        cov_esx51xm5y().s[57]++;
        return await this.findById(id);
      } else
      /* istanbul ignore next */
      {
        cov_esx51xm5y().b[9][1]++;
      }
      cov_esx51xm5y().s[58]++;
      fields.push(`updated_at = CURRENT_TIMESTAMP`);
      /* istanbul ignore next */
      cov_esx51xm5y().s[59]++;
      values.push(id);
      const query =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[60]++, `
        UPDATE system_settings 
        SET ${fields.join(', ')}
        WHERE id = $${paramIndex}
        RETURNING *
      `);
      const result =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[61]++, await client.query(query, values));
      /* istanbul ignore next */
      cov_esx51xm5y().s[62]++;
      if (result.rows.length === 0) {
        /* istanbul ignore next */
        cov_esx51xm5y().b[10][0]++;
        cov_esx51xm5y().s[63]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_esx51xm5y().b[10][1]++;
      }
      cov_esx51xm5y().s[64]++;
      logger_1.default.info('System setting updated', {
        settingId: id,
        updates: data
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[65]++;
      return result.rows[0];
    } catch (error) {
      /* istanbul ignore next */
      cov_esx51xm5y().s[66]++;
      logger_1.default.error('Error updating system setting', {
        error: error.message,
        id,
        data
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[67]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_esx51xm5y().s[68]++;
      client.release();
    }
  }
  async updateByKey(key, value) {
    /* istanbul ignore next */
    cov_esx51xm5y().f[7]++;
    const client =
    /* istanbul ignore next */
    (cov_esx51xm5y().s[69]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_esx51xm5y().s[70]++;
    try {
      const query =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[71]++, `
        UPDATE system_settings 
        SET setting_value = $1, updated_at = CURRENT_TIMESTAMP
        WHERE setting_key = $2
        RETURNING *
      `);
      const result =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[72]++, await client.query(query, [value, key]));
      /* istanbul ignore next */
      cov_esx51xm5y().s[73]++;
      if (result.rows.length === 0) {
        /* istanbul ignore next */
        cov_esx51xm5y().b[11][0]++;
        cov_esx51xm5y().s[74]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_esx51xm5y().b[11][1]++;
      }
      cov_esx51xm5y().s[75]++;
      logger_1.default.info('System setting updated by key', {
        settingKey: key,
        newValue: value
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[76]++;
      return result.rows[0];
    } catch (error) {
      /* istanbul ignore next */
      cov_esx51xm5y().s[77]++;
      logger_1.default.error('Error updating system setting by key', {
        error: error.message,
        key,
        value
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[78]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_esx51xm5y().s[79]++;
      client.release();
    }
  }
  async delete(id) {
    /* istanbul ignore next */
    cov_esx51xm5y().f[8]++;
    const client =
    /* istanbul ignore next */
    (cov_esx51xm5y().s[80]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_esx51xm5y().s[81]++;
    try {
      const query =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[82]++, 'DELETE FROM system_settings WHERE id = $1');
      const result =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[83]++, await client.query(query, [id]));
      const deleted =
      /* istanbul ignore next */
      (cov_esx51xm5y().s[84]++, (
      /* istanbul ignore next */
      (cov_esx51xm5y().b[12][0]++, result.rowCount) ||
      /* istanbul ignore next */
      (cov_esx51xm5y().b[12][1]++, 0)) > 0);
      /* istanbul ignore next */
      cov_esx51xm5y().s[85]++;
      if (deleted) {
        /* istanbul ignore next */
        cov_esx51xm5y().b[13][0]++;
        cov_esx51xm5y().s[86]++;
        logger_1.default.info('System setting deleted', {
          settingId: id
        });
      } else
      /* istanbul ignore next */
      {
        cov_esx51xm5y().b[13][1]++;
      }
      cov_esx51xm5y().s[87]++;
      return deleted;
    } catch (error) {
      /* istanbul ignore next */
      cov_esx51xm5y().s[88]++;
      logger_1.default.error('Error deleting system setting', {
        error: error.message,
        id
      });
      /* istanbul ignore next */
      cov_esx51xm5y().s[89]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_esx51xm5y().s[90]++;
      client.release();
    }
  }
}
/* istanbul ignore next */
cov_esx51xm5y().s[91]++;
exports.systemSettingsModel = new SystemSettingsModel();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,