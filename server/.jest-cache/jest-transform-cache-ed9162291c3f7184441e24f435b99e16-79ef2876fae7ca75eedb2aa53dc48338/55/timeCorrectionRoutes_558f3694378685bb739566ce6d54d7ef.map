{"version":3,"names":["cov_2m1v10kqlv","actualCoverage","s","express_1","require","timeCorrectionController_1","authenticate_1","authorize_1","router","Router","use","authenticate","post","authorize","timeCorrectionController","createTimeCorrectionRequest","get","listTimeCorrectionRequests","getEmployeeTimeCorrectionRequests","getPendingRequestsForDepartmentHead","getTimeCorrectionStats","getTimeCorrectionRequest","put","approveTimeCorrectionRequest","delete","deleteTimeCorrectionRequest","exports","default"],"sources":["/home/kim/tito/server/src/routes/attendance/timeCorrectionRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { timeCorrectionController } from '../../controllers/attendance/timeCorrectionController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { authorize } from '../../middleware/auth/authorize';\n\nconst router = Router();\n\n// Apply authentication to all routes\nrouter.use(authenticate);\n\n/**\n * @route POST /api/v1/time-corrections\n * @desc Create a time correction request\n * @access Employee\n */\nrouter.post('/', authorize(['employee']), timeCorrectionController.createTimeCorrectionRequest);\n\n/**\n * @route GET /api/v1/time-corrections\n * @desc List time correction requests\n * @access HR, Department Head\n * @query page, limit, employeeId, departmentId, status, sessionType, startDate, endDate, search, sortBy, sortOrder\n */\nrouter.get('/', authorize(['hr', 'department_head']), timeCorrectionController.listTimeCorrectionRequests);\n\n/**\n * @route GET /api/v1/time-corrections/employee\n * @desc Get employee's time correction requests\n * @access Employee\n * @query startDate, endDate, page, limit\n */\nrouter.get('/employee', authorize(['employee']), timeCorrectionController.getEmployeeTimeCorrectionRequests);\n\n/**\n * @route GET /api/v1/time-corrections/pending\n * @desc Get pending requests for department head\n * @access Department Head\n */\nrouter.get('/pending', authorize(['department_head']), timeCorrectionController.getPendingRequestsForDepartmentHead);\n\n/**\n * @route GET /api/v1/time-corrections/stats\n * @desc Get time correction statistics\n * @access HR, Department Head\n * @query employeeId, departmentId\n */\nrouter.get('/stats', authorize(['hr', 'department_head']), timeCorrectionController.getTimeCorrectionStats);\n\n/**\n * @route GET /api/v1/time-corrections/:id\n * @desc Get time correction request by ID\n * @access Employee, HR, Department Head\n */\nrouter.get('/:id', authorize(['employee', 'hr', 'department_head']), timeCorrectionController.getTimeCorrectionRequest);\n\n/**\n * @route PUT /api/v1/time-corrections/:id/approve\n * @desc Approve or reject a time correction request\n * @access Department Head\n */\nrouter.put('/:id/approve', authorize(['department_head']), timeCorrectionController.approveTimeCorrectionRequest);\n\n/**\n * @route DELETE /api/v1/time-corrections/:id\n * @desc Delete a time correction request\n * @access Employee (own requests only)\n */\nrouter.delete('/:id', authorize(['employee']), timeCorrectionController.deleteTimeCorrectionRequest);\n\nexport default router;"],"mappings":"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","ignoreList":[]}