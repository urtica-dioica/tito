eb6874c879fc846f061a9e85ef570be1
"use strict";

/* istanbul ignore next */
function cov_1nw8faz0o2() {
  var path = "/home/kim/tito/server/src/utils/logger.ts";
  var hash = "2f19ccf93646b6c42225dd90032f5e430436672d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/utils/logger.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "5": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "6": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 8
        }
      },
      "7": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 45
          }
        }],
        line: 9
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 0
          },
          end: {
            line: 33,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 0
          },
          end: {
            line: 33,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/utils/logger.ts",
      mappings: ";;;;;AAAA,sDAA8B;AAE9B,yBAAyB;AACzB,MAAM,MAAM,GAAG,iBAAO,CAAC,YAAY,CAAC;IAClC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,MAAM;IACzC,MAAM,EAAE,iBAAO,CAAC,MAAM,CAAC,OAAO,CAC5B,iBAAO,CAAC,MAAM,CAAC,SAAS,EAAE,EAC1B,iBAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EACtC,iBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CACtB;IACD,WAAW,EAAE,EAAE,OAAO,EAAE,gBAAgB,EAAE;IAC1C,UAAU,EAAE;QACV,2DAA2D;QAC3D,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;YAC1B,QAAQ,EAAE,gBAAgB;YAC1B,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,OAAO,EAAE,MAAM;YACxB,QAAQ,EAAE,CAAC;SACZ,CAAC;QACF,6DAA6D;QAC7D,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;YAC1B,QAAQ,EAAE,mBAAmB;YAC7B,OAAO,EAAE,OAAO,EAAE,MAAM;YACxB,QAAQ,EAAE,CAAC;SACZ,CAAC;KACH;CACF,CAAC,CAAC;AAEH,qDAAqD;AACrD,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,YAAY,EAAE,CAAC;IAC7C,MAAM,CAAC,GAAG,CAAC,IAAI,iBAAO,CAAC,UAAU,CAAC,OAAO,CAAC;QACxC,MAAM,EAAE,iBAAO,CAAC,MAAM,CAAC,OAAO,CAC5B,iBAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,EACzB,iBAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CACxB;KACF,CAAC,CAAC,CAAC;AACN,CAAC;AAED,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["/home/kim/tito/server/src/utils/logger.ts"],
      sourcesContent: ["import winston from 'winston';\n\n// Create logger instance\nconst logger = winston.createLogger({\n  level: process.env['LOG_LEVEL'] || 'info',\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.errors({ stack: true }),\n    winston.format.json()\n  ),\n  defaultMeta: { service: 'tito-hr-server' },\n  transports: [\n    // Write all logs with level 'error' and below to error.log\n    new winston.transports.File({ \n      filename: 'logs/error.log', \n      level: 'error',\n      maxsize: 5242880, // 5MB\n      maxFiles: 5\n    }),\n    // Write all logs with level 'info' and below to combined.log\n    new winston.transports.File({ \n      filename: 'logs/combined.log',\n      maxsize: 5242880, // 5MB\n      maxFiles: 5\n    })\n  ]\n});\n\n// If we're not in production, log to console as well\nif (process.env['NODE_ENV'] !== 'production') {\n  logger.add(new winston.transports.Console({\n    format: winston.format.combine(\n      winston.format.colorize(),\n      winston.format.simple()\n    )\n  }));\n}\n\nexport default logger; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f19ccf93646b6c42225dd90032f5e430436672d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nw8faz0o2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nw8faz0o2();
var __importDefault =
/* istanbul ignore next */
(cov_1nw8faz0o2().s[0]++,
/* istanbul ignore next */
(cov_1nw8faz0o2().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1nw8faz0o2().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1nw8faz0o2().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1nw8faz0o2().f[0]++;
  cov_1nw8faz0o2().s[1]++;
  return /* istanbul ignore next */(cov_1nw8faz0o2().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1nw8faz0o2().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1nw8faz0o2().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1nw8faz0o2().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1nw8faz0o2().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const winston_1 =
/* istanbul ignore next */
(cov_1nw8faz0o2().s[3]++, __importDefault(require("winston")));
// Create logger instance
const logger =
/* istanbul ignore next */
(cov_1nw8faz0o2().s[4]++, winston_1.default.createLogger({
  level:
  /* istanbul ignore next */
  (cov_1nw8faz0o2().b[3][0]++, process.env['LOG_LEVEL']) ||
  /* istanbul ignore next */
  (cov_1nw8faz0o2().b[3][1]++, 'info'),
  format: winston_1.default.format.combine(winston_1.default.format.timestamp(), winston_1.default.format.errors({
    stack: true
  }), winston_1.default.format.json()),
  defaultMeta: {
    service: 'tito-hr-server'
  },
  transports: [
  // Write all logs with level 'error' and below to error.log
  new winston_1.default.transports.File({
    filename: 'logs/error.log',
    level: 'error',
    maxsize: 5242880,
    // 5MB
    maxFiles: 5
  }),
  // Write all logs with level 'info' and below to combined.log
  new winston_1.default.transports.File({
    filename: 'logs/combined.log',
    maxsize: 5242880,
    // 5MB
    maxFiles: 5
  })]
}));
// If we're not in production, log to console as well
/* istanbul ignore next */
cov_1nw8faz0o2().s[5]++;
if (process.env['NODE_ENV'] !== 'production') {
  /* istanbul ignore next */
  cov_1nw8faz0o2().b[4][0]++;
  cov_1nw8faz0o2().s[6]++;
  logger.add(new winston_1.default.transports.Console({
    format: winston_1.default.format.combine(winston_1.default.format.colorize(), winston_1.default.format.simple())
  }));
} else
/* istanbul ignore next */
{
  cov_1nw8faz0o2().b[4][1]++;
}
cov_1nw8faz0o2().s[7]++;
exports.default = logger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW53OGZhejBvMiIsImFjdHVhbENvdmVyYWdlIiwid2luc3Rvbl8xIiwicyIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJsb2dnZXIiLCJkZWZhdWx0IiwiY3JlYXRlTG9nZ2VyIiwibGV2ZWwiLCJiIiwicHJvY2VzcyIsImVudiIsImZvcm1hdCIsImNvbWJpbmUiLCJ0aW1lc3RhbXAiLCJlcnJvcnMiLCJzdGFjayIsImpzb24iLCJkZWZhdWx0TWV0YSIsInNlcnZpY2UiLCJ0cmFuc3BvcnRzIiwiRmlsZSIsImZpbGVuYW1lIiwibWF4c2l6ZSIsIm1heEZpbGVzIiwiYWRkIiwiQ29uc29sZSIsImNvbG9yaXplIiwic2ltcGxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9ob21lL2tpbS90aXRvL3NlcnZlci9zcmMvdXRpbHMvbG9nZ2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB3aW5zdG9uIGZyb20gJ3dpbnN0b24nO1xuXG4vLyBDcmVhdGUgbG9nZ2VyIGluc3RhbmNlXG5jb25zdCBsb2dnZXIgPSB3aW5zdG9uLmNyZWF0ZUxvZ2dlcih7XG4gIGxldmVsOiBwcm9jZXNzLmVudlsnTE9HX0xFVkVMJ10gfHwgJ2luZm8nLFxuICBmb3JtYXQ6IHdpbnN0b24uZm9ybWF0LmNvbWJpbmUoXG4gICAgd2luc3Rvbi5mb3JtYXQudGltZXN0YW1wKCksXG4gICAgd2luc3Rvbi5mb3JtYXQuZXJyb3JzKHsgc3RhY2s6IHRydWUgfSksXG4gICAgd2luc3Rvbi5mb3JtYXQuanNvbigpXG4gICksXG4gIGRlZmF1bHRNZXRhOiB7IHNlcnZpY2U6ICd0aXRvLWhyLXNlcnZlcicgfSxcbiAgdHJhbnNwb3J0czogW1xuICAgIC8vIFdyaXRlIGFsbCBsb2dzIHdpdGggbGV2ZWwgJ2Vycm9yJyBhbmQgYmVsb3cgdG8gZXJyb3IubG9nXG4gICAgbmV3IHdpbnN0b24udHJhbnNwb3J0cy5GaWxlKHsgXG4gICAgICBmaWxlbmFtZTogJ2xvZ3MvZXJyb3IubG9nJywgXG4gICAgICBsZXZlbDogJ2Vycm9yJyxcbiAgICAgIG1heHNpemU6IDUyNDI4ODAsIC8vIDVNQlxuICAgICAgbWF4RmlsZXM6IDVcbiAgICB9KSxcbiAgICAvLyBXcml0ZSBhbGwgbG9ncyB3aXRoIGxldmVsICdpbmZvJyBhbmQgYmVsb3cgdG8gY29tYmluZWQubG9nXG4gICAgbmV3IHdpbnN0b24udHJhbnNwb3J0cy5GaWxlKHsgXG4gICAgICBmaWxlbmFtZTogJ2xvZ3MvY29tYmluZWQubG9nJyxcbiAgICAgIG1heHNpemU6IDUyNDI4ODAsIC8vIDVNQlxuICAgICAgbWF4RmlsZXM6IDVcbiAgICB9KVxuICBdXG59KTtcblxuLy8gSWYgd2UncmUgbm90IGluIHByb2R1Y3Rpb24sIGxvZyB0byBjb25zb2xlIGFzIHdlbGxcbmlmIChwcm9jZXNzLmVudlsnTk9ERV9FTlYnXSAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGxvZ2dlci5hZGQobmV3IHdpbnN0b24udHJhbnNwb3J0cy5Db25zb2xlKHtcbiAgICBmb3JtYXQ6IHdpbnN0b24uZm9ybWF0LmNvbWJpbmUoXG4gICAgICB3aW5zdG9uLmZvcm1hdC5jb2xvcml6ZSgpLFxuICAgICAgd2luc3Rvbi5mb3JtYXQuc2ltcGxlKClcbiAgICApXG4gIH0pKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyOyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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