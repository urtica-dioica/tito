{"file":"/home/kim/tito/server/tests/e2e/businessProcessE2E.test.ts","mappings":"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","names":[],"sources":["/home/kim/tito/server/tests/e2e/businessProcessE2E.test.ts"],"sourcesContent":["/**\n * Business Process End-to-End Tests\n * \n * Comprehensive testing of complete business processes including:\n * - Employee onboarding process\n * - Payroll processing process\n * - Leave management process\n * - Attendance management process\n */\n\nimport { E2ETestConfig } from './e2eTestUtils';\n// Mock axios for testing\nconst axios = {\n  create: () => ({\n    get: jest.fn(),\n    post: jest.fn(),\n    put: jest.fn(),\n    delete: jest.fn(),\n    patch: jest.fn(),\n    interceptors: {\n      request: { use: jest.fn() },\n      response: { use: jest.fn() }\n    }\n  })\n};\n\ndescribe('Business Process End-to-End Tests', () => {\n  // let e2eSuite: E2ETestSuite;\n  let config: E2ETestConfig;\n  let hrToken: string;\n  let employeeToken: string;\n\n  beforeAll(async () => {\n    config = {\n      baseURL: process.env.TEST_BASE_URL || 'http://localhost:3000',\n      timeout: 30000,\n      maxRetries: 3,\n      testUsers: {\n        hr: {\n          username: 'hr1',\n          password: 'HR123!',\n          role: 'hr'\n        },\n        departmentHead: {\n          username: 'depthead1',\n          password: 'DeptHead123!',\n          role: 'department_head'\n        },\n        employee: {\n          username: 'employee1',\n          password: 'Employee123!',\n          role: 'employee'\n        }\n      },\n      testData: {\n        department: {\n          name: 'Test Department E2E',\n          description: 'Test department for E2E testing'\n        },\n        employee: {\n          name: 'Test Employee E2E',\n          email: 'testemployee@example.com',\n          position: 'Test Position'\n        },\n        payroll: {\n          period: '2024-01',\n          amount: 50000\n        }\n      }\n    };\n\n    // e2eSuite = new E2ETestSuite(config);\n\n    // Get authentication tokens\n    try {\n      const hrLoginResponse = await axios.create().post(`${config.baseURL}/api/v1/auth/login`, {\n        username: config.testUsers.hr.username,\n        password: config.testUsers.hr.password\n      }, {\n        timeout: 10000,\n        validateStatus: () => true\n      });\n\n      if (hrLoginResponse.status === 200) {\n        hrToken = hrLoginResponse.data.token;\n      }\n\n      const employeeLoginResponse = await axios.create().post(`${config.baseURL}/api/v1/auth/login`, {\n        username: config.testUsers.employee.username,\n        password: config.testUsers.employee.password\n      }, {\n        timeout: 10000,\n        validateStatus: () => true\n      });\n\n      if (employeeLoginResponse.status === 200) {\n        employeeToken = employeeLoginResponse.data.token;\n      }\n    } catch (error) {\n      console.warn('Could not obtain test tokens, some tests may be skipped');\n    }\n  });\n\n  describe('Employee Onboarding Process', () => {\n    it('should complete full employee onboarding process', async () => {\n      const startTime = Date.now();\n      let departmentId: string;\n      let employeeId: string;\n      let userId: string;\n\n      try {\n        // Step 1: Create Department (if not exists)\n        console.log('🏢 Step 1: Create Department');\n        const departmentResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/departments`, {\n          name: `E2E Department ${Date.now()}`,\n          description: 'Department for E2E onboarding test'\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(departmentResponse.status).toBe(201);\n        departmentId = departmentResponse.data.id;\n        console.log('✅ Department created successfully');\n\n        // Step 2: Create User Account\n        console.log('👤 Step 2: Create User Account');\n        const userResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/users`, {\n          username: `e2euser${Date.now()}`,\n          email: `e2euser${Date.now()}@example.com`,\n          password: 'E2ETest123!',\n          role: 'employee'\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(userResponse.status).toBe(201);\n        userId = userResponse.data.id;\n        console.log('✅ User account created successfully');\n\n        // Step 3: Create Employee Record\n        console.log('👥 Step 3: Create Employee Record');\n        const employeeResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/employees`, {\n          user_id: userId,\n          name: `E2E Employee ${Date.now()}`,\n          email: `e2eemployee${Date.now()}@example.com`,\n          position: 'E2E Test Position',\n          department_id: departmentId,\n          hire_date: new Date().toISOString().split('T')[0],\n          base_salary: 50000\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(employeeResponse.status).toBe(201);\n        employeeId = employeeResponse.data.id;\n        console.log('✅ Employee record created successfully');\n\n        // Step 4: Generate Employee ID Card\n        console.log('🆔 Step 4: Generate Employee ID Card');\n        const idCardResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/employees/${employeeId}/id-card`, {}, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(idCardResponse.status).toBe(201);\n        console.log('✅ Employee ID card generated successfully');\n\n        // Step 5: Initialize Leave Balance\n        console.log('📊 Step 5: Initialize Leave Balance');\n        const leaveBalanceResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/employees/${employeeId}/leave-balance`, {\n          vacation_days: 15,\n          sick_days: 10\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(leaveBalanceResponse.status).toBe(201);\n        console.log('✅ Leave balance initialized successfully');\n\n        // Step 6: Set Up Employee Benefits\n        console.log('💰 Step 6: Set Up Employee Benefits');\n        const benefitsResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/employees/${employeeId}/benefits`, {\n          transportation_allowance: 5000,\n          meal_allowance: 3000\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(benefitsResponse.status).toBe(201);\n        console.log('✅ Employee benefits set up successfully');\n\n        // Step 7: Verify Employee Can Access System\n        console.log('🔐 Step 7: Verify Employee Can Access System');\n        const employeeLoginResponse = await axios.create().post(`${config.baseURL}/api/v1/auth/login`, {\n          username: `e2euser${Date.now()}`,\n          password: 'E2ETest123!'\n        }, {\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(employeeLoginResponse.status).toBe(200);\n        console.log('✅ Employee can access system successfully');\n\n        const endTime = Date.now();\n        const duration = endTime - startTime;\n        console.log(`🎉 Employee onboarding process completed successfully in ${duration}ms`);\n\n      } catch (error) {\n        console.error('❌ Employee onboarding process failed:', error instanceof Error ? error.message : String(error));\n        throw error;\n      }\n    }, 120000);\n\n    it('should handle onboarding process error scenarios', async () => {\n      try {\n        // Try to create employee without department\n        const invalidEmployeeResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/employees`, {\n          name: 'Test Employee',\n          email: 'test@example.com',\n          position: 'Test Position',\n          department_id: 99999 // Non-existent department\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(invalidEmployeeResponse.status).toBe(400);\n        console.log('✅ Employee creation without valid department properly rejected');\n\n        // Try to create employee with duplicate email\n        const duplicateEmailResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/employees`, {\n          name: 'Test Employee 2',\n          email: 'test@example.com', // Duplicate email\n          position: 'Test Position 2',\n          department_id: 1\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(duplicateEmailResponse.status).toBe(400);\n        console.log('✅ Employee creation with duplicate email properly rejected');\n\n      } catch (error) {\n        console.error('❌ Employee onboarding error scenario test failed:', error instanceof Error ? error.message : String(error));\n        throw error;\n      }\n    }, 30000);\n  });\n\n  describe('Payroll Processing Process', () => {\n    it('should complete full payroll processing process', async () => {\n      const startTime = Date.now();\n      let payrollPeriodId: string;\n      let payrollId: string;\n\n      try {\n        // Step 1: Create Payroll Period\n        console.log('📅 Step 1: Create Payroll Period');\n        const periodResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/payroll/periods`, {\n          name: `E2E Payroll Period ${Date.now()}`,\n          start_date: '2024-01-01',\n          end_date: '2024-01-31',\n          status: 'draft'\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(periodResponse.status).toBe(201);\n        payrollPeriodId = periodResponse.data.id;\n        console.log('✅ Payroll period created successfully');\n\n        // Step 2: Generate Payroll for All Employees\n        console.log('💰 Step 2: Generate Payroll for All Employees');\n        const generateResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/payroll/generate`, {\n          period_id: payrollPeriodId,\n          employee_ids: [] // Empty array means all employees\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(generateResponse.status).toBe(201);\n        payrollId = generateResponse.data.id;\n        console.log('✅ Payroll generated successfully');\n\n        // Step 3: Review Payroll Records\n        console.log('📊 Step 3: Review Payroll Records');\n        const reviewResponse = await axios.create().get(`${config.baseURL}/api/v1/hr/payroll/${payrollId}/records`, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(reviewResponse.status).toBe(200);\n        expect(Array.isArray(reviewResponse.data)).toBe(true);\n        console.log('✅ Payroll records reviewed successfully');\n\n        // Step 4: Approve Payroll\n        console.log('✅ Step 4: Approve Payroll');\n        const approveResponse = await axios.create().put(`${config.baseURL}/api/v1/hr/payroll/${payrollId}/approve`, {}, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(approveResponse.status).toBe(200);\n        console.log('✅ Payroll approved successfully');\n\n        // Step 5: Generate Payroll Report\n        console.log('📄 Step 5: Generate Payroll Report');\n        const reportResponse = await axios.create().get(`${config.baseURL}/api/v1/hr/payroll/${payrollId}/report`, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(reportResponse.status).toBe(200);\n        console.log('✅ Payroll report generated successfully');\n\n        // Step 6: Verify Employee Can View Paystub\n        console.log('👤 Step 6: Verify Employee Can View Paystub');\n        const paystubResponse = await axios.create().get(`${config.baseURL}/api/v1/employee/paystubs`, {\n          headers: { 'Authorization': `Bearer ${employeeToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(paystubResponse.status).toBe(200);\n        expect(Array.isArray(paystubResponse.data)).toBe(true);\n        console.log('✅ Employee can view paystub successfully');\n\n        const endTime = Date.now();\n        const duration = endTime - startTime;\n        console.log(`🎉 Payroll processing process completed successfully in ${duration}ms`);\n\n      } catch (error) {\n        console.error('❌ Payroll processing process failed:', error instanceof Error ? error.message : String(error));\n        throw error;\n      }\n    }, 120000);\n\n    it('should handle payroll processing error scenarios', async () => {\n      try {\n        // Try to generate payroll for non-existent period\n        const invalidPeriodResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/payroll/generate`, {\n          period_id: 99999, // Non-existent period\n          employee_ids: []\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(invalidPeriodResponse.status).toBe(400);\n        console.log('✅ Payroll generation for invalid period properly rejected');\n\n        // Try to approve non-existent payroll\n        const invalidApproveResponse = await axios.create().put(`${config.baseURL}/api/v1/hr/payroll/99999/approve`, {}, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(invalidApproveResponse.status).toBe(404);\n        console.log('✅ Approval of non-existent payroll properly rejected');\n\n      } catch (error) {\n        console.error('❌ Payroll processing error scenario test failed:', error instanceof Error ? error.message : String(error));\n        throw error;\n      }\n    }, 30000);\n  });\n\n  describe('Leave Management Process', () => {\n    it('should complete full leave management process', async () => {\n      const startTime = Date.now();\n      let leaveId: string;\n\n      try {\n        // Step 1: Employee Submits Leave Request\n        console.log('📋 Step 1: Employee Submits Leave Request');\n        const submitResponse = await axios.create().post(`${config.baseURL}/api/v1/employee/leaves`, {\n          type: 'vacation',\n          start_date: '2024-02-01',\n          end_date: '2024-02-05',\n          reason: 'Family vacation'\n        }, {\n          headers: { 'Authorization': `Bearer ${employeeToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(submitResponse.status).toBe(201);\n        leaveId = submitResponse.data.id;\n        console.log('✅ Leave request submitted successfully');\n\n        // Step 2: Department Head Reviews Leave Request\n        console.log('👥 Step 2: Department Head Reviews Leave Request');\n        const deptHeadToken = await (this as any).getDepartmentHeadToken();\n        \n        const reviewResponse = await axios.create().get(`${config.baseURL}/api/v1/department-head/leaves/pending`, {\n          headers: { 'Authorization': `Bearer ${deptHeadToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(reviewResponse.status).toBe(200);\n        expect(Array.isArray(reviewResponse.data)).toBe(true);\n        console.log('✅ Leave request reviewed by department head successfully');\n\n        // Step 3: Department Head Approves Leave Request\n        console.log('✅ Step 3: Department Head Approves Leave Request');\n        const approveResponse = await axios.create().put(`${config.baseURL}/api/v1/department-head/leaves/${leaveId}/approve`, {\n          comments: 'Approved for family vacation'\n        }, {\n          headers: { 'Authorization': `Bearer ${deptHeadToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(approveResponse.status).toBe(200);\n        console.log('✅ Leave request approved successfully');\n\n        // Step 4: Employee Views Approved Leave\n        console.log('👤 Step 4: Employee Views Approved Leave');\n        const viewLeaveResponse = await axios.create().get(`${config.baseURL}/api/v1/employee/leaves/${leaveId}`, {\n          headers: { 'Authorization': `Bearer ${employeeToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(viewLeaveResponse.status).toBe(200);\n        expect(viewLeaveResponse.data.status).toBe('approved');\n        console.log('✅ Employee can view approved leave successfully');\n\n        // Step 5: Update Leave Balance\n        console.log('📊 Step 5: Update Leave Balance');\n        const balanceResponse = await axios.create().get(`${config.baseURL}/api/v1/employee/leave-balance`, {\n          headers: { 'Authorization': `Bearer ${employeeToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(balanceResponse.status).toBe(200);\n        expect(balanceResponse.data).toBeDefined();\n        console.log('✅ Leave balance updated successfully');\n\n        // Step 6: HR Views Leave Report\n        console.log('📄 Step 6: HR Views Leave Report');\n        const reportResponse = await axios.create().get(`${config.baseURL}/api/v1/hr/leaves/report`, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(reportResponse.status).toBe(200);\n        console.log('✅ HR can view leave report successfully');\n\n        const endTime = Date.now();\n        const duration = endTime - startTime;\n        console.log(`🎉 Leave management process completed successfully in ${duration}ms`);\n\n      } catch (error) {\n        console.error('❌ Leave management process failed:', error instanceof Error ? error.message : String(error));\n        throw error;\n      }\n    }, 120000);\n\n    it('should handle leave management error scenarios', async () => {\n      try {\n        // Try to submit leave request with invalid dates\n        const invalidDateResponse = await axios.create().post(`${config.baseURL}/api/v1/employee/leaves`, {\n          type: 'vacation',\n          start_date: '2024-02-05', // End date before start date\n          end_date: '2024-02-01',\n          reason: 'Invalid date range'\n        }, {\n          headers: { 'Authorization': `Bearer ${employeeToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(invalidDateResponse.status).toBe(400);\n        console.log('✅ Leave request with invalid dates properly rejected');\n\n        // Try to approve non-existent leave request\n        const invalidApproveResponse = await axios.create().put(`${config.baseURL}/api/v1/department-head/leaves/99999/approve`, {\n          comments: 'Test approval'\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(invalidApproveResponse.status).toBe(404);\n        console.log('✅ Approval of non-existent leave request properly rejected');\n\n      } catch (error) {\n        console.error('❌ Leave management error scenario test failed:', error instanceof Error ? error.message : String(error));\n        throw error;\n      }\n    }, 30000);\n  });\n\n  describe('Attendance Management Process', () => {\n    it('should complete full attendance management process', async () => {\n      const startTime = Date.now();\n\n      try {\n        // Step 1: Employee Clocks In via Kiosk\n        console.log('⏰ Step 1: Employee Clocks In via Kiosk');\n        const clockInResponse = await axios.create().post(`${config.baseURL}/api/v1/kiosk/clock-in`, {\n          employee_id: 1,\n          selfie_image: 'base64-encoded-image-data'\n        }, {\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(clockInResponse.status).toBe(200);\n        expect(clockInResponse.data.attendance).toBeDefined();\n        console.log('✅ Employee clocked in successfully');\n\n        // Step 2: Employee Clocks Out via Kiosk\n        console.log('⏰ Step 2: Employee Clocks Out via Kiosk');\n        const clockOutResponse = await axios.create().post(`${config.baseURL}/api/v1/kiosk/clock-out`, {\n          employee_id: 1,\n          selfie_image: 'base64-encoded-image-data'\n        }, {\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(clockOutResponse.status).toBe(200);\n        expect(clockOutResponse.data.attendance).toBeDefined();\n        console.log('✅ Employee clocked out successfully');\n\n        // Step 3: Employee Views Attendance History\n        console.log('📊 Step 3: Employee Views Attendance History');\n        const historyResponse = await axios.create().get(`${config.baseURL}/api/v1/employee/attendance`, {\n          headers: { 'Authorization': `Bearer ${employeeToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(historyResponse.status).toBe(200);\n        expect(Array.isArray(historyResponse.data)).toBe(true);\n        console.log('✅ Employee attendance history viewed successfully');\n\n        // Step 4: Department Head Views Department Attendance\n        console.log('👥 Step 4: Department Head Views Department Attendance');\n        const deptHeadToken = await (this as any).getDepartmentHeadToken();\n        \n        const deptAttendanceResponse = await axios.create().get(`${config.baseURL}/api/v1/department-head/attendance/summary`, {\n          headers: { 'Authorization': `Bearer ${deptHeadToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(deptAttendanceResponse.status).toBe(200);\n        console.log('✅ Department attendance summary viewed successfully');\n\n        // Step 5: HR Views Attendance Reports\n        console.log('📄 Step 5: HR Views Attendance Reports');\n        const hrReportResponse = await axios.create().get(`${config.baseURL}/api/v1/hr/attendance/report`, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(hrReportResponse.status).toBe(200);\n        console.log('✅ HR attendance report viewed successfully');\n\n        // Step 6: Process Attendance for Payroll\n        console.log('💰 Step 6: Process Attendance for Payroll');\n        const processResponse = await axios.create().post(`${config.baseURL}/api/v1/hr/attendance/process`, {\n          date: new Date().toISOString().split('T')[0]\n        }, {\n          headers: { 'Authorization': `Bearer ${hrToken}` },\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect(processResponse.status).toBe(200);\n        console.log('✅ Attendance processed for payroll successfully');\n\n        const endTime = Date.now();\n        const duration = endTime - startTime;\n        console.log(`🎉 Attendance management process completed successfully in ${duration}ms`);\n\n      } catch (error) {\n        console.error('❌ Attendance management process failed:', error instanceof Error ? error.message : String(error));\n        throw error;\n      }\n    }, 120000);\n\n    it('should handle attendance management error scenarios', async () => {\n      try {\n        // Try to clock in for non-existent employee\n        const invalidClockInResponse = await axios.create().post(`${config.baseURL}/api/v1/kiosk/clock-in`, {\n          employee_id: 99999, // Non-existent employee\n          selfie_image: 'base64-encoded-image-data'\n        }, {\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect([400, 404]).toContain(invalidClockInResponse.status);\n        console.log('✅ Clock in for non-existent employee properly rejected');\n\n        // Try to clock out without clocking in first\n        const invalidClockOutResponse = await axios.create().post(`${config.baseURL}/api/v1/kiosk/clock-out`, {\n          employee_id: 1,\n          selfie_image: 'base64-encoded-image-data'\n        }, {\n          timeout: 10000,\n          validateStatus: () => true\n        });\n\n        expect([400, 404]).toContain(invalidClockOutResponse.status);\n        console.log('✅ Clock out without clock in properly rejected');\n\n      } catch (error) {\n        console.error('❌ Attendance management error scenario test failed:', error instanceof Error ? error.message : String(error));\n        throw error;\n      }\n    }, 30000);\n  });\n\n});\n"],"version":3}