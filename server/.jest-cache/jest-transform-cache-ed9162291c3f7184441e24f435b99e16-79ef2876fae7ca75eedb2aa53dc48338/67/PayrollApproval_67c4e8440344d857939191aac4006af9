791933f407a1bb17d1990c11dcae2e72
"use strict";

/* istanbul ignore next */
function cov_spdda2veg() {
  var path = "/home/kim/tito/server/src/models/payroll/PayrollApproval.ts";
  var hash = "daee7d7bc795fba2964cc9aafbe564b8e0b6fd73";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/models/payroll/PayrollApproval.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 38
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 51
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "4": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "6": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 60
        }
      },
      "8": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "9": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "10": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "11": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 60
        }
      },
      "13": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "14": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 57
        }
      },
      "15": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "16": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 24
        }
      },
      "17": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 71
        }
      },
      "18": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "19": {
        start: {
          line: 65,
          column: 23
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "20": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 26
        }
      },
      "21": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "22": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 54
        }
      },
      "23": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 37
        }
      },
      "24": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "25": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "26": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 56
        }
      },
      "27": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 39
        }
      },
      "28": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 25
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "30": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 59
        }
      },
      "31": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 41
        }
      },
      "32": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "33": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "34": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 37
        }
      },
      "35": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 57
        }
      },
      "36": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 24
        }
      },
      "37": {
        start: {
          line: 87,
          column: 22
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "38": {
        start: {
          line: 93,
          column: 23
        },
        end: {
          line: 93,
          column: 59
        }
      },
      "39": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "40": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 24
        }
      },
      "41": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 60
        }
      },
      "42": {
        start: {
          line: 100,
          column: 163
        },
        end: {
          line: 100,
          column: 169
        }
      },
      "43": {
        start: {
          line: 101,
          column: 23
        },
        end: {
          line: 101,
          column: 41
        }
      },
      "44": {
        start: {
          line: 102,
          column: 30
        },
        end: {
          line: 102,
          column: 32
        }
      },
      "45": {
        start: {
          line: 103,
          column: 21
        },
        end: {
          line: 103,
          column: 23
        }
      },
      "46": {
        start: {
          line: 104,
          column: 25
        },
        end: {
          line: 104,
          column: 26
        }
      },
      "47": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "48": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 74
        }
      },
      "49": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 41
        }
      },
      "50": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 25
        }
      },
      "51": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "52": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 68
        }
      },
      "53": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "54": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 25
        }
      },
      "55": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "56": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "57": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 38
        }
      },
      "58": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 25
        }
      },
      "59": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "60": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 63
        }
      },
      "61": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 32
        }
      },
      "62": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 25
        }
      },
      "63": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "64": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 68
        }
      },
      "65": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 35
        }
      },
      "66": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 25
        }
      },
      "67": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "68": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 68
        }
      },
      "69": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 33
        }
      },
      "70": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 25
        }
      },
      "71": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "72": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "73": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 39
        }
      },
      "74": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 25
        }
      },
      "75": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 148,
          column: 102
        }
      },
      "76": {
        start: {
          line: 150,
          column: 27
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "77": {
        start: {
          line: 158,
          column: 28
        },
        end: {
          line: 158,
          column: 69
        }
      },
      "78": {
        start: {
          line: 159,
          column: 22
        },
        end: {
          line: 159,
          column: 57
        }
      },
      "79": {
        start: {
          line: 161,
          column: 22
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "80": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 35
        }
      },
      "81": {
        start: {
          line: 186,
          column: 23
        },
        end: {
          line: 186,
          column: 59
        }
      },
      "82": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 187,
          column: 94
        }
      },
      "83": {
        start: {
          line: 187,
          column: 49
        },
        end: {
          line: 187,
          column: 93
        }
      },
      "84": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 194,
          column: 10
        }
      },
      "85": {
        start: {
          line: 197,
          column: 22
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "86": {
        start: {
          line: 220,
          column: 23
        },
        end: {
          line: 220,
          column: 65
        }
      },
      "87": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 84
        }
      },
      "88": {
        start: {
          line: 221,
          column: 38
        },
        end: {
          line: 221,
          column: 82
        }
      },
      "89": {
        start: {
          line: 224,
          column: 27
        },
        end: {
          line: 224,
          column: 67
        }
      },
      "90": {
        start: {
          line: 225,
          column: 28
        },
        end: {
          line: 225,
          column: 61
        }
      },
      "91": {
        start: {
          line: 226,
          column: 31
        },
        end: {
          line: 226,
          column: 66
        }
      },
      "92": {
        start: {
          line: 227,
          column: 28
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "93": {
        start: {
          line: 232,
          column: 29
        },
        end: {
          line: 232,
          column: 63
        }
      },
      "94": {
        start: {
          line: 233,
          column: 33
        },
        end: {
          line: 233,
          column: 96
        }
      },
      "95": {
        start: {
          line: 233,
          column: 61
        },
        end: {
          line: 233,
          column: 83
        }
      },
      "96": {
        start: {
          line: 234,
          column: 34
        },
        end: {
          line: 234,
          column: 98
        }
      },
      "97": {
        start: {
          line: 234,
          column: 62
        },
        end: {
          line: 234,
          column: 85
        }
      },
      "98": {
        start: {
          line: 235,
          column: 34
        },
        end: {
          line: 235,
          column: 98
        }
      },
      "99": {
        start: {
          line: 235,
          column: 62
        },
        end: {
          line: 235,
          column: 85
        }
      },
      "100": {
        start: {
          line: 236,
          column: 32
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "101": {
        start: {
          line: 245,
          column: 33
        },
        end: {
          line: 245,
          column: 71
        }
      },
      "102": {
        start: {
          line: 246,
          column: 30
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "103": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 256,
          column: 67
        }
      },
      "104": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "105": {
        start: {
          line: 267,
          column: 22
        },
        end: {
          line: 267,
          column: 67
        }
      },
      "106": {
        start: {
          line: 268,
          column: 23
        },
        end: {
          line: 268,
          column: 57
        }
      },
      "107": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 63
        }
      },
      "108": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 282,
          column: 10
        }
      },
      "109": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "110": {
        start: {
          line: 317,
          column: 0
        },
        end: {
          line: 317,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 38
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 34
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 42
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 63
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 44
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 99
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 187,
            column: 42
          },
          end: {
            line: 187,
            column: 43
          }
        },
        loc: {
          start: {
            line: 187,
            column: 49
          },
          end: {
            line: 187,
            column: 93
          }
        },
        line: 187
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 53
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 196
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 221,
            column: 31
          },
          end: {
            line: 221,
            column: 32
          }
        },
        loc: {
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 221,
            column: 82
          }
        },
        line: 221
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 29
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 223
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 233,
            column: 56
          },
          end: {
            line: 233,
            column: 57
          }
        },
        loc: {
          start: {
            line: 233,
            column: 61
          },
          end: {
            line: 233,
            column: 83
          }
        },
        line: 233
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 234,
            column: 57
          },
          end: {
            line: 234,
            column: 58
          }
        },
        loc: {
          start: {
            line: 234,
            column: 62
          },
          end: {
            line: 234,
            column: 85
          }
        },
        line: 234
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 235,
            column: 57
          },
          end: {
            line: 235,
            column: 58
          }
        },
        loc: {
          start: {
            line: 235,
            column: 62
          },
          end: {
            line: 235,
            column: 85
          }
        },
        line: 235
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        loc: {
          start: {
            line: 266,
            column: 36
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 266
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 33
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 271
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 44
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 284
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 29
          }
        }, {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 19,
            column: 37
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 23
          }
        }, {
          start: {
            line: 20,
            column: 27
          },
          end: {
            line: 20,
            column: 36
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 25
          }
        }, {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 33
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "10": {
        loc: {
          start: {
            line: 99,
            column: 31
          },
          end: {
            line: 99,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 40
          },
          end: {
            line: 99,
            column: 42
          }
        }],
        line: 99
      },
      "11": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 24
          }
        }],
        line: 100
      },
      "12": {
        loc: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 34
          },
          end: {
            line: 100,
            column: 36
          }
        }],
        line: 100
      },
      "13": {
        loc: {
          start: {
            line: 100,
            column: 117
          },
          end: {
            line: 100,
            column: 138
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 126
          },
          end: {
            line: 100,
            column: 138
          }
        }],
        line: 100
      },
      "14": {
        loc: {
          start: {
            line: 100,
            column: 140
          },
          end: {
            line: 100,
            column: 158
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 152
          },
          end: {
            line: 100,
            column: 158
          }
        }],
        line: 100
      },
      "15": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "18": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "19": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "20": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "21": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "22": {
        loc: {
          start: {
            line: 148,
            column: 28
          },
          end: {
            line: 148,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 57
          },
          end: {
            line: 148,
            column: 97
          }
        }, {
          start: {
            line: 148,
            column: 100
          },
          end: {
            line: 148,
            column: 102
          }
        }],
        line: 148
      },
      "23": {
        loc: {
          start: {
            line: 233,
            column: 33
          },
          end: {
            line: 233,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 33
          },
          end: {
            line: 233,
            column: 91
          }
        }, {
          start: {
            line: 233,
            column: 95
          },
          end: {
            line: 233,
            column: 96
          }
        }],
        line: 233
      },
      "24": {
        loc: {
          start: {
            line: 234,
            column: 34
          },
          end: {
            line: 234,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 34
          },
          end: {
            line: 234,
            column: 93
          }
        }, {
          start: {
            line: 234,
            column: 97
          },
          end: {
            line: 234,
            column: 98
          }
        }],
        line: 234
      },
      "25": {
        loc: {
          start: {
            line: 235,
            column: 34
          },
          end: {
            line: 235,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 34
          },
          end: {
            line: 235,
            column: 93
          }
        }, {
          start: {
            line: 235,
            column: 97
          },
          end: {
            line: 235,
            column: 98
          }
        }],
        line: 235
      },
      "26": {
        loc: {
          start: {
            line: 269,
            column: 15
          },
          end: {
            line: 269,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 15
          },
          end: {
            line: 269,
            column: 39
          }
        }, {
          start: {
            line: 269,
            column: 43
          },
          end: {
            line: 269,
            column: 62
          }
        }],
        line: 269
      },
      "27": {
        loc: {
          start: {
            line: 302,
            column: 24
          },
          end: {
            line: 306,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 44
          },
          end: {
            line: 306,
            column: 13
          }
        }, {
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 306,
            column: 20
          }
        }],
        line: 302
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/models/payroll/PayrollApproval.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/models/payroll/PayrollApproval.ts"],
      sourcesContent: ["import { Pool } from 'pg';\nimport { getPool } from '../../config/database';\n\nexport interface PayrollApproval {\n  id: string;\n  payrollPeriodId: string;\n  approverId: string;\n  departmentId: string | null;\n  status: 'pending' | 'approved' | 'rejected';\n  comments: string | null;\n  approvedAt: Date | null;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface PayrollApprovalWithDetails extends PayrollApproval {\n  approver: {\n    id: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    role: string;\n  };\n  department?: {\n    id: string;\n    name: string;\n    description: string | null;\n  } | null;\n  payrollPeriod: {\n    id: string;\n    periodName: string;\n    startDate: Date;\n    endDate: Date;\n    status: string;\n  };\n}\n\nexport interface CreatePayrollApprovalData {\n  payrollPeriodId: string;\n  approverId: string;\n  departmentId?: string;\n  status?: 'pending' | 'approved' | 'rejected';\n  comments?: string;\n}\n\nexport interface UpdatePayrollApprovalData {\n  status?: 'pending' | 'approved' | 'rejected';\n  comments?: string;\n  approvedAt?: Date;\n}\n\nexport interface PayrollApprovalListParams {\n  page?: number;\n  limit?: number;\n  payrollPeriodId?: string;\n  approverId?: string;\n  departmentId?: string;\n  status?: 'pending' | 'approved' | 'rejected';\n  startDate?: Date;\n  endDate?: Date;\n  search?: string;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\nexport class PayrollApprovalModel {\n  private pool: Pool;\n\n  constructor() {\n    this.pool = getPool();\n  }\n\n  async createPayrollApproval(data: CreatePayrollApprovalData): Promise<PayrollApproval> {\n    const query = `\n      INSERT INTO payroll_approvals (\n        payroll_period_id, approver_id, department_id, status, comments\n      ) VALUES ($1, $2, $3, $4, $5)\n      RETURNING *\n    `;\n\n    const values = [\n      data.payrollPeriodId,\n      data.approverId,\n      data.departmentId || null,\n      data.status || 'pending',\n      data.comments || null\n    ];\n\n    const result = await this.pool.query(query, values);\n    return this.mapRowToPayrollApproval(result.rows[0]);\n  }\n\n  async findById(id: string): Promise<PayrollApproval | null> {\n    const query = 'SELECT * FROM payroll_approvals WHERE id = $1';\n    const result = await this.pool.query(query, [id]);\n    \n    if (result.rows.length === 0) {\n      return null;\n    }\n    \n    return this.mapRowToPayrollApproval(result.rows[0]);\n  }\n\n  async findByIdWithDetails(id: string): Promise<PayrollApprovalWithDetails | null> {\n    const query = `\n      SELECT \n        pa.*,\n        u.id as approver_id,\n        u.email as approver_email,\n        u.first_name as approver_first_name,\n        u.last_name as approver_last_name,\n        u.role as approver_role,\n        d.id as department_id,\n        d.name as department_name,\n        d.description as department_description,\n        pp.id as period_id,\n        pp.period_name,\n        pp.start_date,\n        pp.end_date,\n        pp.status as period_status\n      FROM payroll_approvals pa\n      LEFT JOIN users u ON pa.approver_id = u.id\n      LEFT JOIN departments d ON pa.department_id = d.id\n      LEFT JOIN payroll_periods pp ON pa.payroll_period_id = pp.id\n      WHERE pa.id = $1\n    `;\n    \n    const result = await this.pool.query(query, [id]);\n    \n    if (result.rows.length === 0) {\n      return null;\n    }\n    \n    return this.mapRowToPayrollApprovalWithDetails(result.rows[0]);\n  }\n\n  async updatePayrollApproval(id: string, data: UpdatePayrollApprovalData): Promise<PayrollApproval | null> {\n    const setClause: string[] = [];\n    const values: any[] = [];\n    let valueIndex = 1;\n\n    if (data.status !== undefined) {\n      setClause.push(`status = $${valueIndex}`);\n      values.push(data.status);\n      valueIndex++;\n    }\n\n    if (data.comments !== undefined) {\n      setClause.push(`comments = $${valueIndex}`);\n      values.push(data.comments);\n      valueIndex++;\n    }\n\n    if (data.approvedAt !== undefined) {\n      setClause.push(`approved_at = $${valueIndex}`);\n      values.push(data.approvedAt);\n      valueIndex++;\n    }\n\n    if (setClause.length === 0) {\n      return this.findById(id);\n    }\n\n    setClause.push(`updated_at = CURRENT_TIMESTAMP`);\n    values.push(id);\n\n    const query = `\n      UPDATE payroll_approvals \n      SET ${setClause.join(', ')}\n      WHERE id = $${valueIndex}\n      RETURNING *\n    `;\n\n    const result = await this.pool.query(query, values);\n    \n    if (result.rows.length === 0) {\n      return null;\n    }\n    \n    return this.mapRowToPayrollApproval(result.rows[0]);\n  }\n\n  async listPayrollApprovals(params: PayrollApprovalListParams = {}): Promise<{\n    approvals: PayrollApprovalWithDetails[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    const {\n      page = 1,\n      limit = 20,\n      payrollPeriodId,\n      approverId,\n      departmentId,\n      status,\n      startDate,\n      endDate,\n      search,\n      sortBy = 'created_at',\n      sortOrder = 'desc'\n    } = params;\n\n    const offset = (page - 1) * limit;\n    let whereConditions: string[] = [];\n    let values: any[] = [];\n    let valueIndex = 1;\n\n    // Build WHERE conditions\n    if (payrollPeriodId) {\n      whereConditions.push(`pa.payroll_period_id = $${valueIndex}`);\n      values.push(payrollPeriodId);\n      valueIndex++;\n    }\n\n    if (approverId) {\n      whereConditions.push(`pa.approver_id = $${valueIndex}`);\n      values.push(approverId);\n      valueIndex++;\n    }\n\n    if (departmentId) {\n      whereConditions.push(`pa.department_id = $${valueIndex}`);\n      values.push(departmentId);\n      valueIndex++;\n    }\n\n    if (status) {\n      whereConditions.push(`pa.status = $${valueIndex}`);\n      values.push(status);\n      valueIndex++;\n    }\n\n    if (startDate) {\n      whereConditions.push(`pa.created_at >= $${valueIndex}`);\n      values.push(startDate);\n      valueIndex++;\n    }\n\n    if (endDate) {\n      whereConditions.push(`pa.created_at <= $${valueIndex}`);\n      values.push(endDate);\n      valueIndex++;\n    }\n\n    if (search) {\n      whereConditions.push(`(\n        pp.period_name ILIKE $${valueIndex} OR \n        u.first_name ILIKE $${valueIndex} OR\n        u.last_name ILIKE $${valueIndex} OR\n        u.email ILIKE $${valueIndex} OR\n        d.name ILIKE $${valueIndex} OR\n        pa.comments ILIKE $${valueIndex}\n      )`);\n      values.push(`%${search}%`);\n      valueIndex++;\n    }\n\n    const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(' AND ')}` : '';\n\n    // Count query\n    const countQuery = `\n      SELECT COUNT(*) \n      FROM payroll_approvals pa\n      LEFT JOIN users u ON pa.approver_id = u.id\n      LEFT JOIN departments d ON pa.department_id = d.id\n      LEFT JOIN payroll_periods pp ON pa.payroll_period_id = pp.id\n      ${whereClause}\n    `;\n    const countResult = await this.pool.query(countQuery, values);\n    const total = parseInt(countResult.rows[0].count);\n\n    // Main query\n    const query = `\n      SELECT \n        pa.*,\n        u.id as approver_id,\n        u.email as approver_email,\n        u.first_name as approver_first_name,\n        u.last_name as approver_last_name,\n        u.role as approver_role,\n        d.id as department_id,\n        d.name as department_name,\n        d.description as department_description,\n        pp.id as period_id,\n        pp.period_name,\n        pp.start_date,\n        pp.end_date,\n        pp.status as period_status\n      FROM payroll_approvals pa\n      LEFT JOIN users u ON pa.approver_id = u.id\n      LEFT JOIN departments d ON pa.department_id = d.id\n      LEFT JOIN payroll_periods pp ON pa.payroll_period_id = pp.id\n      ${whereClause}\n      ORDER BY pa.${sortBy} ${sortOrder.toUpperCase()}\n      LIMIT $${valueIndex} OFFSET $${valueIndex + 1}\n    `;\n    values.push(limit, offset);\n\n    const result = await this.pool.query(query, values);\n    const approvals = result.rows.map(row => this.mapRowToPayrollApprovalWithDetails(row));\n\n    return {\n      approvals,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit)\n    };\n  }\n\n  async getPendingApprovalsForApprover(approverId: string): Promise<PayrollApprovalWithDetails[]> {\n    const query = `\n      SELECT \n        pa.*,\n        u.id as approver_id,\n        u.email as approver_email,\n        u.first_name as approver_first_name,\n        u.last_name as approver_last_name,\n        u.role as approver_role,\n        d.id as department_id,\n        d.name as department_name,\n        d.description as department_description,\n        pp.id as period_id,\n        pp.period_name,\n        pp.start_date,\n        pp.end_date,\n        pp.status as period_status\n      FROM payroll_approvals pa\n      LEFT JOIN users u ON pa.approver_id = u.id\n      LEFT JOIN departments d ON pa.department_id = d.id\n      LEFT JOIN payroll_periods pp ON pa.payroll_period_id = pp.id\n      WHERE pa.approver_id = $1 AND pa.status = 'pending'\n      ORDER BY pa.created_at ASC\n    `;\n    \n    const result = await this.pool.query(query, [approverId]);\n    return result.rows.map(row => this.mapRowToPayrollApprovalWithDetails(row));\n  }\n\n  async getApprovalStats(): Promise<{\n    totalApprovals: number;\n    pendingApprovals: number;\n    approvedApprovals: number;\n    rejectedApprovals: number;\n    approvalsByDepartment: Array<{ departmentName: string; count: number }>;\n    approvalsByApprover: Array<{ approverName: string; count: number }>;\n  }> {\n    const totalQuery = 'SELECT COUNT(*) FROM payroll_approvals';\n    const totalResult = await this.pool.query(totalQuery);\n    const totalApprovals = parseInt(totalResult.rows[0].count);\n\n    const statusQuery = `\n      SELECT status, COUNT(*) as count \n      FROM payroll_approvals \n      GROUP BY status\n    `;\n    const statusResult = await this.pool.query(statusQuery);\n\n    const pendingApprovals = statusResult.rows.find(r => r.status === 'pending')?.count || 0;\n    const approvedApprovals = statusResult.rows.find(r => r.status === 'approved')?.count || 0;\n    const rejectedApprovals = statusResult.rows.find(r => r.status === 'rejected')?.count || 0;\n\n    const departmentQuery = `\n      SELECT \n        COALESCE(d.name, 'No Department') as department_name,\n        COUNT(*) as count\n      FROM payroll_approvals pa\n      LEFT JOIN departments d ON pa.department_id = d.id\n      GROUP BY d.name\n      ORDER BY count DESC\n    `;\n    const departmentResult = await this.pool.query(departmentQuery);\n\n    const approverQuery = `\n      SELECT \n        CONCAT(u.first_name, ' ', u.last_name) as approver_name,\n        COUNT(*) as count\n      FROM payroll_approvals pa\n      JOIN users u ON pa.approver_id = u.id\n      GROUP BY u.id, u.first_name, u.last_name\n      ORDER BY count DESC\n      LIMIT 10\n    `;\n    const approverResult = await this.pool.query(approverQuery);\n\n    return {\n      totalApprovals,\n      pendingApprovals: parseInt(pendingApprovals),\n      approvedApprovals: parseInt(approvedApprovals),\n      rejectedApprovals: parseInt(rejectedApprovals),\n      approvalsByDepartment: departmentResult.rows,\n      approvalsByApprover: approverResult.rows\n    };\n  }\n\n  async deletePayrollApproval(id: string): Promise<boolean> {\n    const query = 'DELETE FROM payroll_approvals WHERE id = $1';\n    const result = await this.pool.query(query, [id]);\n    return result.rowCount !== null && result.rowCount > 0;\n  }\n\n  private mapRowToPayrollApproval(row: any): PayrollApproval {\n    return {\n      id: row.id,\n      payrollPeriodId: row.payroll_period_id,\n      approverId: row.approver_id,\n      departmentId: row.department_id,\n      status: row.status,\n      comments: row.comments,\n      approvedAt: row.approved_at,\n      createdAt: row.created_at,\n      updatedAt: row.updated_at\n    };\n  }\n\n  private mapRowToPayrollApprovalWithDetails(row: any): PayrollApprovalWithDetails {\n    return {\n      id: row.id,\n      payrollPeriodId: row.payroll_period_id,\n      approverId: row.approver_id,\n      departmentId: row.department_id,\n      status: row.status,\n      comments: row.comments,\n      approvedAt: row.approved_at,\n      createdAt: row.created_at,\n      updatedAt: row.updated_at,\n      approver: {\n        id: row.approver_id,\n        email: row.approver_email,\n        firstName: row.approver_first_name,\n        lastName: row.approver_last_name,\n        role: row.approver_role\n      },\n      department: row.department_id ? {\n        id: row.department_id,\n        name: row.department_name,\n        description: row.department_description\n      } : null,\n      payrollPeriod: {\n        id: row.period_id,\n        periodName: row.period_name,\n        startDate: row.start_date,\n        endDate: row.end_date,\n        status: row.period_status\n      }\n    };\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "daee7d7bc795fba2964cc9aafbe564b8e0b6fd73"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_spdda2veg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_spdda2veg();
cov_spdda2veg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_spdda2veg().s[1]++;
exports.PayrollApprovalModel = void 0;
const database_1 =
/* istanbul ignore next */
(cov_spdda2veg().s[2]++, require("../../config/database"));
class PayrollApprovalModel {
  constructor() {
    /* istanbul ignore next */
    cov_spdda2veg().f[0]++;
    cov_spdda2veg().s[3]++;
    this.pool = (0, database_1.getPool)();
  }
  async createPayrollApproval(data) {
    /* istanbul ignore next */
    cov_spdda2veg().f[1]++;
    const query =
    /* istanbul ignore next */
    (cov_spdda2veg().s[4]++, `
      INSERT INTO payroll_approvals (
        payroll_period_id, approver_id, department_id, status, comments
      ) VALUES ($1, $2, $3, $4, $5)
      RETURNING *
    `);
    const values =
    /* istanbul ignore next */
    (cov_spdda2veg().s[5]++, [data.payrollPeriodId, data.approverId,
    /* istanbul ignore next */
    (cov_spdda2veg().b[0][0]++, data.departmentId) ||
    /* istanbul ignore next */
    (cov_spdda2veg().b[0][1]++, null),
    /* istanbul ignore next */
    (cov_spdda2veg().b[1][0]++, data.status) ||
    /* istanbul ignore next */
    (cov_spdda2veg().b[1][1]++, 'pending'),
    /* istanbul ignore next */
    (cov_spdda2veg().b[2][0]++, data.comments) ||
    /* istanbul ignore next */
    (cov_spdda2veg().b[2][1]++, null)]);
    const result =
    /* istanbul ignore next */
    (cov_spdda2veg().s[6]++, await this.pool.query(query, values));
    /* istanbul ignore next */
    cov_spdda2veg().s[7]++;
    return this.mapRowToPayrollApproval(result.rows[0]);
  }
  async findById(id) {
    /* istanbul ignore next */
    cov_spdda2veg().f[2]++;
    const query =
    /* istanbul ignore next */
    (cov_spdda2veg().s[8]++, 'SELECT * FROM payroll_approvals WHERE id = $1');
    const result =
    /* istanbul ignore next */
    (cov_spdda2veg().s[9]++, await this.pool.query(query, [id]));
    /* istanbul ignore next */
    cov_spdda2veg().s[10]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_spdda2veg().b[3][0]++;
      cov_spdda2veg().s[11]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[3][1]++;
    }
    cov_spdda2veg().s[12]++;
    return this.mapRowToPayrollApproval(result.rows[0]);
  }
  async findByIdWithDetails(id) {
    /* istanbul ignore next */
    cov_spdda2veg().f[3]++;
    const query =
    /* istanbul ignore next */
    (cov_spdda2veg().s[13]++, `
      SELECT 
        pa.*,
        u.id as approver_id,
        u.email as approver_email,
        u.first_name as approver_first_name,
        u.last_name as approver_last_name,
        u.role as approver_role,
        d.id as department_id,
        d.name as department_name,
        d.description as department_description,
        pp.id as period_id,
        pp.period_name,
        pp.start_date,
        pp.end_date,
        pp.status as period_status
      FROM payroll_approvals pa
      LEFT JOIN users u ON pa.approver_id = u.id
      LEFT JOIN departments d ON pa.department_id = d.id
      LEFT JOIN payroll_periods pp ON pa.payroll_period_id = pp.id
      WHERE pa.id = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_spdda2veg().s[14]++, await this.pool.query(query, [id]));
    /* istanbul ignore next */
    cov_spdda2veg().s[15]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_spdda2veg().b[4][0]++;
      cov_spdda2veg().s[16]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[4][1]++;
    }
    cov_spdda2veg().s[17]++;
    return this.mapRowToPayrollApprovalWithDetails(result.rows[0]);
  }
  async updatePayrollApproval(id, data) {
    /* istanbul ignore next */
    cov_spdda2veg().f[4]++;
    const setClause =
    /* istanbul ignore next */
    (cov_spdda2veg().s[18]++, []);
    const values =
    /* istanbul ignore next */
    (cov_spdda2veg().s[19]++, []);
    let valueIndex =
    /* istanbul ignore next */
    (cov_spdda2veg().s[20]++, 1);
    /* istanbul ignore next */
    cov_spdda2veg().s[21]++;
    if (data.status !== undefined) {
      /* istanbul ignore next */
      cov_spdda2veg().b[5][0]++;
      cov_spdda2veg().s[22]++;
      setClause.push(`status = $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[23]++;
      values.push(data.status);
      /* istanbul ignore next */
      cov_spdda2veg().s[24]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[5][1]++;
    }
    cov_spdda2veg().s[25]++;
    if (data.comments !== undefined) {
      /* istanbul ignore next */
      cov_spdda2veg().b[6][0]++;
      cov_spdda2veg().s[26]++;
      setClause.push(`comments = $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[27]++;
      values.push(data.comments);
      /* istanbul ignore next */
      cov_spdda2veg().s[28]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[6][1]++;
    }
    cov_spdda2veg().s[29]++;
    if (data.approvedAt !== undefined) {
      /* istanbul ignore next */
      cov_spdda2veg().b[7][0]++;
      cov_spdda2veg().s[30]++;
      setClause.push(`approved_at = $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[31]++;
      values.push(data.approvedAt);
      /* istanbul ignore next */
      cov_spdda2veg().s[32]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[7][1]++;
    }
    cov_spdda2veg().s[33]++;
    if (setClause.length === 0) {
      /* istanbul ignore next */
      cov_spdda2veg().b[8][0]++;
      cov_spdda2veg().s[34]++;
      return this.findById(id);
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[8][1]++;
    }
    cov_spdda2veg().s[35]++;
    setClause.push(`updated_at = CURRENT_TIMESTAMP`);
    /* istanbul ignore next */
    cov_spdda2veg().s[36]++;
    values.push(id);
    const query =
    /* istanbul ignore next */
    (cov_spdda2veg().s[37]++, `
      UPDATE payroll_approvals 
      SET ${setClause.join(', ')}
      WHERE id = $${valueIndex}
      RETURNING *
    `);
    const result =
    /* istanbul ignore next */
    (cov_spdda2veg().s[38]++, await this.pool.query(query, values));
    /* istanbul ignore next */
    cov_spdda2veg().s[39]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_spdda2veg().b[9][0]++;
      cov_spdda2veg().s[40]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[9][1]++;
    }
    cov_spdda2veg().s[41]++;
    return this.mapRowToPayrollApproval(result.rows[0]);
  }
  async listPayrollApprovals(params =
  /* istanbul ignore next */
  (cov_spdda2veg().b[10][0]++, {})) {
    /* istanbul ignore next */
    cov_spdda2veg().f[5]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_spdda2veg().b[11][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_spdda2veg().b[12][0]++, 20),
      payrollPeriodId,
      approverId,
      departmentId,
      status,
      startDate,
      endDate,
      search,
      sortBy =
      /* istanbul ignore next */
      (cov_spdda2veg().b[13][0]++, 'created_at'),
      sortOrder =
      /* istanbul ignore next */
      (cov_spdda2veg().b[14][0]++, 'desc')
    } =
    /* istanbul ignore next */
    (cov_spdda2veg().s[42]++, params);
    const offset =
    /* istanbul ignore next */
    (cov_spdda2veg().s[43]++, (page - 1) * limit);
    let whereConditions =
    /* istanbul ignore next */
    (cov_spdda2veg().s[44]++, []);
    let values =
    /* istanbul ignore next */
    (cov_spdda2veg().s[45]++, []);
    let valueIndex =
    /* istanbul ignore next */
    (cov_spdda2veg().s[46]++, 1);
    // Build WHERE conditions
    /* istanbul ignore next */
    cov_spdda2veg().s[47]++;
    if (payrollPeriodId) {
      /* istanbul ignore next */
      cov_spdda2veg().b[15][0]++;
      cov_spdda2veg().s[48]++;
      whereConditions.push(`pa.payroll_period_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[49]++;
      values.push(payrollPeriodId);
      /* istanbul ignore next */
      cov_spdda2veg().s[50]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[15][1]++;
    }
    cov_spdda2veg().s[51]++;
    if (approverId) {
      /* istanbul ignore next */
      cov_spdda2veg().b[16][0]++;
      cov_spdda2veg().s[52]++;
      whereConditions.push(`pa.approver_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[53]++;
      values.push(approverId);
      /* istanbul ignore next */
      cov_spdda2veg().s[54]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[16][1]++;
    }
    cov_spdda2veg().s[55]++;
    if (departmentId) {
      /* istanbul ignore next */
      cov_spdda2veg().b[17][0]++;
      cov_spdda2veg().s[56]++;
      whereConditions.push(`pa.department_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[57]++;
      values.push(departmentId);
      /* istanbul ignore next */
      cov_spdda2veg().s[58]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[17][1]++;
    }
    cov_spdda2veg().s[59]++;
    if (status) {
      /* istanbul ignore next */
      cov_spdda2veg().b[18][0]++;
      cov_spdda2veg().s[60]++;
      whereConditions.push(`pa.status = $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[61]++;
      values.push(status);
      /* istanbul ignore next */
      cov_spdda2veg().s[62]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[18][1]++;
    }
    cov_spdda2veg().s[63]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_spdda2veg().b[19][0]++;
      cov_spdda2veg().s[64]++;
      whereConditions.push(`pa.created_at >= $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[65]++;
      values.push(startDate);
      /* istanbul ignore next */
      cov_spdda2veg().s[66]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[19][1]++;
    }
    cov_spdda2veg().s[67]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_spdda2veg().b[20][0]++;
      cov_spdda2veg().s[68]++;
      whereConditions.push(`pa.created_at <= $${valueIndex}`);
      /* istanbul ignore next */
      cov_spdda2veg().s[69]++;
      values.push(endDate);
      /* istanbul ignore next */
      cov_spdda2veg().s[70]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[20][1]++;
    }
    cov_spdda2veg().s[71]++;
    if (search) {
      /* istanbul ignore next */
      cov_spdda2veg().b[21][0]++;
      cov_spdda2veg().s[72]++;
      whereConditions.push(`(
        pp.period_name ILIKE $${valueIndex} OR 
        u.first_name ILIKE $${valueIndex} OR
        u.last_name ILIKE $${valueIndex} OR
        u.email ILIKE $${valueIndex} OR
        d.name ILIKE $${valueIndex} OR
        pa.comments ILIKE $${valueIndex}
      )`);
      /* istanbul ignore next */
      cov_spdda2veg().s[73]++;
      values.push(`%${search}%`);
      /* istanbul ignore next */
      cov_spdda2veg().s[74]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_spdda2veg().b[21][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_spdda2veg().s[75]++, whereConditions.length > 0 ?
    /* istanbul ignore next */
    (cov_spdda2veg().b[22][0]++, `WHERE ${whereConditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_spdda2veg().b[22][1]++, ''));
    // Count query
    const countQuery =
    /* istanbul ignore next */
    (cov_spdda2veg().s[76]++, `
      SELECT COUNT(*) 
      FROM payroll_approvals pa
      LEFT JOIN users u ON pa.approver_id = u.id
      LEFT JOIN departments d ON pa.department_id = d.id
      LEFT JOIN payroll_periods pp ON pa.payroll_period_id = pp.id
      ${whereClause}
    `);
    const countResult =
    /* istanbul ignore next */
    (cov_spdda2veg().s[77]++, await this.pool.query(countQuery, values));
    const total =
    /* istanbul ignore next */
    (cov_spdda2veg().s[78]++, parseInt(countResult.rows[0].count));
    // Main query
    const query =
    /* istanbul ignore next */
    (cov_spdda2veg().s[79]++, `
      SELECT 
        pa.*,
        u.id as approver_id,
        u.email as approver_email,
        u.first_name as approver_first_name,
        u.last_name as approver_last_name,
        u.role as approver_role,
        d.id as department_id,
        d.name as department_name,
        d.description as department_description,
        pp.id as period_id,
        pp.period_name,
        pp.start_date,
        pp.end_date,
        pp.status as period_status
      FROM payroll_approvals pa
      LEFT JOIN users u ON pa.approver_id = u.id
      LEFT JOIN departments d ON pa.department_id = d.id
      LEFT JOIN payroll_periods pp ON pa.payroll_period_id = pp.id
      ${whereClause}
      ORDER BY pa.${sortBy} ${sortOrder.toUpperCase()}
      LIMIT $${valueIndex} OFFSET $${valueIndex + 1}
    `);
    /* istanbul ignore next */
    cov_spdda2veg().s[80]++;
    values.push(limit, offset);
    const result =
    /* istanbul ignore next */
    (cov_spdda2veg().s[81]++, await this.pool.query(query, values));
    const approvals =
    /* istanbul ignore next */
    (cov_spdda2veg().s[82]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_spdda2veg().f[6]++;
      cov_spdda2veg().s[83]++;
      return this.mapRowToPayrollApprovalWithDetails(row);
    }));
    /* istanbul ignore next */
    cov_spdda2veg().s[84]++;
    return {
      approvals,
      total,
      page,
      limit,
      totalPages: Math.ceil(total / limit)
    };
  }
  async getPendingApprovalsForApprover(approverId) {
    /* istanbul ignore next */
    cov_spdda2veg().f[7]++;
    const query =
    /* istanbul ignore next */
    (cov_spdda2veg().s[85]++, `
      SELECT 
        pa.*,
        u.id as approver_id,
        u.email as approver_email,
        u.first_name as approver_first_name,
        u.last_name as approver_last_name,
        u.role as approver_role,
        d.id as department_id,
        d.name as department_name,
        d.description as department_description,
        pp.id as period_id,
        pp.period_name,
        pp.start_date,
        pp.end_date,
        pp.status as period_status
      FROM payroll_approvals pa
      LEFT JOIN users u ON pa.approver_id = u.id
      LEFT JOIN departments d ON pa.department_id = d.id
      LEFT JOIN payroll_periods pp ON pa.payroll_period_id = pp.id
      WHERE pa.approver_id = $1 AND pa.status = 'pending'
      ORDER BY pa.created_at ASC
    `);
    const result =
    /* istanbul ignore next */
    (cov_spdda2veg().s[86]++, await this.pool.query(query, [approverId]));
    /* istanbul ignore next */
    cov_spdda2veg().s[87]++;
    return result.rows.map(row => {
      /* istanbul ignore next */
      cov_spdda2veg().f[8]++;
      cov_spdda2veg().s[88]++;
      return this.mapRowToPayrollApprovalWithDetails(row);
    });
  }
  async getApprovalStats() {
    /* istanbul ignore next */
    cov_spdda2veg().f[9]++;
    const totalQuery =
    /* istanbul ignore next */
    (cov_spdda2veg().s[89]++, 'SELECT COUNT(*) FROM payroll_approvals');
    const totalResult =
    /* istanbul ignore next */
    (cov_spdda2veg().s[90]++, await this.pool.query(totalQuery));
    const totalApprovals =
    /* istanbul ignore next */
    (cov_spdda2veg().s[91]++, parseInt(totalResult.rows[0].count));
    const statusQuery =
    /* istanbul ignore next */
    (cov_spdda2veg().s[92]++, `
      SELECT status, COUNT(*) as count 
      FROM payroll_approvals 
      GROUP BY status
    `);
    const statusResult =
    /* istanbul ignore next */
    (cov_spdda2veg().s[93]++, await this.pool.query(statusQuery));
    const pendingApprovals =
    /* istanbul ignore next */
    (cov_spdda2veg().s[94]++,
    /* istanbul ignore next */
    (cov_spdda2veg().b[23][0]++, statusResult.rows.find(r => {
      /* istanbul ignore next */
      cov_spdda2veg().f[10]++;
      cov_spdda2veg().s[95]++;
      return r.status === 'pending';
    })?.count) ||
    /* istanbul ignore next */
    (cov_spdda2veg().b[23][1]++, 0));
    const approvedApprovals =
    /* istanbul ignore next */
    (cov_spdda2veg().s[96]++,
    /* istanbul ignore next */
    (cov_spdda2veg().b[24][0]++, statusResult.rows.find(r => {
      /* istanbul ignore next */
      cov_spdda2veg().f[11]++;
      cov_spdda2veg().s[97]++;
      return r.status === 'approved';
    })?.count) ||
    /* istanbul ignore next */
    (cov_spdda2veg().b[24][1]++, 0));
    const rejectedApprovals =
    /* istanbul ignore next */
    (cov_spdda2veg().s[98]++,
    /* istanbul ignore next */
    (cov_spdda2veg().b[25][0]++, statusResult.rows.find(r => {
      /* istanbul ignore next */
      cov_spdda2veg().f[12]++;
      cov_spdda2veg().s[99]++;
      return r.status === 'rejected';
    })?.count) ||
    /* istanbul ignore next */
    (cov_spdda2veg().b[25][1]++, 0));
    const departmentQuery =
    /* istanbul ignore next */
    (cov_spdda2veg().s[100]++, `
      SELECT 
        COALESCE(d.name, 'No Department') as department_name,
        COUNT(*) as count
      FROM payroll_approvals pa
      LEFT JOIN departments d ON pa.department_id = d.id
      GROUP BY d.name
      ORDER BY count DESC
    `);
    const departmentResult =
    /* istanbul ignore next */
    (cov_spdda2veg().s[101]++, await this.pool.query(departmentQuery));
    const approverQuery =
    /* istanbul ignore next */
    (cov_spdda2veg().s[102]++, `
      SELECT 
        CONCAT(u.first_name, ' ', u.last_name) as approver_name,
        COUNT(*) as count
      FROM payroll_approvals pa
      JOIN users u ON pa.approver_id = u.id
      GROUP BY u.id, u.first_name, u.last_name
      ORDER BY count DESC
      LIMIT 10
    `);
    const approverResult =
    /* istanbul ignore next */
    (cov_spdda2veg().s[103]++, await this.pool.query(approverQuery));
    /* istanbul ignore next */
    cov_spdda2veg().s[104]++;
    return {
      totalApprovals,
      pendingApprovals: parseInt(pendingApprovals),
      approvedApprovals: parseInt(approvedApprovals),
      rejectedApprovals: parseInt(rejectedApprovals),
      approvalsByDepartment: departmentResult.rows,
      approvalsByApprover: approverResult.rows
    };
  }
  async deletePayrollApproval(id) {
    /* istanbul ignore next */
    cov_spdda2veg().f[13]++;
    const query =
    /* istanbul ignore next */
    (cov_spdda2veg().s[105]++, 'DELETE FROM payroll_approvals WHERE id = $1');
    const result =
    /* istanbul ignore next */
    (cov_spdda2veg().s[106]++, await this.pool.query(query, [id]));
    /* istanbul ignore next */
    cov_spdda2veg().s[107]++;
    return /* istanbul ignore next */(cov_spdda2veg().b[26][0]++, result.rowCount !== null) &&
    /* istanbul ignore next */
    (cov_spdda2veg().b[26][1]++, result.rowCount > 0);
  }
  mapRowToPayrollApproval(row) {
    /* istanbul ignore next */
    cov_spdda2veg().f[14]++;
    cov_spdda2veg().s[108]++;
    return {
      id: row.id,
      payrollPeriodId: row.payroll_period_id,
      approverId: row.approver_id,
      departmentId: row.department_id,
      status: row.status,
      comments: row.comments,
      approvedAt: row.approved_at,
      createdAt: row.created_at,
      updatedAt: row.updated_at
    };
  }
  mapRowToPayrollApprovalWithDetails(row) {
    /* istanbul ignore next */
    cov_spdda2veg().f[15]++;
    cov_spdda2veg().s[109]++;
    return {
      id: row.id,
      payrollPeriodId: row.payroll_period_id,
      approverId: row.approver_id,
      departmentId: row.department_id,
      status: row.status,
      comments: row.comments,
      approvedAt: row.approved_at,
      createdAt: row.created_at,
      updatedAt: row.updated_at,
      approver: {
        id: row.approver_id,
        email: row.approver_email,
        firstName: row.approver_first_name,
        lastName: row.approver_last_name,
        role: row.approver_role
      },
      department: row.department_id ?
      /* istanbul ignore next */
      (cov_spdda2veg().b[27][0]++, {
        id: row.department_id,
        name: row.department_name,
        description: row.department_description
      }) :
      /* istanbul ignore next */
      (cov_spdda2veg().b[27][1]++, null),
      payrollPeriod: {
        id: row.period_id,
        periodName: row.period_name,
        startDate: row.start_date,
        endDate: row.end_date,
        status: row.period_status
      }
    };
  }
}
/* istanbul ignore next */
cov_spdda2veg().s[110]++;
exports.PayrollApprovalModel = PayrollApprovalModel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,