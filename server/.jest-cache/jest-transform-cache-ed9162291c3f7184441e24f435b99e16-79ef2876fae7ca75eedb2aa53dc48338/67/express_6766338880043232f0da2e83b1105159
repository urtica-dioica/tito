5a9b10f64458262e8b59cae9213149e4
"use strict";

/* istanbul ignore next */
function cov_1bgi9b1atu() {
  var path = "/home/kim/tito/server/src/utils/types/express.ts";
  var hash = "5709a96dbbeecc4724cf06a4d6f6a1914426758a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/utils/types/express.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "getRequestId",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 21
          }
        },
        loc: {
          start: {
            line: 5,
            column: 27
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 5
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 24
          }
        }, {
          start: {
            line: 6,
            column: 28
          },
          end: {
            line: 6,
            column: 37
          }
        }],
        line: 6
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/utils/types/express.ts",
      mappings: ";;AA8BA,oCAEC;AAHD,wDAAwD;AACxD,SAAgB,YAAY,CAAC,GAAQ;IACnC,OAAO,GAAG,CAAC,SAAS,IAAI,SAAS,CAAC;AACpC,CAAC",
      names: [],
      sources: ["/home/kim/tito/server/src/utils/types/express.ts"],
      sourcesContent: ["export interface ApiResponse {\n  success: boolean;\n  message: string;\n  data?: any;\n  error?: string;\n  timestamp: string;\n  requestId?: string;\n  path?: string;\n  details?: any;\n}\n\nexport interface PaginatedResponse<T> extends ApiResponse {\n  data: {\n    items: T[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      totalPages: number;\n    };\n  };\n}\n\nexport interface ErrorResponse extends ApiResponse {\n  success: false;\n  error: string;\n  details?: any;\n}\n\n// Helper function to get request ID from request object\nexport function getRequestId(req: any): string {\n  return req.requestId || 'unknown';\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5709a96dbbeecc4724cf06a4d6f6a1914426758a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bgi9b1atu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bgi9b1atu();
cov_1bgi9b1atu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1bgi9b1atu().s[1]++;
exports.getRequestId = getRequestId;
// Helper function to get request ID from request object
function getRequestId(req) {
  /* istanbul ignore next */
  cov_1bgi9b1atu().f[0]++;
  cov_1bgi9b1atu().s[2]++;
  return /* istanbul ignore next */(cov_1bgi9b1atu().b[0][0]++, req.requestId) ||
  /* istanbul ignore next */
  (cov_1bgi9b1atu().b[0][1]++, 'unknown');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiZ2V0UmVxdWVzdElkIiwicmVxIiwiY292XzFiZ2k5YjFhdHUiLCJmIiwicyIsImIiLCJyZXF1ZXN0SWQiXSwic291cmNlcyI6WyIvaG9tZS9raW0vdGl0by9zZXJ2ZXIvc3JjL3V0aWxzL3R5cGVzL2V4cHJlc3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBBcGlSZXNwb25zZSB7XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgZGF0YT86IGFueTtcbiAgZXJyb3I/OiBzdHJpbmc7XG4gIHRpbWVzdGFtcDogc3RyaW5nO1xuICByZXF1ZXN0SWQ/OiBzdHJpbmc7XG4gIHBhdGg/OiBzdHJpbmc7XG4gIGRldGFpbHM/OiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFnaW5hdGVkUmVzcG9uc2U8VD4gZXh0ZW5kcyBBcGlSZXNwb25zZSB7XG4gIGRhdGE6IHtcbiAgICBpdGVtczogVFtdO1xuICAgIHBhZ2luYXRpb246IHtcbiAgICAgIHBhZ2U6IG51bWJlcjtcbiAgICAgIGxpbWl0OiBudW1iZXI7XG4gICAgICB0b3RhbDogbnVtYmVyO1xuICAgICAgdG90YWxQYWdlczogbnVtYmVyO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXJyb3JSZXNwb25zZSBleHRlbmRzIEFwaVJlc3BvbnNlIHtcbiAgc3VjY2VzczogZmFsc2U7XG4gIGVycm9yOiBzdHJpbmc7XG4gIGRldGFpbHM/OiBhbnk7XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgcmVxdWVzdCBJRCBmcm9tIHJlcXVlc3Qgb2JqZWN0XG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVxdWVzdElkKHJlcTogYW55KTogc3RyaW5nIHtcbiAgcmV0dXJuIHJlcS5yZXF1ZXN0SWQgfHwgJ3Vua25vd24nO1xufSAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4QkFBLE9BQUEsQ0FBQUMsWUFBQSxHQUFBQSxZQUFBO0FBREE7QUFDQSxTQUFnQkEsWUFBWUEsQ0FBQ0MsR0FBUTtFQUFBO0VBQUFDLGNBQUEsR0FBQUMsQ0FBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFDbkMsT0FBTywyQkFBQUYsY0FBQSxHQUFBRyxDQUFBLFVBQUFKLEdBQUcsQ0FBQ0ssU0FBUztFQUFBO0VBQUEsQ0FBQUosY0FBQSxHQUFBRyxDQUFBLFVBQUksU0FBUztBQUNuQyIsImlnbm9yZUxpc3QiOltdfQ==