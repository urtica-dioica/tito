569899cf537a7ae1fc685c15d350aab5
"use strict";

/* istanbul ignore next */
function cov_2rpnl9k6zd() {
  var path = "/home/kim/tito/server/src/controllers/kiosk/kioskController.ts";
  var hash = "c7cc5687c93e0ba3a0cc94d00b2c08e8d3abfb75";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/controllers/kiosk/kioskController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 84
        }
      },
      "4": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "5": {
        start: {
          line: 10,
          column: 64
        },
        end: {
          line: 17,
          column: 1
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "7": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "8": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "9": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 125
        }
      },
      "10": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 84
        }
      },
      "11": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 103
        }
      },
      "12": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 68
        }
      },
      "13": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 124
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "16": {
        start: {
          line: 42,
          column: 74
        },
        end: {
          line: 42,
          column: 82
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "18": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 128
        }
      },
      "19": {
        start: {
          line: 46,
          column: 37
        },
        end: {
          line: 52,
          column: 14
        }
      },
      "20": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 113
        }
      },
      "21": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 64
        }
      },
      "22": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 140
        }
      },
      "23": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "24": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "25": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 45
        }
      },
      "26": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "27": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 133
        }
      },
      "28": {
        start: {
          line: 70,
          column: 35
        },
        end: {
          line: 70,
          column: 93
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 117
        }
      },
      "30": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 67
        }
      },
      "31": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 130
        }
      },
      "32": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "33": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "34": {
        start: {
          line: 84,
          column: 35
        },
        end: {
          line: 84,
          column: 45
        }
      },
      "35": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 85,
          column: 57
        }
      },
      "36": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "37": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 133
        }
      },
      "38": {
        start: {
          line: 89,
          column: 38
        },
        end: {
          line: 89,
          column: 106
        }
      },
      "39": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 123
        }
      },
      "40": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 70
        }
      },
      "41": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 133
        }
      },
      "42": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "43": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "44": {
        start: {
          line: 103,
          column: 35
        },
        end: {
          line: 103,
          column: 45
        }
      },
      "45": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "46": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 133
        }
      },
      "47": {
        start: {
          line: 107,
          column: 32
        },
        end: {
          line: 107,
          column: 95
        }
      },
      "48": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 120
        }
      },
      "49": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 73
        }
      },
      "50": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 136
        }
      },
      "51": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 15
        }
      },
      "52": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "53": {
        start: {
          line: 121,
          column: 35
        },
        end: {
          line: 121,
          column: 45
        }
      },
      "54": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "55": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 133
        }
      },
      "56": {
        start: {
          line: 125,
          column: 33
        },
        end: {
          line: 125,
          column: 99
        }
      },
      "57": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 127
        }
      },
      "58": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 79
        }
      },
      "59": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 142
        }
      },
      "60": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "61": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "62": {
        start: {
          line: 139,
          column: 70
        },
        end: {
          line: 139,
          column: 78
        }
      },
      "63": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "64": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 128
        }
      },
      "65": {
        start: {
          line: 144,
          column: 31
        },
        end: {
          line: 144,
          column: 39
        }
      },
      "66": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 32
        }
      },
      "67": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "68": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "69": {
        start: {
          line: 150,
          column: 37
        },
        end: {
          line: 156,
          column: 14
        }
      },
      "70": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 124
        }
      },
      "71": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 75
        }
      },
      "72": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 151
        }
      },
      "73": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 15
        }
      },
      "74": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "75": {
        start: {
          line: 170,
          column: 48
        },
        end: {
          line: 170,
          column: 56
        }
      },
      "76": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "77": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 146
        }
      },
      "78": {
        start: {
          line: 174,
          column: 31
        },
        end: {
          line: 174,
          column: 109
        }
      },
      "79": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 115
        }
      },
      "80": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 72
        }
      },
      "81": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 133
        }
      },
      "82": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "83": {
        start: {
          line: 184,
          column: 0
        },
        end: {
          line: 184,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 24
          }
        },
        loc: {
          start: {
            line: 10,
            column: 64
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 40
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 38
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 41
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 82
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 43
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 101
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 46
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 119
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 137
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 45
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 168
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 12
          }
        }, {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 24
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 14,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 14,
            column: 13
          }
        }, {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 26
          }
        }],
        line: 14
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 23
          }
        }, {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 25,
            column: 53
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 27
          }
        }, {
          start: {
            line: 43,
            column: 31
          },
          end: {
            line: 43,
            column: 36
          }
        }, {
          start: {
            line: 43,
            column: 40
          },
          end: {
            line: 43,
            column: 49
          }
        }, {
          start: {
            line: 43,
            column: 53
          },
          end: {
            line: 43,
            column: 64
          }
        }],
        line: 43
      },
      "9": {
        loc: {
          start: {
            line: 57,
            column: 97
          },
          end: {
            line: 57,
            column: 132
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 97
          },
          end: {
            line: 57,
            column: 110
          }
        }, {
          start: {
            line: 57,
            column: 114
          },
          end: {
            line: 57,
            column: 132
          }
        }],
        line: 57
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 51
          }
        }, {
          start: {
            line: 85,
            column: 55
          },
          end: {
            line: 85,
            column: 57
          }
        }],
        line: 85
      },
      "12": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "13": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "14": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "15": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "16": {
        loc: {
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 27
          }
        }, {
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 140,
            column: 43
          }
        }, {
          start: {
            line: 140,
            column: 47
          },
          end: {
            line: 140,
            column: 56
          }
        }, {
          start: {
            line: 140,
            column: 60
          },
          end: {
            line: 140,
            column: 71
          }
        }],
        line: 140
      },
      "17": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "18": {
        loc: {
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 155,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 155,
            column: 36
          }
        }, {
          start: {
            line: 155,
            column: 40
          },
          end: {
            line: 155,
            column: 49
          }
        }],
        line: 155
      },
      "19": {
        loc: {
          start: {
            line: 161,
            column: 108
          },
          end: {
            line: 161,
            column: 143
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 108
          },
          end: {
            line: 161,
            column: 121
          }
        }, {
          start: {
            line: 161,
            column: 125
          },
          end: {
            line: 161,
            column: 143
          }
        }],
        line: 161
      },
      "20": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "21": {
        loc: {
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 27
          }
        }, {
          start: {
            line: 171,
            column: 31
          },
          end: {
            line: 171,
            column: 43
          }
        }],
        line: 171
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/controllers/kiosk/kioskController.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/controllers/kiosk/kioskController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\nimport kioskService from '../../services/kiosk/kioskService';\nimport { ApiResponse } from '../../utils/types/express';\n\n/**\n * Helper function to create standardized API responses\n */\nconst createResponse = (\n  success: boolean,\n  message: string,\n  data?: any,\n  error?: string,\n  req?: Request\n): ApiResponse => ({\n  success,\n  message,\n  ...(data && { data }),\n  ...(error && { error }),\n  timestamp: new Date().toISOString(),\n  requestId: req?.requestId\n});\n\nclass KioskController {\n  /**\n   * Verify employee by QR code data\n   */\n  async verifyEmployeeByQR(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { qrCode } = req.query;\n      \n      if (!qrCode || typeof qrCode !== 'string') {\n        return res.status(400).json(createResponse(false, 'QR code is required', undefined, 'MISSING_QR_CODE', req));\n      }\n\n      const employee = await kioskService.verifyEmployeeByQR(qrCode);\n\n      res.json(createResponse(true, 'Employee verified successfully', employee, undefined, req));\n    } catch (error) {\n      console.error('Error verifying employee by QR:', error);\n      res.status(500).json(createResponse(false, 'Failed to verify employee', undefined, 'VERIFICATION_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Record attendance\n   */\n  async recordAttendance(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId, type, location, qrCodeData, selfieUrl } = req.body;\n      \n      if (!employeeId || !type || !location || !qrCodeData) {\n        return res.status(400).json(createResponse(false, 'Missing required fields', undefined, 'MISSING_FIELDS', req));\n      }\n\n      const attendanceRecord = await kioskService.recordAttendance({\n        employeeId,\n        type,\n        location,\n        qrCodeData,\n        selfieUrl\n      });\n\n      res.json(createResponse(true, 'Attendance recorded successfully', attendanceRecord, undefined, req));\n    } catch (error) {\n      console.error('Error recording attendance:', error);\n      res.status(500).json(createResponse(false, 'Failed to record attendance', undefined, (error as Error).message || 'RECORDING_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Get last attendance record for employee\n   */\n  async getLastAttendance(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId } = req.params;\n      \n      if (!employeeId) {\n        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));\n      }\n\n      const lastAttendance = await kioskService.getLastAttendance(employeeId);\n\n      res.json(createResponse(true, 'Last attendance retrieved successfully', lastAttendance, undefined, req));\n    } catch (error) {\n      console.error('Error getting last attendance:', error);\n      res.status(500).json(createResponse(false, 'Failed to retrieve last attendance', undefined, 'RETRIEVAL_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Get attendance history for employee\n   */\n  async getAttendanceHistory(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId } = req.params;\n      const limit = parseInt(req.query.limit as string) || 10;\n      \n      if (!employeeId) {\n        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));\n      }\n\n      const attendanceHistory = await kioskService.getAttendanceHistory(employeeId, limit);\n\n      res.json(createResponse(true, 'Attendance history retrieved successfully', attendanceHistory, undefined, req));\n    } catch (error) {\n      console.error('Error getting attendance history:', error);\n      res.status(500).json(createResponse(false, 'Failed to retrieve attendance history', undefined, 'RETRIEVAL_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Get next expected session for employee\n   */\n  async getNextExpectedSession(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId } = req.params;\n      \n      if (!employeeId) {\n        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));\n      }\n\n      const nextSession = await kioskService.getNextExpectedSession(employeeId);\n\n      res.json(createResponse(true, 'Next expected session retrieved successfully', nextSession, undefined, req));\n    } catch (error) {\n      console.error('Error getting next expected session:', error);\n      res.status(500).json(createResponse(false, 'Failed to retrieve next expected session', undefined, 'RETRIEVAL_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Get today's attendance summary for employee\n   */\n  async getTodayAttendanceSummary(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId } = req.params;\n      \n      if (!employeeId) {\n        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));\n      }\n\n      const todaySummary = await kioskService.getTodayAttendanceSummary(employeeId);\n\n      res.json(createResponse(true, 'Today\\'s attendance summary retrieved successfully', todaySummary, undefined, req));\n    } catch (error) {\n      console.error('Error getting today\\'s attendance summary:', error);\n      res.status(500).json(createResponse(false, 'Failed to retrieve today\\'s attendance summary', undefined, 'RETRIEVAL_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Record time-based attendance\n   */\n  async recordTimeBasedAttendance(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId, sessionType, location, qrCodeData } = req.body;\n      \n      if (!employeeId || !sessionType || !location || !qrCodeData) {\n        return res.status(400).json(createResponse(false, 'Missing required fields', undefined, 'MISSING_FIELDS', req));\n      }\n\n      // Get the uploaded file from Multer\n      const selfieFile = req.file;\n      let selfieUrl = null;\n\n      if (selfieFile) {\n        // Generate the URL for the uploaded file\n        selfieUrl = `/uploads/${selfieFile.filename}`;\n      }\n\n      const attendanceRecord = await kioskService.recordTimeBasedAttendance({\n        employeeId,\n        sessionType,\n        location,\n        qrCodeData,\n        selfieUrl: selfieUrl || undefined\n      });\n\n      res.json(createResponse(true, 'Time-based attendance recorded successfully', attendanceRecord, undefined, req));\n    } catch (error) {\n      console.error('Error recording time-based attendance:', error);\n      res.status(500).json(createResponse(false, 'Failed to record time-based attendance', undefined, (error as Error).message || 'RECORDING_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Validate attendance action\n   */\n  async validateAttendanceAction(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId, sessionType } = req.body;\n      \n      if (!employeeId || !sessionType) {\n        return res.status(400).json(createResponse(false, 'Employee ID and session type are required', undefined, 'MISSING_FIELDS', req));\n      }\n\n      const validation = await kioskService.validateAttendanceAction(employeeId, sessionType);\n\n      res.json(createResponse(true, 'Attendance action validated successfully', validation, undefined, req));\n    } catch (error) {\n      console.error('Error validating attendance action:', error);\n      res.status(500).json(createResponse(false, 'Failed to validate attendance action', undefined, 'VALIDATION_FAILED', req));\n    }\n    return;\n  }\n}\n\nexport default new KioskController();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c7cc5687c93e0ba3a0cc94d00b2c08e8d3abfb75"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rpnl9k6zd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rpnl9k6zd();
var __importDefault =
/* istanbul ignore next */
(cov_2rpnl9k6zd().s[0]++,
/* istanbul ignore next */
(cov_2rpnl9k6zd().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2rpnl9k6zd().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2rpnl9k6zd().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2rpnl9k6zd().f[0]++;
  cov_2rpnl9k6zd().s[1]++;
  return /* istanbul ignore next */(cov_2rpnl9k6zd().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2rpnl9k6zd().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2rpnl9k6zd().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2rpnl9k6zd().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2rpnl9k6zd().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const kioskService_1 =
/* istanbul ignore next */
(cov_2rpnl9k6zd().s[3]++, __importDefault(require("../../services/kiosk/kioskService")));
/**
 * Helper function to create standardized API responses
 */
/* istanbul ignore next */
cov_2rpnl9k6zd().s[4]++;
const createResponse = (success, message, data, error, req) => {
  /* istanbul ignore next */
  cov_2rpnl9k6zd().f[1]++;
  cov_2rpnl9k6zd().s[5]++;
  return {
    success,
    message,
    ...(
    /* istanbul ignore next */
    (cov_2rpnl9k6zd().b[3][0]++, data) &&
    /* istanbul ignore next */
    (cov_2rpnl9k6zd().b[3][1]++, {
      data
    })),
    ...(
    /* istanbul ignore next */
    (cov_2rpnl9k6zd().b[4][0]++, error) &&
    /* istanbul ignore next */
    (cov_2rpnl9k6zd().b[4][1]++, {
      error
    })),
    timestamp: new Date().toISOString(),
    requestId: req?.requestId
  };
};
class KioskController {
  /**
   * Verify employee by QR code data
   */
  async verifyEmployeeByQR(req, res) {
    /* istanbul ignore next */
    cov_2rpnl9k6zd().f[2]++;
    cov_2rpnl9k6zd().s[6]++;
    try {
      const {
        qrCode
      } =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[7]++, req.query);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[8]++;
      if (
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[6][0]++, !qrCode) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[6][1]++, typeof qrCode !== 'string')) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[5][0]++;
        cov_2rpnl9k6zd().s[9]++;
        return res.status(400).json(createResponse(false, 'QR code is required', undefined, 'MISSING_QR_CODE', req));
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[5][1]++;
      }
      const employee =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[10]++, await kioskService_1.default.verifyEmployeeByQR(qrCode));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[11]++;
      res.json(createResponse(true, 'Employee verified successfully', employee, undefined, req));
    } catch (error) {
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[12]++;
      console.error('Error verifying employee by QR:', error);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[13]++;
      res.status(500).json(createResponse(false, 'Failed to verify employee', undefined, 'VERIFICATION_FAILED', req));
    }
    /* istanbul ignore next */
    cov_2rpnl9k6zd().s[14]++;
    return;
  }
  /**
   * Record attendance
   */
  async recordAttendance(req, res) {
    /* istanbul ignore next */
    cov_2rpnl9k6zd().f[3]++;
    cov_2rpnl9k6zd().s[15]++;
    try {
      const {
        employeeId,
        type,
        location,
        qrCodeData,
        selfieUrl
      } =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[16]++, req.body);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[17]++;
      if (
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[8][0]++, !employeeId) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[8][1]++, !type) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[8][2]++, !location) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[8][3]++, !qrCodeData)) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[7][0]++;
        cov_2rpnl9k6zd().s[18]++;
        return res.status(400).json(createResponse(false, 'Missing required fields', undefined, 'MISSING_FIELDS', req));
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[7][1]++;
      }
      const attendanceRecord =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[19]++, await kioskService_1.default.recordAttendance({
        employeeId,
        type,
        location,
        qrCodeData,
        selfieUrl
      }));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[20]++;
      res.json(createResponse(true, 'Attendance recorded successfully', attendanceRecord, undefined, req));
    } catch (error) {
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[21]++;
      console.error('Error recording attendance:', error);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[22]++;
      res.status(500).json(createResponse(false, 'Failed to record attendance', undefined,
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[9][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[9][1]++, 'RECORDING_FAILED'), req));
    }
    /* istanbul ignore next */
    cov_2rpnl9k6zd().s[23]++;
    return;
  }
  /**
   * Get last attendance record for employee
   */
  async getLastAttendance(req, res) {
    /* istanbul ignore next */
    cov_2rpnl9k6zd().f[4]++;
    cov_2rpnl9k6zd().s[24]++;
    try {
      const {
        employeeId
      } =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[25]++, req.params);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[26]++;
      if (!employeeId) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[10][0]++;
        cov_2rpnl9k6zd().s[27]++;
        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[10][1]++;
      }
      const lastAttendance =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[28]++, await kioskService_1.default.getLastAttendance(employeeId));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[29]++;
      res.json(createResponse(true, 'Last attendance retrieved successfully', lastAttendance, undefined, req));
    } catch (error) {
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[30]++;
      console.error('Error getting last attendance:', error);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[31]++;
      res.status(500).json(createResponse(false, 'Failed to retrieve last attendance', undefined, 'RETRIEVAL_FAILED', req));
    }
    /* istanbul ignore next */
    cov_2rpnl9k6zd().s[32]++;
    return;
  }
  /**
   * Get attendance history for employee
   */
  async getAttendanceHistory(req, res) {
    /* istanbul ignore next */
    cov_2rpnl9k6zd().f[5]++;
    cov_2rpnl9k6zd().s[33]++;
    try {
      const {
        employeeId
      } =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[34]++, req.params);
      const limit =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[35]++,
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[11][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[11][1]++, 10));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[36]++;
      if (!employeeId) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[12][0]++;
        cov_2rpnl9k6zd().s[37]++;
        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[12][1]++;
      }
      const attendanceHistory =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[38]++, await kioskService_1.default.getAttendanceHistory(employeeId, limit));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[39]++;
      res.json(createResponse(true, 'Attendance history retrieved successfully', attendanceHistory, undefined, req));
    } catch (error) {
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[40]++;
      console.error('Error getting attendance history:', error);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[41]++;
      res.status(500).json(createResponse(false, 'Failed to retrieve attendance history', undefined, 'RETRIEVAL_FAILED', req));
    }
    /* istanbul ignore next */
    cov_2rpnl9k6zd().s[42]++;
    return;
  }
  /**
   * Get next expected session for employee
   */
  async getNextExpectedSession(req, res) {
    /* istanbul ignore next */
    cov_2rpnl9k6zd().f[6]++;
    cov_2rpnl9k6zd().s[43]++;
    try {
      const {
        employeeId
      } =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[44]++, req.params);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[45]++;
      if (!employeeId) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[13][0]++;
        cov_2rpnl9k6zd().s[46]++;
        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[13][1]++;
      }
      const nextSession =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[47]++, await kioskService_1.default.getNextExpectedSession(employeeId));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[48]++;
      res.json(createResponse(true, 'Next expected session retrieved successfully', nextSession, undefined, req));
    } catch (error) {
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[49]++;
      console.error('Error getting next expected session:', error);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[50]++;
      res.status(500).json(createResponse(false, 'Failed to retrieve next expected session', undefined, 'RETRIEVAL_FAILED', req));
    }
    /* istanbul ignore next */
    cov_2rpnl9k6zd().s[51]++;
    return;
  }
  /**
   * Get today's attendance summary for employee
   */
  async getTodayAttendanceSummary(req, res) {
    /* istanbul ignore next */
    cov_2rpnl9k6zd().f[7]++;
    cov_2rpnl9k6zd().s[52]++;
    try {
      const {
        employeeId
      } =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[53]++, req.params);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[54]++;
      if (!employeeId) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[14][0]++;
        cov_2rpnl9k6zd().s[55]++;
        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[14][1]++;
      }
      const todaySummary =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[56]++, await kioskService_1.default.getTodayAttendanceSummary(employeeId));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[57]++;
      res.json(createResponse(true, 'Today\'s attendance summary retrieved successfully', todaySummary, undefined, req));
    } catch (error) {
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[58]++;
      console.error('Error getting today\'s attendance summary:', error);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[59]++;
      res.status(500).json(createResponse(false, 'Failed to retrieve today\'s attendance summary', undefined, 'RETRIEVAL_FAILED', req));
    }
    /* istanbul ignore next */
    cov_2rpnl9k6zd().s[60]++;
    return;
  }
  /**
   * Record time-based attendance
   */
  async recordTimeBasedAttendance(req, res) {
    /* istanbul ignore next */
    cov_2rpnl9k6zd().f[8]++;
    cov_2rpnl9k6zd().s[61]++;
    try {
      const {
        employeeId,
        sessionType,
        location,
        qrCodeData
      } =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[62]++, req.body);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[63]++;
      if (
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[16][0]++, !employeeId) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[16][1]++, !sessionType) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[16][2]++, !location) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[16][3]++, !qrCodeData)) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[15][0]++;
        cov_2rpnl9k6zd().s[64]++;
        return res.status(400).json(createResponse(false, 'Missing required fields', undefined, 'MISSING_FIELDS', req));
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[15][1]++;
      }
      // Get the uploaded file from Multer
      const selfieFile =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[65]++, req.file);
      let selfieUrl =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[66]++, null);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[67]++;
      if (selfieFile) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[17][0]++;
        cov_2rpnl9k6zd().s[68]++;
        // Generate the URL for the uploaded file
        selfieUrl = `/uploads/${selfieFile.filename}`;
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[17][1]++;
      }
      const attendanceRecord =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[69]++, await kioskService_1.default.recordTimeBasedAttendance({
        employeeId,
        sessionType,
        location,
        qrCodeData,
        selfieUrl:
        /* istanbul ignore next */
        (cov_2rpnl9k6zd().b[18][0]++, selfieUrl) ||
        /* istanbul ignore next */
        (cov_2rpnl9k6zd().b[18][1]++, undefined)
      }));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[70]++;
      res.json(createResponse(true, 'Time-based attendance recorded successfully', attendanceRecord, undefined, req));
    } catch (error) {
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[71]++;
      console.error('Error recording time-based attendance:', error);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[72]++;
      res.status(500).json(createResponse(false, 'Failed to record time-based attendance', undefined,
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[19][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[19][1]++, 'RECORDING_FAILED'), req));
    }
    /* istanbul ignore next */
    cov_2rpnl9k6zd().s[73]++;
    return;
  }
  /**
   * Validate attendance action
   */
  async validateAttendanceAction(req, res) {
    /* istanbul ignore next */
    cov_2rpnl9k6zd().f[9]++;
    cov_2rpnl9k6zd().s[74]++;
    try {
      const {
        employeeId,
        sessionType
      } =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[75]++, req.body);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[76]++;
      if (
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[21][0]++, !employeeId) ||
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().b[21][1]++, !sessionType)) {
        /* istanbul ignore next */
        cov_2rpnl9k6zd().b[20][0]++;
        cov_2rpnl9k6zd().s[77]++;
        return res.status(400).json(createResponse(false, 'Employee ID and session type are required', undefined, 'MISSING_FIELDS', req));
      } else
      /* istanbul ignore next */
      {
        cov_2rpnl9k6zd().b[20][1]++;
      }
      const validation =
      /* istanbul ignore next */
      (cov_2rpnl9k6zd().s[78]++, await kioskService_1.default.validateAttendanceAction(employeeId, sessionType));
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[79]++;
      res.json(createResponse(true, 'Attendance action validated successfully', validation, undefined, req));
    } catch (error) {
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[80]++;
      console.error('Error validating attendance action:', error);
      /* istanbul ignore next */
      cov_2rpnl9k6zd().s[81]++;
      res.status(500).json(createResponse(false, 'Failed to validate attendance action', undefined, 'VALIDATION_FAILED', req));
    }
    /* istanbul ignore next */
    cov_2rpnl9k6zd().s[82]++;
    return;
  }
}
/* istanbul ignore next */
cov_2rpnl9k6zd().s[83]++;
exports.default = new KioskController();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,