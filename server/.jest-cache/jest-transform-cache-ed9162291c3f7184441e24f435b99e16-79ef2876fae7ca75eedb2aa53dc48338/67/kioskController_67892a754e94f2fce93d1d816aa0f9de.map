{"version":3,"names":["cov_2rpnl9k6zd","actualCoverage","kioskService_1","s","__importDefault","require","createResponse","success","message","data","error","req","f","b","timestamp","Date","toISOString","requestId","KioskController","verifyEmployeeByQR","res","qrCode","query","status","json","undefined","employee","default","console","recordAttendance","employeeId","type","location","qrCodeData","selfieUrl","body","attendanceRecord","getLastAttendance","params","lastAttendance","getAttendanceHistory","limit","parseInt","attendanceHistory","getNextExpectedSession","nextSession","getTodayAttendanceSummary","todaySummary","recordTimeBasedAttendance","sessionType","selfieFile","file","filename","validateAttendanceAction","validation","exports"],"sources":["/home/kim/tito/server/src/controllers/kiosk/kioskController.ts"],"sourcesContent":["import { Request, Response } from 'express';\nimport kioskService from '../../services/kiosk/kioskService';\nimport { ApiResponse } from '../../utils/types/express';\n\n/**\n * Helper function to create standardized API responses\n */\nconst createResponse = (\n  success: boolean,\n  message: string,\n  data?: any,\n  error?: string,\n  req?: Request\n): ApiResponse => ({\n  success,\n  message,\n  ...(data && { data }),\n  ...(error && { error }),\n  timestamp: new Date().toISOString(),\n  requestId: req?.requestId\n});\n\nclass KioskController {\n  /**\n   * Verify employee by QR code data\n   */\n  async verifyEmployeeByQR(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { qrCode } = req.query;\n      \n      if (!qrCode || typeof qrCode !== 'string') {\n        return res.status(400).json(createResponse(false, 'QR code is required', undefined, 'MISSING_QR_CODE', req));\n      }\n\n      const employee = await kioskService.verifyEmployeeByQR(qrCode);\n\n      res.json(createResponse(true, 'Employee verified successfully', employee, undefined, req));\n    } catch (error) {\n      console.error('Error verifying employee by QR:', error);\n      res.status(500).json(createResponse(false, 'Failed to verify employee', undefined, 'VERIFICATION_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Record attendance\n   */\n  async recordAttendance(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId, type, location, qrCodeData, selfieUrl } = req.body;\n      \n      if (!employeeId || !type || !location || !qrCodeData) {\n        return res.status(400).json(createResponse(false, 'Missing required fields', undefined, 'MISSING_FIELDS', req));\n      }\n\n      const attendanceRecord = await kioskService.recordAttendance({\n        employeeId,\n        type,\n        location,\n        qrCodeData,\n        selfieUrl\n      });\n\n      res.json(createResponse(true, 'Attendance recorded successfully', attendanceRecord, undefined, req));\n    } catch (error) {\n      console.error('Error recording attendance:', error);\n      res.status(500).json(createResponse(false, 'Failed to record attendance', undefined, (error as Error).message || 'RECORDING_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Get last attendance record for employee\n   */\n  async getLastAttendance(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId } = req.params;\n      \n      if (!employeeId) {\n        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));\n      }\n\n      const lastAttendance = await kioskService.getLastAttendance(employeeId);\n\n      res.json(createResponse(true, 'Last attendance retrieved successfully', lastAttendance, undefined, req));\n    } catch (error) {\n      console.error('Error getting last attendance:', error);\n      res.status(500).json(createResponse(false, 'Failed to retrieve last attendance', undefined, 'RETRIEVAL_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Get attendance history for employee\n   */\n  async getAttendanceHistory(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId } = req.params;\n      const limit = parseInt(req.query.limit as string) || 10;\n      \n      if (!employeeId) {\n        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));\n      }\n\n      const attendanceHistory = await kioskService.getAttendanceHistory(employeeId, limit);\n\n      res.json(createResponse(true, 'Attendance history retrieved successfully', attendanceHistory, undefined, req));\n    } catch (error) {\n      console.error('Error getting attendance history:', error);\n      res.status(500).json(createResponse(false, 'Failed to retrieve attendance history', undefined, 'RETRIEVAL_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Get next expected session for employee\n   */\n  async getNextExpectedSession(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId } = req.params;\n      \n      if (!employeeId) {\n        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));\n      }\n\n      const nextSession = await kioskService.getNextExpectedSession(employeeId);\n\n      res.json(createResponse(true, 'Next expected session retrieved successfully', nextSession, undefined, req));\n    } catch (error) {\n      console.error('Error getting next expected session:', error);\n      res.status(500).json(createResponse(false, 'Failed to retrieve next expected session', undefined, 'RETRIEVAL_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Get today's attendance summary for employee\n   */\n  async getTodayAttendanceSummary(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId } = req.params;\n      \n      if (!employeeId) {\n        return res.status(400).json(createResponse(false, 'Employee ID is required', undefined, 'MISSING_EMPLOYEE_ID', req));\n      }\n\n      const todaySummary = await kioskService.getTodayAttendanceSummary(employeeId);\n\n      res.json(createResponse(true, 'Today\\'s attendance summary retrieved successfully', todaySummary, undefined, req));\n    } catch (error) {\n      console.error('Error getting today\\'s attendance summary:', error);\n      res.status(500).json(createResponse(false, 'Failed to retrieve today\\'s attendance summary', undefined, 'RETRIEVAL_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Record time-based attendance\n   */\n  async recordTimeBasedAttendance(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId, sessionType, location, qrCodeData } = req.body;\n      \n      if (!employeeId || !sessionType || !location || !qrCodeData) {\n        return res.status(400).json(createResponse(false, 'Missing required fields', undefined, 'MISSING_FIELDS', req));\n      }\n\n      // Get the uploaded file from Multer\n      const selfieFile = req.file;\n      let selfieUrl = null;\n\n      if (selfieFile) {\n        // Generate the URL for the uploaded file\n        selfieUrl = `/uploads/${selfieFile.filename}`;\n      }\n\n      const attendanceRecord = await kioskService.recordTimeBasedAttendance({\n        employeeId,\n        sessionType,\n        location,\n        qrCodeData,\n        selfieUrl: selfieUrl || undefined\n      });\n\n      res.json(createResponse(true, 'Time-based attendance recorded successfully', attendanceRecord, undefined, req));\n    } catch (error) {\n      console.error('Error recording time-based attendance:', error);\n      res.status(500).json(createResponse(false, 'Failed to record time-based attendance', undefined, (error as Error).message || 'RECORDING_FAILED', req));\n    }\n    return;\n  }\n\n  /**\n   * Validate attendance action\n   */\n  async validateAttendanceAction(req: Request, res: Response<ApiResponse>) {\n    try {\n      const { employeeId, sessionType } = req.body;\n      \n      if (!employeeId || !sessionType) {\n        return res.status(400).json(createResponse(false, 'Employee ID and session type are required', undefined, 'MISSING_FIELDS', req));\n      }\n\n      const validation = await kioskService.validateAttendanceAction(employeeId, sessionType);\n\n      res.json(createResponse(true, 'Attendance action validated successfully', validation, undefined, req));\n    } catch (error) {\n      console.error('Error validating attendance action:', error);\n      res.status(500).json(createResponse(false, 'Failed to validate attendance action', undefined, 'VALIDATION_FAILED', req));\n    }\n    return;\n  }\n}\n\nexport default new KioskController();\n"],"mappingsmBE;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBF,MAAAE,cAAA;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAAC,eAAA,CAAAC,OAAA;AAGA;;;AAAA;AAAAL,cAAA,GAAAG,CAAA;AAGA,MAAMG,cAAc,GAAGA,CACrBC,OAAgB,EAChBC,OAAe,EACfC,IAAU,EACVC,KAAc,EACdC,GAAa,KACI;EAAA;EAAAX,cAAA,GAAAY,CAAA;EAAAZ,cAAA,GAAAG,CAAA;EAAA;IACjBI,OAAO;IACPC,OAAO;IACP;IAAI;IAAA,CAAAR,cAAA,GAAAa,CAAA,UAAAJ,IAAI;IAAA;IAAA,CAAAT,cAAA,GAAAa,CAAA,UAAI;MAAEJ;IAAI,CAAE,EAAC;IACrB;IAAI;IAAA,CAAAT,cAAA,GAAAa,CAAA,UAAAH,KAAK;IAAA;IAAA,CAAAV,cAAA,GAAAa,CAAA,UAAI;MAAEH;IAAK,CAAE,EAAC;IACvBI,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;IACnCC,SAAS,EAAEN,GAAG,EAAEM;GACjB;CAAC;AAEF,MAAMC,eAAe;EACnB;;;EAGA,MAAMC,kBAAkBA,CAACR,GAAY,EAAES,GAA0B;IAAA;IAAApB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IAC/D,IAAI;MACF,MAAM;QAAEkB;MAAM,CAAE;MAAA;MAAA,CAAArB,cAAA,GAAAG,CAAA,OAAGQ,GAAG,CAACW,KAAK;MAAC;MAAAtB,cAAA,GAAAG,CAAA;MAE7B;MAAI;MAAA,CAAAH,cAAA,GAAAa,CAAA,WAACQ,MAAM;MAAA;MAAA,CAAArB,cAAA,GAAAa,CAAA,UAAI,OAAOQ,MAAM,KAAK,QAAQ,GAAE;QAAA;QAAArB,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QACzC,OAAOiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,qBAAqB,EAAEmB,SAAS,EAAE,iBAAiB,EAAEd,GAAG,CAAC,CAAC;MAC9G,CAAC;MAAA;MAAA;QAAAX,cAAA,GAAAa,CAAA;MAAA;MAED,MAAMa,QAAQ;MAAA;MAAA,CAAA1B,cAAA,GAAAG,CAAA,QAAG,MAAMD,cAAA,CAAAyB,OAAY,CAACR,kBAAkB,CAACE,MAAM,CAAC;MAAC;MAAArB,cAAA,GAAAG,CAAA;MAE/DiB,GAAG,CAACI,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,gCAAgC,EAAEoB,QAAQ,EAAED,SAAS,EAAEd,GAAG,CAAC,CAAC;IAC5F,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAV,cAAA,GAAAG,CAAA;MACdyB,OAAO,CAAClB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAAC;MAAAV,cAAA,GAAAG,CAAA;MACxDiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,2BAA2B,EAAEmB,SAAS,EAAE,qBAAqB,EAAEd,GAAG,CAAC,CAAC;IACjH;IAAC;IAAAX,cAAA,GAAAG,CAAA;IACD;EACF;EAEA;;;EAGA,MAAM0B,gBAAgBA,CAAClB,GAAY,EAAES,GAA0B;IAAA;IAAApB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IAC7D,IAAI;MACF,MAAM;QAAE2B,UAAU;QAAEC,IAAI;QAAEC,QAAQ;QAAEC,UAAU;QAAEC;MAAS,CAAE;MAAA;MAAA,CAAAlC,cAAA,GAAAG,CAAA,QAAGQ,GAAG,CAACwB,IAAI;MAAC;MAAAnC,cAAA,GAAAG,CAAA;MAEvE;MAAI;MAAA,CAAAH,cAAA,GAAAa,CAAA,WAACiB,UAAU;MAAA;MAAA,CAAA9B,cAAA,GAAAa,CAAA,UAAI,CAACkB,IAAI;MAAA;MAAA,CAAA/B,cAAA,GAAAa,CAAA,UAAI,CAACmB,QAAQ;MAAA;MAAA,CAAAhC,cAAA,GAAAa,CAAA,UAAI,CAACoB,UAAU,GAAE;QAAA;QAAAjC,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QACpD,OAAOiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,yBAAyB,EAAEmB,SAAS,EAAE,gBAAgB,EAAEd,GAAG,CAAC,CAAC;MACjH,CAAC;MAAA;MAAA;QAAAX,cAAA,GAAAa,CAAA;MAAA;MAED,MAAMuB,gBAAgB;MAAA;MAAA,CAAApC,cAAA,GAAAG,CAAA,QAAG,MAAMD,cAAA,CAAAyB,OAAY,CAACE,gBAAgB,CAAC;QAC3DC,UAAU;QACVC,IAAI;QACJC,QAAQ;QACRC,UAAU;QACVC;OACD,CAAC;MAAC;MAAAlC,cAAA,GAAAG,CAAA;MAEHiB,GAAG,CAACI,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,kCAAkC,EAAE8B,gBAAgB,EAAEX,SAAS,EAAEd,GAAG,CAAC,CAAC;IACtG,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAV,cAAA,GAAAG,CAAA;MACdyB,OAAO,CAAClB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MAAC;MAAAV,cAAA,GAAAG,CAAA;MACpDiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,6BAA6B,EAAEmB,SAAS;MAAG;MAAA,CAAAzB,cAAA,GAAAa,CAAA,UAAAH,KAAe,CAACF,OAAO;MAAA;MAAA,CAAAR,cAAA,GAAAa,CAAA,UAAI,kBAAkB,GAAEF,GAAG,CAAC,CAAC;IAC5I;IAAC;IAAAX,cAAA,GAAAG,CAAA;IACD;EACF;EAEA;;;EAGA,MAAMkC,iBAAiBA,CAAC1B,GAAY,EAAES,GAA0B;IAAA;IAAApB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IAC9D,IAAI;MACF,MAAM;QAAE2B;MAAU,CAAE;MAAA;MAAA,CAAA9B,cAAA,GAAAG,CAAA,QAAGQ,GAAG,CAAC2B,MAAM;MAAC;MAAAtC,cAAA,GAAAG,CAAA;MAElC,IAAI,CAAC2B,UAAU,EAAE;QAAA;QAAA9B,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QACf,OAAOiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,yBAAyB,EAAEmB,SAAS,EAAE,qBAAqB,EAAEd,GAAG,CAAC,CAAC;MACtH,CAAC;MAAA;MAAA;QAAAX,cAAA,GAAAa,CAAA;MAAA;MAED,MAAM0B,cAAc;MAAA;MAAA,CAAAvC,cAAA,GAAAG,CAAA,QAAG,MAAMD,cAAA,CAAAyB,OAAY,CAACU,iBAAiB,CAACP,UAAU,CAAC;MAAC;MAAA9B,cAAA,GAAAG,CAAA;MAExEiB,GAAG,CAACI,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,wCAAwC,EAAEiC,cAAc,EAAEd,SAAS,EAAEd,GAAG,CAAC,CAAC;IAC1G,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAV,cAAA,GAAAG,CAAA;MACdyB,OAAO,CAAClB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAAC;MAAAV,cAAA,GAAAG,CAAA;MACvDiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,oCAAoC,EAAEmB,SAAS,EAAE,kBAAkB,EAAEd,GAAG,CAAC,CAAC;IACvH;IAAC;IAAAX,cAAA,GAAAG,CAAA;IACD;EACF;EAEA;;;EAGA,MAAMqC,oBAAoBA,CAAC7B,GAAY,EAAES,GAA0B;IAAA;IAAApB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IACjE,IAAI;MACF,MAAM;QAAE2B;MAAU,CAAE;MAAA;MAAA,CAAA9B,cAAA,GAAAG,CAAA,QAAGQ,GAAG,CAAC2B,MAAM;MACjC,MAAMG,KAAK;MAAA;MAAA,CAAAzC,cAAA,GAAAG,CAAA;MAAG;MAAA,CAAAH,cAAA,GAAAa,CAAA,WAAA6B,QAAQ,CAAC/B,GAAG,CAACW,KAAK,CAACmB,KAAe,CAAC;MAAA;MAAA,CAAAzC,cAAA,GAAAa,CAAA,WAAI,EAAE;MAAC;MAAAb,cAAA,GAAAG,CAAA;MAExD,IAAI,CAAC2B,UAAU,EAAE;QAAA;QAAA9B,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QACf,OAAOiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,yBAAyB,EAAEmB,SAAS,EAAE,qBAAqB,EAAEd,GAAG,CAAC,CAAC;MACtH,CAAC;MAAA;MAAA;QAAAX,cAAA,GAAAa,CAAA;MAAA;MAED,MAAM8B,iBAAiB;MAAA;MAAA,CAAA3C,cAAA,GAAAG,CAAA,QAAG,MAAMD,cAAA,CAAAyB,OAAY,CAACa,oBAAoB,CAACV,UAAU,EAAEW,KAAK,CAAC;MAAC;MAAAzC,cAAA,GAAAG,CAAA;MAErFiB,GAAG,CAACI,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,2CAA2C,EAAEqC,iBAAiB,EAAElB,SAAS,EAAEd,GAAG,CAAC,CAAC;IAChH,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAV,cAAA,GAAAG,CAAA;MACdyB,OAAO,CAAClB,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAAC;MAAAV,cAAA,GAAAG,CAAA;MAC1DiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,uCAAuC,EAAEmB,SAAS,EAAE,kBAAkB,EAAEd,GAAG,CAAC,CAAC;IAC1H;IAAC;IAAAX,cAAA,GAAAG,CAAA;IACD;EACF;EAEA;;;EAGA,MAAMyC,sBAAsBA,CAACjC,GAAY,EAAES,GAA0B;IAAA;IAAApB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IACnE,IAAI;MACF,MAAM;QAAE2B;MAAU,CAAE;MAAA;MAAA,CAAA9B,cAAA,GAAAG,CAAA,QAAGQ,GAAG,CAAC2B,MAAM;MAAC;MAAAtC,cAAA,GAAAG,CAAA;MAElC,IAAI,CAAC2B,UAAU,EAAE;QAAA;QAAA9B,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QACf,OAAOiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,yBAAyB,EAAEmB,SAAS,EAAE,qBAAqB,EAAEd,GAAG,CAAC,CAAC;MACtH,CAAC;MAAA;MAAA;QAAAX,cAAA,GAAAa,CAAA;MAAA;MAED,MAAMgC,WAAW;MAAA;MAAA,CAAA7C,cAAA,GAAAG,CAAA,QAAG,MAAMD,cAAA,CAAAyB,OAAY,CAACiB,sBAAsB,CAACd,UAAU,CAAC;MAAC;MAAA9B,cAAA,GAAAG,CAAA;MAE1EiB,GAAG,CAACI,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,8CAA8C,EAAEuC,WAAW,EAAEpB,SAAS,EAAEd,GAAG,CAAC,CAAC;IAC7G,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAV,cAAA,GAAAG,CAAA;MACdyB,OAAO,CAAClB,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAAC;MAAAV,cAAA,GAAAG,CAAA;MAC7DiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,0CAA0C,EAAEmB,SAAS,EAAE,kBAAkB,EAAEd,GAAG,CAAC,CAAC;IAC7H;IAAC;IAAAX,cAAA,GAAAG,CAAA;IACD;EACF;EAEA;;;EAGA,MAAM2C,yBAAyBA,CAACnC,GAAY,EAAES,GAA0B;IAAA;IAAApB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IACtE,IAAI;MACF,MAAM;QAAE2B;MAAU,CAAE;MAAA;MAAA,CAAA9B,cAAA,GAAAG,CAAA,QAAGQ,GAAG,CAAC2B,MAAM;MAAC;MAAAtC,cAAA,GAAAG,CAAA;MAElC,IAAI,CAAC2B,UAAU,EAAE;QAAA;QAAA9B,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QACf,OAAOiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,yBAAyB,EAAEmB,SAAS,EAAE,qBAAqB,EAAEd,GAAG,CAAC,CAAC;MACtH,CAAC;MAAA;MAAA;QAAAX,cAAA,GAAAa,CAAA;MAAA;MAED,MAAMkC,YAAY;MAAA;MAAA,CAAA/C,cAAA,GAAAG,CAAA,QAAG,MAAMD,cAAA,CAAAyB,OAAY,CAACmB,yBAAyB,CAAChB,UAAU,CAAC;MAAC;MAAA9B,cAAA,GAAAG,CAAA;MAE9EiB,GAAG,CAACI,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,oDAAoD,EAAEyC,YAAY,EAAEtB,SAAS,EAAEd,GAAG,CAAC,CAAC;IACpH,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAV,cAAA,GAAAG,CAAA;MACdyB,OAAO,CAAClB,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAAC;MAAAV,cAAA,GAAAG,CAAA;MACnEiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,gDAAgD,EAAEmB,SAAS,EAAE,kBAAkB,EAAEd,GAAG,CAAC,CAAC;IACnI;IAAC;IAAAX,cAAA,GAAAG,CAAA;IACD;EACF;EAEA;;;EAGA,MAAM6C,yBAAyBA,CAACrC,GAAY,EAAES,GAA0B;IAAA;IAAApB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IACtE,IAAI;MACF,MAAM;QAAE2B,UAAU;QAAEmB,WAAW;QAAEjB,QAAQ;QAAEC;MAAU,CAAE;MAAA;MAAA,CAAAjC,cAAA,GAAAG,CAAA,QAAGQ,GAAG,CAACwB,IAAI;MAAC;MAAAnC,cAAA,GAAAG,CAAA;MAEnE;MAAI;MAAA,CAAAH,cAAA,GAAAa,CAAA,YAACiB,UAAU;MAAA;MAAA,CAAA9B,cAAA,GAAAa,CAAA,WAAI,CAACoC,WAAW;MAAA;MAAA,CAAAjD,cAAA,GAAAa,CAAA,WAAI,CAACmB,QAAQ;MAAA;MAAA,CAAAhC,cAAA,GAAAa,CAAA,WAAI,CAACoB,UAAU,GAAE;QAAA;QAAAjC,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QAC3D,OAAOiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,yBAAyB,EAAEmB,SAAS,EAAE,gBAAgB,EAAEd,GAAG,CAAC,CAAC;MACjH,CAAC;MAAA;MAAA;QAAAX,cAAA,GAAAa,CAAA;MAAA;MAED;MACA,MAAMqC,UAAU;MAAA;MAAA,CAAAlD,cAAA,GAAAG,CAAA,QAAGQ,GAAG,CAACwC,IAAI;MAC3B,IAAIjB,SAAS;MAAA;MAAA,CAAAlC,cAAA,GAAAG,CAAA,QAAG,IAAI;MAAC;MAAAH,cAAA,GAAAG,CAAA;MAErB,IAAI+C,UAAU,EAAE;QAAA;QAAAlD,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QACd;QACA+B,SAAS,GAAG,YAAYgB,UAAU,CAACE,QAAQ,EAAE;MAC/C,CAAC;MAAA;MAAA;QAAApD,cAAA,GAAAa,CAAA;MAAA;MAED,MAAMuB,gBAAgB;MAAA;MAAA,CAAApC,cAAA,GAAAG,CAAA,QAAG,MAAMD,cAAA,CAAAyB,OAAY,CAACqB,yBAAyB,CAAC;QACpElB,UAAU;QACVmB,WAAW;QACXjB,QAAQ;QACRC,UAAU;QACVC,SAAS;QAAE;QAAA,CAAAlC,cAAA,GAAAa,CAAA,WAAAqB,SAAS;QAAA;QAAA,CAAAlC,cAAA,GAAAa,CAAA,WAAIY,SAAS;OAClC,CAAC;MAAC;MAAAzB,cAAA,GAAAG,CAAA;MAEHiB,GAAG,CAACI,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,6CAA6C,EAAE8B,gBAAgB,EAAEX,SAAS,EAAEd,GAAG,CAAC,CAAC;IACjH,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAV,cAAA,GAAAG,CAAA;MACdyB,OAAO,CAAClB,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAAC;MAAAV,cAAA,GAAAG,CAAA;MAC/DiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,wCAAwC,EAAEmB,SAAS;MAAG;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAAH,KAAe,CAACF,OAAO;MAAA;MAAA,CAAAR,cAAA,GAAAa,CAAA,WAAI,kBAAkB,GAAEF,GAAG,CAAC,CAAC;IACvJ;IAAC;IAAAX,cAAA,GAAAG,CAAA;IACD;EACF;EAEA;;;EAGA,MAAMkD,wBAAwBA,CAAC1C,GAAY,EAAES,GAA0B;IAAA;IAAApB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IACrE,IAAI;MACF,MAAM;QAAE2B,UAAU;QAAEmB;MAAW,CAAE;MAAA;MAAA,CAAAjD,cAAA,GAAAG,CAAA,QAAGQ,GAAG,CAACwB,IAAI;MAAC;MAAAnC,cAAA,GAAAG,CAAA;MAE7C;MAAI;MAAA,CAAAH,cAAA,GAAAa,CAAA,YAACiB,UAAU;MAAA;MAAA,CAAA9B,cAAA,GAAAa,CAAA,WAAI,CAACoC,WAAW,GAAE;QAAA;QAAAjD,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAG,CAAA;QAC/B,OAAOiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,2CAA2C,EAAEmB,SAAS,EAAE,gBAAgB,EAAEd,GAAG,CAAC,CAAC;MACnI,CAAC;MAAA;MAAA;QAAAX,cAAA,GAAAa,CAAA;MAAA;MAED,MAAMyC,UAAU;MAAA;MAAA,CAAAtD,cAAA,GAAAG,CAAA,QAAG,MAAMD,cAAA,CAAAyB,OAAY,CAAC0B,wBAAwB,CAACvB,UAAU,EAAEmB,WAAW,CAAC;MAAC;MAAAjD,cAAA,GAAAG,CAAA;MAExFiB,GAAG,CAACI,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,0CAA0C,EAAEgD,UAAU,EAAE7B,SAAS,EAAEd,GAAG,CAAC,CAAC;IACxG,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAV,cAAA,GAAAG,CAAA;MACdyB,OAAO,CAAClB,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAAC;MAAAV,cAAA,GAAAG,CAAA;MAC5DiB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAClB,cAAc,CAAC,KAAK,EAAE,sCAAsC,EAAEmB,SAAS,EAAE,mBAAmB,EAAEd,GAAG,CAAC,CAAC;IAC1H;IAAC;IAAAX,cAAA,GAAAG,CAAA;IACD;EACF;;AACD;AAAAH,cAAA,GAAAG,CAAA;AAEDoD,OAAA,CAAA5B,OAAA,GAAe,IAAIT,eAAe,EAAE","ignoreList":[]}