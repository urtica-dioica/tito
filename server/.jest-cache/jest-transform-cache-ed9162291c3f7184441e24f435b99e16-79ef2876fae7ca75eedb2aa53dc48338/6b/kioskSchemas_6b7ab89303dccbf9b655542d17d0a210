74b2169c5d159fe5f9503df2984d29d0
"use strict";

/* istanbul ignore next */
function cov_2fl7azw98l() {
  var path = "/home/kim/tito/server/src/middleware/validation/schemas/kioskSchemas.ts";
  var hash = "b84a364dee9b387a51fd6f0476c78a05d1106270";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/middleware/validation/schemas/kioskSchemas.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 172
        }
      },
      "4": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "6": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 49,
          column: 3
        }
      },
      "7": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "8": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "9": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 94,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/middleware/validation/schemas/kioskSchemas.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/middleware/validation/schemas/kioskSchemas.ts"],
      sourcesContent: ["import Joi from 'joi';\n\n// Schema for kiosk attendance recording\nexport const kioskAttendanceSchema = Joi.object({\n  employeeId: Joi.string().uuid().required().messages({\n    'string.uuid': 'Employee ID must be a valid UUID',\n    'any.required': 'Employee ID is required'\n  }),\n  type: Joi.string().valid('clock_in', 'clock_out', 'overtime').required().messages({\n    'any.only': 'Attendance type must be clock_in, clock_out, or overtime',\n    'any.required': 'Attendance type is required'\n  }),\n  location: Joi.string().min(2).max(100).required().messages({\n    'string.min': 'Location must be at least 2 characters',\n    'string.max': 'Location cannot exceed 100 characters',\n    'any.required': 'Location is required'\n  }),\n  qrCodeData: Joi.string().min(10).required().messages({\n    'string.min': 'QR code data must be at least 10 characters',\n    'any.required': 'QR code data is required'\n  }),\n  selfieUrl: Joi.string().uri().optional().messages({\n    'string.uri': 'Selfie URL must be a valid URI'\n  }),\n  latitude: Joi.number().min(-90).max(90).optional().messages({\n    'number.min': 'Latitude must be between -90 and 90',\n    'number.max': 'Latitude must be between -90 and 90'\n  }),\n  longitude: Joi.number().min(-180).max(180).optional().messages({\n    'number.min': 'Longitude must be between -180 and 180',\n    'number.max': 'Longitude must be between -180 and 180'\n  })\n});\n\n// Schema for kiosk attendance validation\nexport const kioskValidateSchema = Joi.object({\n  employeeId: Joi.string().uuid().required().messages({\n    'string.uuid': 'Employee ID must be a valid UUID',\n    'any.required': 'Employee ID is required'\n  }),\n  sessionType: Joi.string().valid(\n    'morning_in', 'morning_out', 'afternoon_in', 'afternoon_out',\n    'clock_in', 'clock_out', 'overtime'\n  ).required().messages({\n    'any.only': 'Session type must be a valid attendance session type',\n    'any.required': 'Session type is required'\n  })\n});\n\n// Schema for kiosk route parameters\nexport const kioskParamsSchema = Joi.object({\n  employeeId: Joi.string().uuid().required().messages({\n    'string.uuid': 'Employee ID must be a valid UUID',\n    'any.required': 'Employee ID is required'\n  })\n});\n\n// Schema for time-based attendance recording\nexport const kioskTimeBasedAttendanceSchema = Joi.object({\n  employeeId: Joi.string().uuid().required().messages({\n    'string.uuid': 'Employee ID must be a valid UUID',\n    'any.required': 'Employee ID is required'\n  }),\n  sessionType: Joi.string().valid(\n    'morning_in', 'morning_out', 'afternoon_in', 'afternoon_out',\n    'clock_in', 'clock_out', 'overtime'\n  ).required().messages({\n    'any.only': 'Session type must be a valid attendance session type',\n    'any.required': 'Session type is required'\n  }),\n  location: Joi.string().min(2).max(100).required().messages({\n    'string.min': 'Location must be at least 2 characters',\n    'string.max': 'Location cannot exceed 100 characters',\n    'any.required': 'Location is required'\n  }),\n  qrCodeData: Joi.string().min(10).required().messages({\n    'string.min': 'QR code data must be at least 10 characters',\n    'any.required': 'QR code data is required'\n  }),\n  latitude: Joi.number().min(-90).max(90).optional().messages({\n    'number.min': 'Latitude must be between -90 and 90',\n    'number.max': 'Latitude must be between -90 and 90'\n  }),\n  longitude: Joi.number().min(-180).max(180).optional().messages({\n    'number.min': 'Longitude must be between -180 and 180',\n    'number.max': 'Longitude must be between -180 and 180'\n  })\n});\n\n// Schema for kiosk history query parameters\nexport const kioskHistoryQuerySchema = Joi.object({\n  limit: Joi.number().integer().min(1).max(50).optional().default(10).messages({\n    'number.min': 'Limit must be at least 1',\n    'number.max': 'Limit cannot exceed 50'\n  }),\n  page: Joi.number().integer().min(1).optional().default(1).messages({\n    'number.min': 'Page must be at least 1'\n  })\n});\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b84a364dee9b387a51fd6f0476c78a05d1106270"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fl7azw98l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fl7azw98l();
var __importDefault =
/* istanbul ignore next */
(cov_2fl7azw98l().s[0]++,
/* istanbul ignore next */
(cov_2fl7azw98l().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2fl7azw98l().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2fl7azw98l().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2fl7azw98l().f[0]++;
  cov_2fl7azw98l().s[1]++;
  return /* istanbul ignore next */(cov_2fl7azw98l().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2fl7azw98l().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2fl7azw98l().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2fl7azw98l().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2fl7azw98l().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2fl7azw98l().s[3]++;
exports.kioskHistoryQuerySchema = exports.kioskTimeBasedAttendanceSchema = exports.kioskParamsSchema = exports.kioskValidateSchema = exports.kioskAttendanceSchema = void 0;
const joi_1 =
/* istanbul ignore next */
(cov_2fl7azw98l().s[4]++, __importDefault(require("joi")));
// Schema for kiosk attendance recording
/* istanbul ignore next */
cov_2fl7azw98l().s[5]++;
exports.kioskAttendanceSchema = joi_1.default.object({
  employeeId: joi_1.default.string().uuid().required().messages({
    'string.uuid': 'Employee ID must be a valid UUID',
    'any.required': 'Employee ID is required'
  }),
  type: joi_1.default.string().valid('clock_in', 'clock_out', 'overtime').required().messages({
    'any.only': 'Attendance type must be clock_in, clock_out, or overtime',
    'any.required': 'Attendance type is required'
  }),
  location: joi_1.default.string().min(2).max(100).required().messages({
    'string.min': 'Location must be at least 2 characters',
    'string.max': 'Location cannot exceed 100 characters',
    'any.required': 'Location is required'
  }),
  qrCodeData: joi_1.default.string().min(10).required().messages({
    'string.min': 'QR code data must be at least 10 characters',
    'any.required': 'QR code data is required'
  }),
  selfieUrl: joi_1.default.string().uri().optional().messages({
    'string.uri': 'Selfie URL must be a valid URI'
  }),
  latitude: joi_1.default.number().min(-90).max(90).optional().messages({
    'number.min': 'Latitude must be between -90 and 90',
    'number.max': 'Latitude must be between -90 and 90'
  }),
  longitude: joi_1.default.number().min(-180).max(180).optional().messages({
    'number.min': 'Longitude must be between -180 and 180',
    'number.max': 'Longitude must be between -180 and 180'
  })
});
// Schema for kiosk attendance validation
/* istanbul ignore next */
cov_2fl7azw98l().s[6]++;
exports.kioskValidateSchema = joi_1.default.object({
  employeeId: joi_1.default.string().uuid().required().messages({
    'string.uuid': 'Employee ID must be a valid UUID',
    'any.required': 'Employee ID is required'
  }),
  sessionType: joi_1.default.string().valid('morning_in', 'morning_out', 'afternoon_in', 'afternoon_out', 'clock_in', 'clock_out', 'overtime').required().messages({
    'any.only': 'Session type must be a valid attendance session type',
    'any.required': 'Session type is required'
  })
});
// Schema for kiosk route parameters
/* istanbul ignore next */
cov_2fl7azw98l().s[7]++;
exports.kioskParamsSchema = joi_1.default.object({
  employeeId: joi_1.default.string().uuid().required().messages({
    'string.uuid': 'Employee ID must be a valid UUID',
    'any.required': 'Employee ID is required'
  })
});
// Schema for time-based attendance recording
/* istanbul ignore next */
cov_2fl7azw98l().s[8]++;
exports.kioskTimeBasedAttendanceSchema = joi_1.default.object({
  employeeId: joi_1.default.string().uuid().required().messages({
    'string.uuid': 'Employee ID must be a valid UUID',
    'any.required': 'Employee ID is required'
  }),
  sessionType: joi_1.default.string().valid('morning_in', 'morning_out', 'afternoon_in', 'afternoon_out', 'clock_in', 'clock_out', 'overtime').required().messages({
    'any.only': 'Session type must be a valid attendance session type',
    'any.required': 'Session type is required'
  }),
  location: joi_1.default.string().min(2).max(100).required().messages({
    'string.min': 'Location must be at least 2 characters',
    'string.max': 'Location cannot exceed 100 characters',
    'any.required': 'Location is required'
  }),
  qrCodeData: joi_1.default.string().min(10).required().messages({
    'string.min': 'QR code data must be at least 10 characters',
    'any.required': 'QR code data is required'
  }),
  latitude: joi_1.default.number().min(-90).max(90).optional().messages({
    'number.min': 'Latitude must be between -90 and 90',
    'number.max': 'Latitude must be between -90 and 90'
  }),
  longitude: joi_1.default.number().min(-180).max(180).optional().messages({
    'number.min': 'Longitude must be between -180 and 180',
    'number.max': 'Longitude must be between -180 and 180'
  })
});
// Schema for kiosk history query parameters
/* istanbul ignore next */
cov_2fl7azw98l().s[9]++;
exports.kioskHistoryQuerySchema = joi_1.default.object({
  limit: joi_1.default.number().integer().min(1).max(50).optional().default(10).messages({
    'number.min': 'Limit must be at least 1',
    'number.max': 'Limit cannot exceed 50'
  }),
  page: joi_1.default.number().integer().min(1).optional().default(1).messages({
    'number.min': 'Page must be at least 1'
  })
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmZsN2F6dzk4bCIsImFjdHVhbENvdmVyYWdlIiwiam9pXzEiLCJzIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsImV4cG9ydHMiLCJraW9za0F0dGVuZGFuY2VTY2hlbWEiLCJkZWZhdWx0Iiwib2JqZWN0IiwiZW1wbG95ZWVJZCIsInN0cmluZyIsInV1aWQiLCJyZXF1aXJlZCIsIm1lc3NhZ2VzIiwidHlwZSIsInZhbGlkIiwibG9jYXRpb24iLCJtaW4iLCJtYXgiLCJxckNvZGVEYXRhIiwic2VsZmllVXJsIiwidXJpIiwib3B0aW9uYWwiLCJsYXRpdHVkZSIsIm51bWJlciIsImxvbmdpdHVkZSIsImtpb3NrVmFsaWRhdGVTY2hlbWEiLCJzZXNzaW9uVHlwZSIsImtpb3NrUGFyYW1zU2NoZW1hIiwia2lvc2tUaW1lQmFzZWRBdHRlbmRhbmNlU2NoZW1hIiwia2lvc2tIaXN0b3J5UXVlcnlTY2hlbWEiLCJsaW1pdCIsImludGVnZXIiLCJwYWdlIl0sInNvdXJjZXMiOlsiL2hvbWUva2ltL3RpdG8vc2VydmVyL3NyYy9taWRkbGV3YXJlL3ZhbGlkYXRpb24vc2NoZW1hcy9raW9za1NjaGVtYXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEpvaSBmcm9tICdqb2knO1xuXG4vLyBTY2hlbWEgZm9yIGtpb3NrIGF0dGVuZGFuY2UgcmVjb3JkaW5nXG5leHBvcnQgY29uc3Qga2lvc2tBdHRlbmRhbmNlU2NoZW1hID0gSm9pLm9iamVjdCh7XG4gIGVtcGxveWVlSWQ6IEpvaS5zdHJpbmcoKS51dWlkKCkucmVxdWlyZWQoKS5tZXNzYWdlcyh7XG4gICAgJ3N0cmluZy51dWlkJzogJ0VtcGxveWVlIElEIG11c3QgYmUgYSB2YWxpZCBVVUlEJyxcbiAgICAnYW55LnJlcXVpcmVkJzogJ0VtcGxveWVlIElEIGlzIHJlcXVpcmVkJ1xuICB9KSxcbiAgdHlwZTogSm9pLnN0cmluZygpLnZhbGlkKCdjbG9ja19pbicsICdjbG9ja19vdXQnLCAnb3ZlcnRpbWUnKS5yZXF1aXJlZCgpLm1lc3NhZ2VzKHtcbiAgICAnYW55Lm9ubHknOiAnQXR0ZW5kYW5jZSB0eXBlIG11c3QgYmUgY2xvY2tfaW4sIGNsb2NrX291dCwgb3Igb3ZlcnRpbWUnLFxuICAgICdhbnkucmVxdWlyZWQnOiAnQXR0ZW5kYW5jZSB0eXBlIGlzIHJlcXVpcmVkJ1xuICB9KSxcbiAgbG9jYXRpb246IEpvaS5zdHJpbmcoKS5taW4oMikubWF4KDEwMCkucmVxdWlyZWQoKS5tZXNzYWdlcyh7XG4gICAgJ3N0cmluZy5taW4nOiAnTG9jYXRpb24gbXVzdCBiZSBhdCBsZWFzdCAyIGNoYXJhY3RlcnMnLFxuICAgICdzdHJpbmcubWF4JzogJ0xvY2F0aW9uIGNhbm5vdCBleGNlZWQgMTAwIGNoYXJhY3RlcnMnLFxuICAgICdhbnkucmVxdWlyZWQnOiAnTG9jYXRpb24gaXMgcmVxdWlyZWQnXG4gIH0pLFxuICBxckNvZGVEYXRhOiBKb2kuc3RyaW5nKCkubWluKDEwKS5yZXF1aXJlZCgpLm1lc3NhZ2VzKHtcbiAgICAnc3RyaW5nLm1pbic6ICdRUiBjb2RlIGRhdGEgbXVzdCBiZSBhdCBsZWFzdCAxMCBjaGFyYWN0ZXJzJyxcbiAgICAnYW55LnJlcXVpcmVkJzogJ1FSIGNvZGUgZGF0YSBpcyByZXF1aXJlZCdcbiAgfSksXG4gIHNlbGZpZVVybDogSm9pLnN0cmluZygpLnVyaSgpLm9wdGlvbmFsKCkubWVzc2FnZXMoe1xuICAgICdzdHJpbmcudXJpJzogJ1NlbGZpZSBVUkwgbXVzdCBiZSBhIHZhbGlkIFVSSSdcbiAgfSksXG4gIGxhdGl0dWRlOiBKb2kubnVtYmVyKCkubWluKC05MCkubWF4KDkwKS5vcHRpb25hbCgpLm1lc3NhZ2VzKHtcbiAgICAnbnVtYmVyLm1pbic6ICdMYXRpdHVkZSBtdXN0IGJlIGJldHdlZW4gLTkwIGFuZCA5MCcsXG4gICAgJ251bWJlci5tYXgnOiAnTGF0aXR1ZGUgbXVzdCBiZSBiZXR3ZWVuIC05MCBhbmQgOTAnXG4gIH0pLFxuICBsb25naXR1ZGU6IEpvaS5udW1iZXIoKS5taW4oLTE4MCkubWF4KDE4MCkub3B0aW9uYWwoKS5tZXNzYWdlcyh7XG4gICAgJ251bWJlci5taW4nOiAnTG9uZ2l0dWRlIG11c3QgYmUgYmV0d2VlbiAtMTgwIGFuZCAxODAnLFxuICAgICdudW1iZXIubWF4JzogJ0xvbmdpdHVkZSBtdXN0IGJlIGJldHdlZW4gLTE4MCBhbmQgMTgwJ1xuICB9KVxufSk7XG5cbi8vIFNjaGVtYSBmb3Iga2lvc2sgYXR0ZW5kYW5jZSB2YWxpZGF0aW9uXG5leHBvcnQgY29uc3Qga2lvc2tWYWxpZGF0ZVNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICBlbXBsb3llZUlkOiBKb2kuc3RyaW5nKCkudXVpZCgpLnJlcXVpcmVkKCkubWVzc2FnZXMoe1xuICAgICdzdHJpbmcudXVpZCc6ICdFbXBsb3llZSBJRCBtdXN0IGJlIGEgdmFsaWQgVVVJRCcsXG4gICAgJ2FueS5yZXF1aXJlZCc6ICdFbXBsb3llZSBJRCBpcyByZXF1aXJlZCdcbiAgfSksXG4gIHNlc3Npb25UeXBlOiBKb2kuc3RyaW5nKCkudmFsaWQoXG4gICAgJ21vcm5pbmdfaW4nLCAnbW9ybmluZ19vdXQnLCAnYWZ0ZXJub29uX2luJywgJ2FmdGVybm9vbl9vdXQnLFxuICAgICdjbG9ja19pbicsICdjbG9ja19vdXQnLCAnb3ZlcnRpbWUnXG4gICkucmVxdWlyZWQoKS5tZXNzYWdlcyh7XG4gICAgJ2FueS5vbmx5JzogJ1Nlc3Npb24gdHlwZSBtdXN0IGJlIGEgdmFsaWQgYXR0ZW5kYW5jZSBzZXNzaW9uIHR5cGUnLFxuICAgICdhbnkucmVxdWlyZWQnOiAnU2Vzc2lvbiB0eXBlIGlzIHJlcXVpcmVkJ1xuICB9KVxufSk7XG5cbi8vIFNjaGVtYSBmb3Iga2lvc2sgcm91dGUgcGFyYW1ldGVyc1xuZXhwb3J0IGNvbnN0IGtpb3NrUGFyYW1zU2NoZW1hID0gSm9pLm9iamVjdCh7XG4gIGVtcGxveWVlSWQ6IEpvaS5zdHJpbmcoKS51dWlkKCkucmVxdWlyZWQoKS5tZXNzYWdlcyh7XG4gICAgJ3N0cmluZy51dWlkJzogJ0VtcGxveWVlIElEIG11c3QgYmUgYSB2YWxpZCBVVUlEJyxcbiAgICAnYW55LnJlcXVpcmVkJzogJ0VtcGxveWVlIElEIGlzIHJlcXVpcmVkJ1xuICB9KVxufSk7XG5cbi8vIFNjaGVtYSBmb3IgdGltZS1iYXNlZCBhdHRlbmRhbmNlIHJlY29yZGluZ1xuZXhwb3J0IGNvbnN0IGtpb3NrVGltZUJhc2VkQXR0ZW5kYW5jZVNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICBlbXBsb3llZUlkOiBKb2kuc3RyaW5nKCkudXVpZCgpLnJlcXVpcmVkKCkubWVzc2FnZXMoe1xuICAgICdzdHJpbmcudXVpZCc6ICdFbXBsb3llZSBJRCBtdXN0IGJlIGEgdmFsaWQgVVVJRCcsXG4gICAgJ2FueS5yZXF1aXJlZCc6ICdFbXBsb3llZSBJRCBpcyByZXF1aXJlZCdcbiAgfSksXG4gIHNlc3Npb25UeXBlOiBKb2kuc3RyaW5nKCkudmFsaWQoXG4gICAgJ21vcm5pbmdfaW4nLCAnbW9ybmluZ19vdXQnLCAnYWZ0ZXJub29uX2luJywgJ2FmdGVybm9vbl9vdXQnLFxuICAgICdjbG9ja19pbicsICdjbG9ja19vdXQnLCAnb3ZlcnRpbWUnXG4gICkucmVxdWlyZWQoKS5tZXNzYWdlcyh7XG4gICAgJ2FueS5vbmx5JzogJ1Nlc3Npb24gdHlwZSBtdXN0IGJlIGEgdmFsaWQgYXR0ZW5kYW5jZSBzZXNzaW9uIHR5cGUnLFxuICAgICdhbnkucmVxdWlyZWQnOiAnU2Vzc2lvbiB0eXBlIGlzIHJlcXVpcmVkJ1xuICB9KSxcbiAgbG9jYXRpb246IEpvaS5zdHJpbmcoKS5taW4oMikubWF4KDEwMCkucmVxdWlyZWQoKS5tZXNzYWdlcyh7XG4gICAgJ3N0cmluZy5taW4nOiAnTG9jYXRpb24gbXVzdCBiZSBhdCBsZWFzdCAyIGNoYXJhY3RlcnMnLFxuICAgICdzdHJpbmcubWF4JzogJ0xvY2F0aW9uIGNhbm5vdCBleGNlZWQgMTAwIGNoYXJhY3RlcnMnLFxuICAgICdhbnkucmVxdWlyZWQnOiAnTG9jYXRpb24gaXMgcmVxdWlyZWQnXG4gIH0pLFxuICBxckNvZGVEYXRhOiBKb2kuc3RyaW5nKCkubWluKDEwKS5yZXF1aXJlZCgpLm1lc3NhZ2VzKHtcbiAgICAnc3RyaW5nLm1pbic6ICdRUiBjb2RlIGRhdGEgbXVzdCBiZSBhdCBsZWFzdCAxMCBjaGFyYWN0ZXJzJyxcbiAgICAnYW55LnJlcXVpcmVkJzogJ1FSIGNvZGUgZGF0YSBpcyByZXF1aXJlZCdcbiAgfSksXG4gIGxhdGl0dWRlOiBKb2kubnVtYmVyKCkubWluKC05MCkubWF4KDkwKS5vcHRpb25hbCgpLm1lc3NhZ2VzKHtcbiAgICAnbnVtYmVyLm1pbic6ICdMYXRpdHVkZSBtdXN0IGJlIGJldHdlZW4gLTkwIGFuZCA5MCcsXG4gICAgJ251bWJlci5tYXgnOiAnTGF0aXR1ZGUgbXVzdCBiZSBiZXR3ZWVuIC05MCBhbmQgOTAnXG4gIH0pLFxuICBsb25naXR1ZGU6IEpvaS5udW1iZXIoKS5taW4oLTE4MCkubWF4KDE4MCkub3B0aW9uYWwoKS5tZXNzYWdlcyh7XG4gICAgJ251bWJlci5taW4nOiAnTG9uZ2l0dWRlIG11c3QgYmUgYmV0d2VlbiAtMTgwIGFuZCAxODAnLFxuICAgICdudW1iZXIubWF4JzogJ0xvbmdpdHVkZSBtdXN0IGJlIGJldHdlZW4gLTE4MCBhbmQgMTgwJ1xuICB9KVxufSk7XG5cbi8vIFNjaGVtYSBmb3Iga2lvc2sgaGlzdG9yeSBxdWVyeSBwYXJhbWV0ZXJzXG5leHBvcnQgY29uc3Qga2lvc2tIaXN0b3J5UXVlcnlTY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgbGltaXQ6IEpvaS5udW1iZXIoKS5pbnRlZ2VyKCkubWluKDEpLm1heCg1MCkub3B0aW9uYWwoKS5kZWZhdWx0KDEwKS5tZXNzYWdlcyh7XG4gICAgJ251bWJlci5taW4nOiAnTGltaXQgbXVzdCBiZSBhdCBsZWFzdCAxJyxcbiAgICAnbnVtYmVyLm1heCc6ICdMaW1pdCBjYW5ub3QgZXhjZWVkIDUwJ1xuICB9KSxcbiAgcGFnZTogSm9pLm51bWJlcigpLmludGVnZXIoKS5taW4oMSkub3B0aW9uYWwoKS5kZWZhdWx0KDEpLm1lc3NhZ2VzKHtcbiAgICAnbnVtYmVyLm1pbic6ICdQYWdlIG11c3QgYmUgYXQgbGVhc3QgMSdcbiAgfSlcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFVSTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVkosTUFBQUUsS0FBQTtBQUFBO0FBQUEsQ0FBQUYsY0FBQSxHQUFBRyxDQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUVBO0FBQUE7QUFBQUwsY0FBQSxHQUFBRyxDQUFBO0FBQ2FHLE9BQUEsQ0FBQUMscUJBQXFCLEdBQUdMLEtBQUEsQ0FBQU0sT0FBRyxDQUFDQyxNQUFNLENBQUM7RUFDOUNDLFVBQVUsRUFBRVIsS0FBQSxDQUFBTSxPQUFHLENBQUNHLE1BQU0sRUFBRSxDQUFDQyxJQUFJLEVBQUUsQ0FBQ0MsUUFBUSxFQUFFLENBQUNDLFFBQVEsQ0FBQztJQUNsRCxhQUFhLEVBQUUsa0NBQWtDO0lBQ2pELGNBQWMsRUFBRTtHQUNqQixDQUFDO0VBQ0ZDLElBQUksRUFBRWIsS0FBQSxDQUFBTSxPQUFHLENBQUNHLE1BQU0sRUFBRSxDQUFDSyxLQUFLLENBQUMsVUFBVSxFQUFFLFdBQVcsRUFB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