{"version":3,"names":["cov_2l07h4lyh9","actualCoverage","s","express_1","require","redisController_1","authenticate_1","authorize_1","roles_1","router","Router","get","redisController","getHealth","bind","testConnection","authenticate","authorize","USER_ROLES","HR","getStats","getKeys","getCacheValue","post","setCacheValue","delete","deleteCacheKey","clearCache","invalidateUserCache","invalidateDepartmentCache","invalidateSystemCache","exports","default"],"sources":["/home/kim/tito/server/src/routes/redis/redisRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { redisController } from '../../controllers/redis/redisController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { authorize } from '../../middleware/auth/authorize';\nimport { USER_ROLES } from '../../utils/constants/roles';\n\nconst router = Router();\n\n/**\n * Redis Management Routes\n * These routes require HR admin access for security\n */\n\n// Health and status endpoints\nrouter.get('/health', redisController.getHealth.bind(redisController));\nrouter.get('/test', redisController.testConnection.bind(redisController));\n\n// Statistics and monitoring (HR admin only)\nrouter.get('/stats', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.getStats.bind(redisController)\n);\n\n// Cache management (HR admin only)\nrouter.get('/keys', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.getKeys.bind(redisController)\n);\n\nrouter.get('/cache/:key', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.getCacheValue.bind(redisController)\n);\n\nrouter.post('/cache/:key', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.setCacheValue.bind(redisController)\n);\n\nrouter.delete('/cache/:key', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.deleteCacheKey.bind(redisController)\n);\n\nrouter.delete('/cache', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.clearCache.bind(redisController)\n);\n\n// Cache invalidation (HR admin only)\nrouter.delete('/cache/user/:userId', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.invalidateUserCache.bind(redisController)\n);\n\nrouter.delete('/cache/department/:departmentId', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.invalidateDepartmentCache.bind(redisController)\n);\n\nrouter.delete('/cache/system', \n  authenticate, \n  authorize([USER_ROLES.HR]), \n  redisController.invalidateSystemCache.bind(redisController)\n);\n\nexport default router; "],"mappings":"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","ignoreList":[]}