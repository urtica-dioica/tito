933855df9895481094f01d6cca4866ec
"use strict";

/* istanbul ignore next */
function cov_f2zyppeqh() {
  var path = "/home/kim/tito/server/src/models/attendance/TimeCorrectionRequest.ts";
  var hash = "b4cee23e564a6ad8f602f6cb6a173eb906a75416";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/models/attendance/TimeCorrectionRequest.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 81
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 51
        }
      },
      "3": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "4": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "5": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 34
        }
      },
      "6": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "7": {
        start: {
          line: 46,
          column: 22
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "8": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 73
        }
      },
      "9": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "10": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 24
        }
      },
      "11": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 34
        }
      },
      "12": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "13": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "14": {
        start: {
          line: 105,
          column: 23
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "15": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 62
        }
      },
      "16": {
        start: {
          line: 112,
          column: 29
        },
        end: {
          line: 112,
          column: 31
        }
      },
      "17": {
        start: {
          line: 113,
          column: 29
        },
        end: {
          line: 113,
          column: 31
        }
      },
      "18": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 114,
          column: 26
        }
      },
      "19": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "20": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 57
        }
      },
      "21": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 43
        }
      },
      "22": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 25
        }
      },
      "23": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "24": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 62
        }
      },
      "25": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 47
        }
      },
      "26": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 25
        }
      },
      "27": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "28": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 62
        }
      },
      "29": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 47
        }
      },
      "30": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 25
        }
      },
      "31": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "32": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 37
        }
      },
      "33": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 60
        }
      },
      "34": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 30
        }
      },
      "35": {
        start: {
          line: 135,
          column: 22
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "36": {
        start: {
          line: 153,
          column: 23
        },
        end: {
          line: 153,
          column: 81
        }
      },
      "37": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "38": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 24
        }
      },
      "39": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 158,
          column: 34
        }
      },
      "40": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "41": {
        start: {
          line: 168,
          column: 159
        },
        end: {
          line: 168,
          column: 165
        }
      },
      "42": {
        start: {
          line: 170,
          column: 35
        },
        end: {
          line: 170,
          column: 92
        }
      },
      "43": {
        start: {
          line: 171,
          column: 28
        },
        end: {
          line: 171,
          column: 87
        }
      },
      "44": {
        start: {
          line: 173,
          column: 31
        },
        end: {
          line: 173,
          column: 115
        }
      },
      "45": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 174,
          column: 41
        }
      },
      "46": {
        start: {
          line: 175,
          column: 32
        },
        end: {
          line: 175,
          column: 34
        }
      },
      "47": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 176,
          column: 30
        }
      },
      "48": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 26
        }
      },
      "49": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "50": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 69
        }
      },
      "51": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 41
        }
      },
      "52": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 25
        }
      },
      "53": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "54": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 69
        }
      },
      "55": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 43
        }
      },
      "56": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 25
        }
      },
      "57": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "58": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 64
        }
      },
      "59": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 37
        }
      },
      "60": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 25
        }
      },
      "61": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "62": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 70
        }
      },
      "63": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 42
        }
      },
      "64": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 25
        }
      },
      "65": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "66": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 74
        }
      },
      "67": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 40
        }
      },
      "68": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 25
        }
      },
      "69": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "70": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 74
        }
      },
      "71": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 38
        }
      },
      "72": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 25
        }
      },
      "73": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "74": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 171
        }
      },
      "75": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 44
        }
      },
      "76": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 25
        }
      },
      "77": {
        start: {
          line: 214,
          column: 28
        },
        end: {
          line: 214,
          column: 102
        }
      },
      "78": {
        start: {
          line: 216,
          column: 27
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "79": {
        start: {
          line: 224,
          column: 28
        },
        end: {
          line: 224,
          column: 90
        }
      },
      "80": {
        start: {
          line: 225,
          column: 22
        },
        end: {
          line: 225,
          column: 57
        }
      },
      "81": {
        start: {
          line: 227,
          column: 26
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "82": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 40
        }
      },
      "83": {
        start: {
          line: 257,
          column: 23
        },
        end: {
          line: 257,
          column: 84
        }
      },
      "84": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "85": {
        start: {
          line: 270,
          column: 22
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "86": {
        start: {
          line: 299,
          column: 23
        },
        end: {
          line: 299,
          column: 91
        }
      },
      "87": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 27
        }
      },
      "88": {
        start: {
          line: 306,
          column: 32
        },
        end: {
          line: 306,
          column: 34
        }
      },
      "89": {
        start: {
          line: 307,
          column: 28
        },
        end: {
          line: 307,
          column: 30
        }
      },
      "90": {
        start: {
          line: 308,
          column: 25
        },
        end: {
          line: 308,
          column: 26
        }
      },
      "91": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "92": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 65
        }
      },
      "93": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 41
        }
      },
      "94": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 25
        }
      },
      "95": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "96": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 115
        }
      },
      "97": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 43
        }
      },
      "98": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 25
        }
      },
      "99": {
        start: {
          line: 319,
          column: 28
        },
        end: {
          line: 319,
          column: 102
        }
      },
      "100": {
        start: {
          line: 320,
          column: 22
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "101": {
        start: {
          line: 329,
          column: 23
        },
        end: {
          line: 329,
          column: 80
        }
      },
      "102": {
        start: {
          line: 330,
          column: 22
        },
        end: {
          line: 330,
          column: 36
        }
      },
      "103": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 336,
          column: 10
        }
      },
      "104": {
        start: {
          line: 342,
          column: 22
        },
        end: {
          line: 342,
          column: 74
        }
      },
      "105": {
        start: {
          line: 343,
          column: 23
        },
        end: {
          line: 343,
          column: 73
        }
      },
      "106": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 61
        }
      },
      "107": {
        start: {
          line: 350,
          column: 22
        },
        end: {
          line: 350,
          column: 78
        }
      },
      "108": {
        start: {
          line: 351,
          column: 23
        },
        end: {
          line: 351,
          column: 67
        }
      },
      "109": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 46
        }
      },
      "110": {
        start: {
          line: 355,
          column: 0
        },
        end: {
          line: 355,
          column: 64
        }
      },
      "111": {
        start: {
          line: 356,
          column: 0
        },
        end: {
          line: 356,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 44
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 45
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 77
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 48
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 111
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 50
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 167
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 68
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 269
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        },
        loc: {
          start: {
            line: 305,
            column: 66
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 305
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 42
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 341
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        loc: {
          start: {
            line: 349,
            column: 42
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 349
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 89
          },
          end: {
            line: 31,
            column: 107
          }
        }, {
          start: {
            line: 31,
            column: 110
          },
          end: {
            line: 31,
            column: 114
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 31,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 31,
            column: 46
          }
        }, {
          start: {
            line: 31,
            column: 50
          },
          end: {
            line: 31,
            column: 85
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 91
          },
          end: {
            line: 32,
            column: 109
          }
        }, {
          start: {
            line: 32,
            column: 112
          },
          end: {
            line: 32,
            column: 116
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 13
          },
          end: {
            line: 32,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 13
          },
          end: {
            line: 32,
            column: 47
          }
        }, {
          start: {
            line: 32,
            column: 51
          },
          end: {
            line: 32,
            column: 87
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 39,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 104
          },
          end: {
            line: 39,
            column: 124
          }
        }, {
          start: {
            line: 39,
            column: 127
          },
          end: {
            line: 39,
            column: 148
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 39,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 39,
            column: 61
          }
        }, {
          start: {
            line: 39,
            column: 65
          },
          end: {
            line: 39,
            column: 100
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 27
          },
          end: {
            line: 71,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 102
          },
          end: {
            line: 71,
            column: 122
          }
        }, {
          start: {
            line: 71,
            column: 125
          },
          end: {
            line: 71,
            column: 146
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 60
          }
        }, {
          start: {
            line: 71,
            column: 64
          },
          end: {
            line: 71,
            column: 98
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 40
          },
          end: {
            line: 106,
            column: 54
          }
        }, {
          start: {
            line: 106,
            column: 57
          },
          end: {
            line: 106,
            column: 61
          }
        }],
        line: 106
      },
      "10": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "14": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "15": {
        loc: {
          start: {
            line: 161,
            column: 27
          },
          end: {
            line: 161,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 102
          },
          end: {
            line: 161,
            column: 122
          }
        }, {
          start: {
            line: 161,
            column: 125
          },
          end: {
            line: 161,
            column: 146
          }
        }],
        line: 161
      },
      "16": {
        loc: {
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 161,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 161,
            column: 60
          }
        }, {
          start: {
            line: 161,
            column: 64
          },
          end: {
            line: 161,
            column: 98
          }
        }],
        line: 161
      },
      "17": {
        loc: {
          start: {
            line: 167,
            column: 37
          },
          end: {
            line: 167,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 167,
            column: 46
          },
          end: {
            line: 167,
            column: 48
          }
        }],
        line: 167
      },
      "18": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 23
          },
          end: {
            line: 168,
            column: 24
          }
        }],
        line: 168
      },
      "19": {
        loc: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 34
          },
          end: {
            line: 168,
            column: 36
          }
        }],
        line: 168
      },
      "20": {
        loc: {
          start: {
            line: 168,
            column: 113
          },
          end: {
            line: 168,
            column: 134
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 122
          },
          end: {
            line: 168,
            column: 134
          }
        }],
        line: 168
      },
      "21": {
        loc: {
          start: {
            line: 168,
            column: 136
          },
          end: {
            line: 168,
            column: 154
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 148
          },
          end: {
            line: 168,
            column: 154
          }
        }],
        line: 168
      },
      "22": {
        loc: {
          start: {
            line: 171,
            column: 28
          },
          end: {
            line: 171,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 66
          },
          end: {
            line: 171,
            column: 72
          }
        }, {
          start: {
            line: 171,
            column: 75
          },
          end: {
            line: 171,
            column: 87
          }
        }],
        line: 171
      },
      "23": {
        loc: {
          start: {
            line: 173,
            column: 31
          },
          end: {
            line: 173,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 83
          },
          end: {
            line: 173,
            column: 106
          }
        }, {
          start: {
            line: 173,
            column: 109
          },
          end: {
            line: 173,
            column: 115
          }
        }],
        line: 173
      },
      "24": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "25": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "26": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "27": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "28": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "29": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "30": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "31": {
        loc: {
          start: {
            line: 214,
            column: 28
          },
          end: {
            line: 214,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 57
          },
          end: {
            line: 214,
            column: 97
          }
        }, {
          start: {
            line: 214,
            column: 100
          },
          end: {
            line: 214,
            column: 102
          }
        }],
        line: 214
      },
      "32": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "33": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "34": {
        loc: {
          start: {
            line: 319,
            column: 28
          },
          end: {
            line: 319,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 57
          },
          end: {
            line: 319,
            column: 97
          }
        }, {
          start: {
            line: 319,
            column: 100
          },
          end: {
            line: 319,
            column: 102
          }
        }],
        line: 319
      },
      "35": {
        loc: {
          start: {
            line: 332,
            column: 27
          },
          end: {
            line: 332,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 27
          },
          end: {
            line: 332,
            column: 57
          }
        }, {
          start: {
            line: 332,
            column: 61
          },
          end: {
            line: 332,
            column: 62
          }
        }],
        line: 332
      },
      "36": {
        loc: {
          start: {
            line: 333,
            column: 29
          },
          end: {
            line: 333,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 29
          },
          end: {
            line: 333,
            column: 61
          }
        }, {
          start: {
            line: 333,
            column: 65
          },
          end: {
            line: 333,
            column: 66
          }
        }],
        line: 333
      },
      "37": {
        loc: {
          start: {
            line: 334,
            column: 30
          },
          end: {
            line: 334,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 30
          },
          end: {
            line: 334,
            column: 63
          }
        }, {
          start: {
            line: 334,
            column: 67
          },
          end: {
            line: 334,
            column: 68
          }
        }],
        line: 334
      },
      "38": {
        loc: {
          start: {
            line: 335,
            column: 30
          },
          end: {
            line: 335,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 335,
            column: 30
          },
          end: {
            line: 335,
            column: 63
          }
        }, {
          start: {
            line: 335,
            column: 67
          },
          end: {
            line: 335,
            column: 68
          }
        }],
        line: 335
      },
      "39": {
        loc: {
          start: {
            line: 344,
            column: 15
          },
          end: {
            line: 344,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 344,
            column: 33
          },
          end: {
            line: 344,
            column: 52
          }
        }, {
          start: {
            line: 344,
            column: 55
          },
          end: {
            line: 344,
            column: 60
          }
        }],
        line: 344
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/models/attendance/TimeCorrectionRequest.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/models/attendance/TimeCorrectionRequest.ts"],
      sourcesContent: ["import { getPool } from '../../config/database';\n\nexport interface TimeCorrectionRequest {\n  id: string;\n  employeeId: string;\n  requestDate: Date;\n  sessionType: 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out';\n  requestedTime: Date;\n  reason: string;\n  status: 'pending' | 'approved' | 'rejected';\n  approvedBy: string | null;\n  approvedAt: Date | null;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface TimeCorrectionRequestWithDetails extends TimeCorrectionRequest {\n  employeeCode: string;\n  employeeName: string;\n  departmentName: string | null;\n  approverName: string | null;\n}\n\nexport interface CreateTimeCorrectionRequestData {\n  employeeId: string;\n  requestDate: Date;\n  sessionType: 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out';\n  requestedTime: Date;\n  reason: string;\n}\n\nexport interface UpdateTimeCorrectionRequestData {\n  status?: 'pending' | 'approved' | 'rejected';\n  approvedBy?: string;\n  approvedAt?: Date;\n}\n\nexport interface TimeCorrectionRequestListParams {\n  page?: number | undefined;\n  limit?: number | undefined;\n  employeeId?: string | undefined;\n  departmentId?: string | undefined;\n  status?: 'pending' | 'approved' | 'rejected' | undefined;\n  sessionType?: 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out' | undefined;\n  startDate?: Date | undefined;\n  endDate?: Date | undefined;\n  search?: string | undefined;\n  sortBy?: string | undefined;\n  sortOrder?: 'asc' | 'desc' | undefined;\n}\n\nexport class TimeCorrectionRequestModel {\n  /**\n   * Create a new time correction request\n   */\n  async createTimeCorrectionRequest(data: CreateTimeCorrectionRequestData): Promise<TimeCorrectionRequest> {\n    const query = `\n      INSERT INTO time_correction_requests (employee_id, correction_date, session_type, requested_clock_in, requested_clock_out, reason)\n      VALUES ($1, $2, $3, $4, $5, $6)\n      RETURNING \n        id,\n        employee_id as \"employeeId\",\n        correction_date as \"requestDate\",\n        session_type as \"sessionType\",\n        requested_clock_in as \"requestedClockIn\",\n        requested_clock_out as \"requestedClockOut\",\n        reason,\n        status,\n        approver_id as \"approvedBy\",\n        approved_at as \"approvedAt\",\n        created_at as \"createdAt\",\n        updated_at as \"updatedAt\"\n    `;\n\n    const result = await getPool().query(query, [\n      data.employeeId,\n      data.requestDate,\n      data.sessionType,\n      (data.sessionType === 'morning_in' || data.sessionType === 'afternoon_in') ? data.requestedTime : null,\n      (data.sessionType === 'morning_out' || data.sessionType === 'afternoon_out') ? data.requestedTime : null,\n      data.reason\n    ]);\n\n    // Transform the result to match the interface\n    const row = result.rows[0];\n    return {\n      ...row,\n      requestedTime: (data.sessionType === 'morning_in' || data.sessionType === 'afternoon_in') ? row.requestedClockIn : row.requestedClockOut\n    };\n  }\n\n  /**\n   * Get time correction request by ID\n   */\n  async findById(id: string): Promise<TimeCorrectionRequest | null> {\n    const query = `\n      SELECT \n        id,\n        employee_id as \"employeeId\",\n        correction_date as \"requestDate\",\n        session_type as \"sessionType\",\n        requested_clock_in as \"requestedClockIn\",\n        requested_clock_out as \"requestedClockOut\",\n        reason,\n        status,\n        approver_id as \"approvedBy\",\n        approved_at as \"approvedAt\",\n        created_at as \"createdAt\",\n        updated_at as \"updatedAt\"\n      FROM time_correction_requests\n      WHERE id = $1\n    `;\n\n    const result = await getPool().query(query, [id]);\n    if (result.rows.length === 0) {\n      return null;\n    }\n\n    // Transform the result to match the interface\n    const row = result.rows[0];\n    return {\n      ...row,\n      requestedTime: (row.sessionType === 'morning_in' || row.sessionType === 'afternoon_in') ? row.requestedClockIn : row.requestedClockOut\n    };\n  }\n\n  /**\n   * Get time correction request with details\n   */\n  async findByIdWithDetails(id: string): Promise<TimeCorrectionRequestWithDetails | null> {\n    const query = `\n      SELECT \n        tcr.id,\n        tcr.employee_id as \"employeeId\",\n        tcr.correction_date as \"requestDate\",\n        tcr.session_type as \"sessionType\",\n        CASE \n          WHEN tcr.session_type IN ('morning_in', 'afternoon_in') THEN tcr.requested_clock_in\n          WHEN tcr.session_type IN ('morning_out', 'afternoon_out') THEN tcr.requested_clock_out\n        END as \"requestedTime\",\n        tcr.reason,\n        tcr.status,\n        tcr.approver_id as \"approvedBy\",\n        tcr.approved_at as \"approvedAt\",\n        tcr.created_at as \"createdAt\",\n        tcr.updated_at as \"updatedAt\",\n        e.employee_id as \"employeeCode\",\n        CONCAT(u.first_name, ' ', u.last_name) as \"employeeName\",\n        d.name as \"departmentName\",\n        CONCAT(approver.first_name, ' ', approver.last_name) as \"approverName\"\n      FROM time_correction_requests tcr\n      JOIN employees e ON tcr.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n              LEFT JOIN users approver ON tcr.approver_id = approver.id\n      WHERE tcr.id = $1\n    `;\n\n    const result = await getPool().query(query, [id]);\n    return result.rows.length > 0 ? result.rows[0] : null;\n  }\n\n  /**\n   * Update time correction request\n   */\n  async updateTimeCorrectionRequest(id: string, data: UpdateTimeCorrectionRequestData): Promise<TimeCorrectionRequest | null> {\n    const updateFields: string[] = [];\n    const updateValues: any[] = [];\n    let paramIndex = 1;\n\n    if (data.status !== undefined) {\n      updateFields.push(`status = $${paramIndex}`);\n      updateValues.push(data.status);\n      paramIndex++;\n    }\n\n    if (data.approvedBy !== undefined) {\n              updateFields.push(`approver_id = $${paramIndex}`);\n      updateValues.push(data.approvedBy);\n      paramIndex++;\n    }\n\n    if (data.approvedAt !== undefined) {\n      updateFields.push(`approved_at = $${paramIndex}`);\n      updateValues.push(data.approvedAt);\n      paramIndex++;\n    }\n\n    if (updateFields.length === 0) {\n      return this.findById(id);\n    }\n\n    updateFields.push(`updated_at = CURRENT_TIMESTAMP`);\n    updateValues.push(id);\n\n    const query = `\n      UPDATE time_correction_requests \n      SET ${updateFields.join(', ')}\n      WHERE id = $${paramIndex}\n      RETURNING \n        id,\n        employee_id as \"employeeId\",\n        correction_date as \"requestDate\",\n        session_type as \"sessionType\",\n        requested_clock_in as \"requestedClockIn\",\n        requested_clock_out as \"requestedClockOut\",\n        reason,\n        status,\n        approver_id as \"approvedBy\",\n        approved_at as \"approvedAt\",\n        created_at as \"createdAt\",\n        updated_at as \"updatedAt\"\n    `;\n\n    const result = await getPool().query(query, updateValues);\n    if (result.rows.length === 0) {\n      return null;\n    }\n\n    // Transform the result to match the interface\n    const row = result.rows[0];\n    return {\n      ...row,\n      requestedTime: (row.sessionType === 'morning_in' || row.sessionType === 'afternoon_in') ? row.requestedClockIn : row.requestedClockOut\n    };\n  }\n\n  /**\n   * List time correction requests with filtering and pagination\n   */\n  async listTimeCorrectionRequests(params: TimeCorrectionRequestListParams = {}): Promise<{\n    requests: TimeCorrectionRequestWithDetails[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    const {\n      page = 1,\n      limit = 20,\n      employeeId,\n      departmentId,\n      status,\n      sessionType,\n      startDate,\n      endDate,\n      search,\n      sortBy = 'created_at',\n      sortOrder = 'desc'\n    } = params;\n\n    // Validate sortBy parameter to prevent SQL injection\n    const allowedSortColumns = ['created_at', 'updated_at', 'correction_date', 'status'];\n    const validSortBy = allowedSortColumns.includes(sortBy) ? sortBy : 'created_at';\n    \n    // Validate sortOrder parameter\n    const validSortOrder = ['asc', 'desc'].includes(sortOrder.toLowerCase()) ? sortOrder.toUpperCase() : 'DESC';\n\n    const offset = (page - 1) * limit;\n    const whereConditions: string[] = [];\n    const queryParams: any[] = [];\n    let paramIndex = 1;\n\n    // Build WHERE conditions\n    if (employeeId) {\n      whereConditions.push(`tcr.employee_id = $${paramIndex}`);\n      queryParams.push(employeeId);\n      paramIndex++;\n    }\n\n    if (departmentId) {\n      whereConditions.push(`e.department_id = $${paramIndex}`);\n      queryParams.push(departmentId);\n      paramIndex++;\n    }\n\n    if (status) {\n      whereConditions.push(`tcr.status = $${paramIndex}`);\n      queryParams.push(status);\n      paramIndex++;\n    }\n\n    if (sessionType) {\n      whereConditions.push(`tcr.session_type = $${paramIndex}`);\n      queryParams.push(sessionType);\n      paramIndex++;\n    }\n\n    if (startDate) {\n      whereConditions.push(`tcr.correction_date >= $${paramIndex}`);\n      queryParams.push(startDate);\n      paramIndex++;\n    }\n\n    if (endDate) {\n      whereConditions.push(`tcr.correction_date <= $${paramIndex}`);\n      queryParams.push(endDate);\n      paramIndex++;\n    }\n\n    if (search) {\n      whereConditions.push(`(CONCAT(u.first_name, ' ', u.last_name) ILIKE $${paramIndex} OR e.employee_id ILIKE $${paramIndex} OR tcr.reason ILIKE $${paramIndex})`);\n      queryParams.push(`%${search}%`);\n      paramIndex++;\n    }\n\n    const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(' AND ')}` : '';\n\n    // Count query\n    const countQuery = `\n      SELECT COUNT(*) as total\n      FROM time_correction_requests tcr\n      JOIN employees e ON tcr.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      ${whereClause}\n    `;\n\n    const countResult = await getPool().query(countQuery, queryParams);\n    const total = parseInt(countResult.rows[0].total);\n\n    // Data query\n    const dataQuery = `\n      SELECT \n        tcr.id,\n        tcr.employee_id as \"employeeId\",\n        tcr.correction_date as \"requestDate\",\n        tcr.session_type as \"sessionType\",\n        CASE \n          WHEN tcr.session_type IN ('morning_in', 'afternoon_in') THEN tcr.requested_clock_in\n          WHEN tcr.session_type IN ('morning_out', 'afternoon_out') THEN tcr.requested_clock_out\n        END as \"requestedTime\",\n        tcr.reason,\n        tcr.status,\n        tcr.approver_id as \"approvedBy\",\n        tcr.approved_at as \"approvedAt\",\n        tcr.created_at as \"createdAt\",\n        tcr.updated_at as \"updatedAt\",\n        e.employee_id as \"employeeCode\",\n        CONCAT(u.first_name, ' ', u.last_name) as \"employeeName\",\n        d.name as \"departmentName\",\n        CONCAT(approver.first_name, ' ', approver.last_name) as \"approverName\"\n      FROM time_correction_requests tcr\n      JOIN employees e ON tcr.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n              LEFT JOIN users approver ON tcr.approver_id = approver.id\n      ${whereClause}\n      ORDER BY tcr.${validSortBy} ${validSortOrder}\n      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}\n    `;\n\n    queryParams.push(limit, offset);\n    const result = await getPool().query(dataQuery, queryParams);\n\n    return {\n      requests: result.rows,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit)\n    };\n  }\n\n  /**\n   * Get pending requests for a department head\n   */\n  async getPendingRequestsForDepartmentHead(departmentHeadUserId: string): Promise<TimeCorrectionRequestWithDetails[]> {\n    const query = `\n      SELECT \n        tcr.id,\n        tcr.employee_id as \"employeeId\",\n        tcr.correction_date as \"requestDate\",\n        tcr.session_type as \"sessionType\",\n        CASE \n          WHEN tcr.session_type IN ('morning_in', 'afternoon_in') THEN tcr.requested_clock_in\n          WHEN tcr.session_type IN ('morning_out', 'afternoon_out') THEN tcr.requested_clock_out\n        END as \"requestedTime\",\n        tcr.reason,\n        tcr.status,\n        tcr.approver_id as \"approvedBy\",\n        tcr.approved_at as \"approvedAt\",\n        tcr.created_at as \"createdAt\",\n        tcr.updated_at as \"updatedAt\",\n        e.employee_id as \"employeeCode\",\n        CONCAT(u.first_name, ' ', u.last_name) as \"employeeName\",\n        d.name as \"departmentName\",\n        CONCAT(approver.first_name, ' ', approver.last_name) as \"approverName\"\n      FROM time_correction_requests tcr\n      JOIN employees e ON tcr.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      JOIN departments d ON e.department_id = d.id\n              LEFT JOIN users approver ON tcr.approver_id = approver.id\n      WHERE d.department_head_user_id = $1\n        AND tcr.status = 'pending'\n      ORDER BY tcr.created_at ASC\n    `;\n\n    const result = await getPool().query(query, [departmentHeadUserId]);\n    return result.rows;\n  }\n\n  /**\n   * Get time correction request statistics\n   */\n  async getTimeCorrectionRequestStats(employeeId?: string, departmentId?: string): Promise<{\n    totalRequests: number;\n    pendingRequests: number;\n    approvedRequests: number;\n    rejectedRequests: number;\n  }> {\n    const whereConditions: string[] = [];\n    const queryParams: any[] = [];\n    let paramIndex = 1;\n\n    if (employeeId) {\n      whereConditions.push(`employee_id = $${paramIndex}`);\n      queryParams.push(employeeId);\n      paramIndex++;\n    }\n\n    if (departmentId) {\n      whereConditions.push(`employee_id IN (SELECT id FROM employees WHERE department_id = $${paramIndex})`);\n      queryParams.push(departmentId);\n      paramIndex++;\n    }\n\n    const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(' AND ')}` : '';\n\n    const query = `\n      SELECT \n        COUNT(*) as total_requests,\n        COUNT(*) FILTER (WHERE status = 'pending') as pending_requests,\n        COUNT(*) FILTER (WHERE status = 'approved') as approved_requests,\n        COUNT(*) FILTER (WHERE status = 'rejected') as rejected_requests\n      FROM time_correction_requests\n      ${whereClause}\n    `;\n\n    const result = await getPool().query(query, queryParams);\n    const stats = result.rows[0];\n\n    return {\n      totalRequests: parseInt(stats.total_requests) || 0,\n      pendingRequests: parseInt(stats.pending_requests) || 0,\n      approvedRequests: parseInt(stats.approved_requests) || 0,\n      rejectedRequests: parseInt(stats.rejected_requests) || 0\n    };\n  }\n\n  /**\n   * Delete time correction request\n   */\n  async deleteTimeCorrectionRequest(id: string): Promise<boolean> {\n    const query = 'DELETE FROM time_correction_requests WHERE id = $1';\n    const result = await getPool().query(query, [id]);\n    return result.rowCount ? result.rowCount > 0 : false;\n  }\n\n  /**\n   * Get time correction request count\n   */\n  async getTimeCorrectionRequestCount(): Promise<number> {\n    const query = 'SELECT COUNT(*) as count FROM time_correction_requests';\n    const result = await getPool().query(query);\n    return parseInt(result.rows[0].count);\n  }\n}\n\nexport const timeCorrectionRequestModel = new TimeCorrectionRequestModel();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b4cee23e564a6ad8f602f6cb6a173eb906a75416"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_f2zyppeqh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_f2zyppeqh();
cov_f2zyppeqh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_f2zyppeqh().s[1]++;
exports.timeCorrectionRequestModel = exports.TimeCorrectionRequestModel = void 0;
const database_1 =
/* istanbul ignore next */
(cov_f2zyppeqh().s[2]++, require("../../config/database"));
class TimeCorrectionRequestModel {
  /**
   * Create a new time correction request
   */
  async createTimeCorrectionRequest(data) {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[0]++;
    const query =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[3]++, `
      INSERT INTO time_correction_requests (employee_id, correction_date, session_type, requested_clock_in, requested_clock_out, reason)
      VALUES ($1, $2, $3, $4, $5, $6)
      RETURNING 
        id,
        employee_id as "employeeId",
        correction_date as "requestDate",
        session_type as "sessionType",
        requested_clock_in as "requestedClockIn",
        requested_clock_out as "requestedClockOut",
        reason,
        status,
        approver_id as "approvedBy",
        approved_at as "approvedAt",
        created_at as "createdAt",
        updated_at as "updatedAt"
    `);
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[4]++, await (0, database_1.getPool)().query(query, [data.employeeId, data.requestDate, data.sessionType,
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[1][0]++, data.sessionType === 'morning_in') ||
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[1][1]++, data.sessionType === 'afternoon_in') ?
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[0][0]++, data.requestedTime) :
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[0][1]++, null),
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[3][0]++, data.sessionType === 'morning_out') ||
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[3][1]++, data.sessionType === 'afternoon_out') ?
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[2][0]++, data.requestedTime) :
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[2][1]++, null), data.reason]));
    // Transform the result to match the interface
    const row =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[5]++, result.rows[0]);
    /* istanbul ignore next */
    cov_f2zyppeqh().s[6]++;
    return {
      ...row,
      requestedTime:
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[5][0]++, data.sessionType === 'morning_in') ||
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[5][1]++, data.sessionType === 'afternoon_in') ?
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[4][0]++, row.requestedClockIn) :
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[4][1]++, row.requestedClockOut)
    };
  }
  /**
   * Get time correction request by ID
   */
  async findById(id) {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[1]++;
    const query =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[7]++, `
      SELECT 
        id,
        employee_id as "employeeId",
        correction_date as "requestDate",
        session_type as "sessionType",
        requested_clock_in as "requestedClockIn",
        requested_clock_out as "requestedClockOut",
        reason,
        status,
        approver_id as "approvedBy",
        approved_at as "approvedAt",
        created_at as "createdAt",
        updated_at as "updatedAt"
      FROM time_correction_requests
      WHERE id = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[8]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_f2zyppeqh().s[9]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[6][0]++;
      cov_f2zyppeqh().s[10]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[6][1]++;
    }
    // Transform the result to match the interface
    const row =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[11]++, result.rows[0]);
    /* istanbul ignore next */
    cov_f2zyppeqh().s[12]++;
    return {
      ...row,
      requestedTime:
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[8][0]++, row.sessionType === 'morning_in') ||
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[8][1]++, row.sessionType === 'afternoon_in') ?
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[7][0]++, row.requestedClockIn) :
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[7][1]++, row.requestedClockOut)
    };
  }
  /**
   * Get time correction request with details
   */
  async findByIdWithDetails(id) {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[2]++;
    const query =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[13]++, `
      SELECT 
        tcr.id,
        tcr.employee_id as "employeeId",
        tcr.correction_date as "requestDate",
        tcr.session_type as "sessionType",
        CASE 
          WHEN tcr.session_type IN ('morning_in', 'afternoon_in') THEN tcr.requested_clock_in
          WHEN tcr.session_type IN ('morning_out', 'afternoon_out') THEN tcr.requested_clock_out
        END as "requestedTime",
        tcr.reason,
        tcr.status,
        tcr.approver_id as "approvedBy",
        tcr.approved_at as "approvedAt",
        tcr.created_at as "createdAt",
        tcr.updated_at as "updatedAt",
        e.employee_id as "employeeCode",
        CONCAT(u.first_name, ' ', u.last_name) as "employeeName",
        d.name as "departmentName",
        CONCAT(approver.first_name, ' ', approver.last_name) as "approverName"
      FROM time_correction_requests tcr
      JOIN employees e ON tcr.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
              LEFT JOIN users approver ON tcr.approver_id = approver.id
      WHERE tcr.id = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[14]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_f2zyppeqh().s[15]++;
    return result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[9][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[9][1]++, null);
  }
  /**
   * Update time correction request
   */
  async updateTimeCorrectionRequest(id, data) {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[3]++;
    const updateFields =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[16]++, []);
    const updateValues =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[17]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[18]++, 1);
    /* istanbul ignore next */
    cov_f2zyppeqh().s[19]++;
    if (data.status !== undefined) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[10][0]++;
      cov_f2zyppeqh().s[20]++;
      updateFields.push(`status = $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[21]++;
      updateValues.push(data.status);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[22]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[10][1]++;
    }
    cov_f2zyppeqh().s[23]++;
    if (data.approvedBy !== undefined) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[11][0]++;
      cov_f2zyppeqh().s[24]++;
      updateFields.push(`approver_id = $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[25]++;
      updateValues.push(data.approvedBy);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[26]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[11][1]++;
    }
    cov_f2zyppeqh().s[27]++;
    if (data.approvedAt !== undefined) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[12][0]++;
      cov_f2zyppeqh().s[28]++;
      updateFields.push(`approved_at = $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[29]++;
      updateValues.push(data.approvedAt);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[30]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[12][1]++;
    }
    cov_f2zyppeqh().s[31]++;
    if (updateFields.length === 0) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[13][0]++;
      cov_f2zyppeqh().s[32]++;
      return this.findById(id);
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[13][1]++;
    }
    cov_f2zyppeqh().s[33]++;
    updateFields.push(`updated_at = CURRENT_TIMESTAMP`);
    /* istanbul ignore next */
    cov_f2zyppeqh().s[34]++;
    updateValues.push(id);
    const query =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[35]++, `
      UPDATE time_correction_requests 
      SET ${updateFields.join(', ')}
      WHERE id = $${paramIndex}
      RETURNING 
        id,
        employee_id as "employeeId",
        correction_date as "requestDate",
        session_type as "sessionType",
        requested_clock_in as "requestedClockIn",
        requested_clock_out as "requestedClockOut",
        reason,
        status,
        approver_id as "approvedBy",
        approved_at as "approvedAt",
        created_at as "createdAt",
        updated_at as "updatedAt"
    `);
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[36]++, await (0, database_1.getPool)().query(query, updateValues));
    /* istanbul ignore next */
    cov_f2zyppeqh().s[37]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[14][0]++;
      cov_f2zyppeqh().s[38]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[14][1]++;
    }
    // Transform the result to match the interface
    const row =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[39]++, result.rows[0]);
    /* istanbul ignore next */
    cov_f2zyppeqh().s[40]++;
    return {
      ...row,
      requestedTime:
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[16][0]++, row.sessionType === 'morning_in') ||
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[16][1]++, row.sessionType === 'afternoon_in') ?
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[15][0]++, row.requestedClockIn) :
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[15][1]++, row.requestedClockOut)
    };
  }
  /**
   * List time correction requests with filtering and pagination
   */
  async listTimeCorrectionRequests(params =
  /* istanbul ignore next */
  (cov_f2zyppeqh().b[17][0]++, {})) {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[4]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[18][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[19][0]++, 20),
      employeeId,
      departmentId,
      status,
      sessionType,
      startDate,
      endDate,
      search,
      sortBy =
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[20][0]++, 'created_at'),
      sortOrder =
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[21][0]++, 'desc')
    } =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[41]++, params);
    // Validate sortBy parameter to prevent SQL injection
    const allowedSortColumns =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[42]++, ['created_at', 'updated_at', 'correction_date', 'status']);
    const validSortBy =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[43]++, allowedSortColumns.includes(sortBy) ?
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[22][0]++, sortBy) :
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[22][1]++, 'created_at'));
    // Validate sortOrder parameter
    const validSortOrder =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[44]++, ['asc', 'desc'].includes(sortOrder.toLowerCase()) ?
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[23][0]++, sortOrder.toUpperCase()) :
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[23][1]++, 'DESC'));
    const offset =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[45]++, (page - 1) * limit);
    const whereConditions =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[46]++, []);
    const queryParams =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[47]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[48]++, 1);
    // Build WHERE conditions
    /* istanbul ignore next */
    cov_f2zyppeqh().s[49]++;
    if (employeeId) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[24][0]++;
      cov_f2zyppeqh().s[50]++;
      whereConditions.push(`tcr.employee_id = $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[51]++;
      queryParams.push(employeeId);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[52]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[24][1]++;
    }
    cov_f2zyppeqh().s[53]++;
    if (departmentId) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[25][0]++;
      cov_f2zyppeqh().s[54]++;
      whereConditions.push(`e.department_id = $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[55]++;
      queryParams.push(departmentId);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[56]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[25][1]++;
    }
    cov_f2zyppeqh().s[57]++;
    if (status) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[26][0]++;
      cov_f2zyppeqh().s[58]++;
      whereConditions.push(`tcr.status = $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[59]++;
      queryParams.push(status);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[60]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[26][1]++;
    }
    cov_f2zyppeqh().s[61]++;
    if (sessionType) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[27][0]++;
      cov_f2zyppeqh().s[62]++;
      whereConditions.push(`tcr.session_type = $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[63]++;
      queryParams.push(sessionType);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[64]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[27][1]++;
    }
    cov_f2zyppeqh().s[65]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[28][0]++;
      cov_f2zyppeqh().s[66]++;
      whereConditions.push(`tcr.correction_date >= $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[67]++;
      queryParams.push(startDate);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[68]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[28][1]++;
    }
    cov_f2zyppeqh().s[69]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[29][0]++;
      cov_f2zyppeqh().s[70]++;
      whereConditions.push(`tcr.correction_date <= $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[71]++;
      queryParams.push(endDate);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[72]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[29][1]++;
    }
    cov_f2zyppeqh().s[73]++;
    if (search) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[30][0]++;
      cov_f2zyppeqh().s[74]++;
      whereConditions.push(`(CONCAT(u.first_name, ' ', u.last_name) ILIKE $${paramIndex} OR e.employee_id ILIKE $${paramIndex} OR tcr.reason ILIKE $${paramIndex})`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[75]++;
      queryParams.push(`%${search}%`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[76]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[30][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[77]++, whereConditions.length > 0 ?
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[31][0]++, `WHERE ${whereConditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[31][1]++, ''));
    // Count query
    const countQuery =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[78]++, `
      SELECT COUNT(*) as total
      FROM time_correction_requests tcr
      JOIN employees e ON tcr.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      ${whereClause}
    `);
    const countResult =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[79]++, await (0, database_1.getPool)().query(countQuery, queryParams));
    const total =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[80]++, parseInt(countResult.rows[0].total));
    // Data query
    const dataQuery =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[81]++, `
      SELECT 
        tcr.id,
        tcr.employee_id as "employeeId",
        tcr.correction_date as "requestDate",
        tcr.session_type as "sessionType",
        CASE 
          WHEN tcr.session_type IN ('morning_in', 'afternoon_in') THEN tcr.requested_clock_in
          WHEN tcr.session_type IN ('morning_out', 'afternoon_out') THEN tcr.requested_clock_out
        END as "requestedTime",
        tcr.reason,
        tcr.status,
        tcr.approver_id as "approvedBy",
        tcr.approved_at as "approvedAt",
        tcr.created_at as "createdAt",
        tcr.updated_at as "updatedAt",
        e.employee_id as "employeeCode",
        CONCAT(u.first_name, ' ', u.last_name) as "employeeName",
        d.name as "departmentName",
        CONCAT(approver.first_name, ' ', approver.last_name) as "approverName"
      FROM time_correction_requests tcr
      JOIN employees e ON tcr.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
              LEFT JOIN users approver ON tcr.approver_id = approver.id
      ${whereClause}
      ORDER BY tcr.${validSortBy} ${validSortOrder}
      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}
    `);
    /* istanbul ignore next */
    cov_f2zyppeqh().s[82]++;
    queryParams.push(limit, offset);
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[83]++, await (0, database_1.getPool)().query(dataQuery, queryParams));
    /* istanbul ignore next */
    cov_f2zyppeqh().s[84]++;
    return {
      requests: result.rows,
      total,
      page,
      limit,
      totalPages: Math.ceil(total / limit)
    };
  }
  /**
   * Get pending requests for a department head
   */
  async getPendingRequestsForDepartmentHead(departmentHeadUserId) {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[5]++;
    const query =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[85]++, `
      SELECT 
        tcr.id,
        tcr.employee_id as "employeeId",
        tcr.correction_date as "requestDate",
        tcr.session_type as "sessionType",
        CASE 
          WHEN tcr.session_type IN ('morning_in', 'afternoon_in') THEN tcr.requested_clock_in
          WHEN tcr.session_type IN ('morning_out', 'afternoon_out') THEN tcr.requested_clock_out
        END as "requestedTime",
        tcr.reason,
        tcr.status,
        tcr.approver_id as "approvedBy",
        tcr.approved_at as "approvedAt",
        tcr.created_at as "createdAt",
        tcr.updated_at as "updatedAt",
        e.employee_id as "employeeCode",
        CONCAT(u.first_name, ' ', u.last_name) as "employeeName",
        d.name as "departmentName",
        CONCAT(approver.first_name, ' ', approver.last_name) as "approverName"
      FROM time_correction_requests tcr
      JOIN employees e ON tcr.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      JOIN departments d ON e.department_id = d.id
              LEFT JOIN users approver ON tcr.approver_id = approver.id
      WHERE d.department_head_user_id = $1
        AND tcr.status = 'pending'
      ORDER BY tcr.created_at ASC
    `);
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[86]++, await (0, database_1.getPool)().query(query, [departmentHeadUserId]));
    /* istanbul ignore next */
    cov_f2zyppeqh().s[87]++;
    return result.rows;
  }
  /**
   * Get time correction request statistics
   */
  async getTimeCorrectionRequestStats(employeeId, departmentId) {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[6]++;
    const whereConditions =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[88]++, []);
    const queryParams =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[89]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[90]++, 1);
    /* istanbul ignore next */
    cov_f2zyppeqh().s[91]++;
    if (employeeId) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[32][0]++;
      cov_f2zyppeqh().s[92]++;
      whereConditions.push(`employee_id = $${paramIndex}`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[93]++;
      queryParams.push(employeeId);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[94]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[32][1]++;
    }
    cov_f2zyppeqh().s[95]++;
    if (departmentId) {
      /* istanbul ignore next */
      cov_f2zyppeqh().b[33][0]++;
      cov_f2zyppeqh().s[96]++;
      whereConditions.push(`employee_id IN (SELECT id FROM employees WHERE department_id = $${paramIndex})`);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[97]++;
      queryParams.push(departmentId);
      /* istanbul ignore next */
      cov_f2zyppeqh().s[98]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_f2zyppeqh().b[33][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[99]++, whereConditions.length > 0 ?
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[34][0]++, `WHERE ${whereConditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[34][1]++, ''));
    const query =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[100]++, `
      SELECT 
        COUNT(*) as total_requests,
        COUNT(*) FILTER (WHERE status = 'pending') as pending_requests,
        COUNT(*) FILTER (WHERE status = 'approved') as approved_requests,
        COUNT(*) FILTER (WHERE status = 'rejected') as rejected_requests
      FROM time_correction_requests
      ${whereClause}
    `);
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[101]++, await (0, database_1.getPool)().query(query, queryParams));
    const stats =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[102]++, result.rows[0]);
    /* istanbul ignore next */
    cov_f2zyppeqh().s[103]++;
    return {
      totalRequests:
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[35][0]++, parseInt(stats.total_requests)) ||
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[35][1]++, 0),
      pendingRequests:
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[36][0]++, parseInt(stats.pending_requests)) ||
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[36][1]++, 0),
      approvedRequests:
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[37][0]++, parseInt(stats.approved_requests)) ||
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[37][1]++, 0),
      rejectedRequests:
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[38][0]++, parseInt(stats.rejected_requests)) ||
      /* istanbul ignore next */
      (cov_f2zyppeqh().b[38][1]++, 0)
    };
  }
  /**
   * Delete time correction request
   */
  async deleteTimeCorrectionRequest(id) {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[7]++;
    const query =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[104]++, 'DELETE FROM time_correction_requests WHERE id = $1');
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[105]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_f2zyppeqh().s[106]++;
    return result.rowCount ?
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[39][0]++, result.rowCount > 0) :
    /* istanbul ignore next */
    (cov_f2zyppeqh().b[39][1]++, false);
  }
  /**
   * Get time correction request count
   */
  async getTimeCorrectionRequestCount() {
    /* istanbul ignore next */
    cov_f2zyppeqh().f[8]++;
    const query =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[107]++, 'SELECT COUNT(*) as count FROM time_correction_requests');
    const result =
    /* istanbul ignore next */
    (cov_f2zyppeqh().s[108]++, await (0, database_1.getPool)().query(query));
    /* istanbul ignore next */
    cov_f2zyppeqh().s[109]++;
    return parseInt(result.rows[0].count);
  }
}
/* istanbul ignore next */
cov_f2zyppeqh().s[110]++;
exports.TimeCorrectionRequestModel = TimeCorrectionRequestModel;
/* istanbul ignore next */
cov_f2zyppeqh().s[111]++;
exports.timeCorrectionRequestModel = new TimeCorrectionRequestModel();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,