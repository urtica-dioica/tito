0c435989a9c007a8d6c1d82c0113ffcc
"use strict";

/* istanbul ignore next */
function cov_1fgg36rfgj() {
  var path = "/home/kim/tito/server/src/utils/validation/employeeSchemas.ts";
  var hash = "477474125447cd87f801abba3393965bd9552e06";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/utils/validation/employeeSchemas.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 192
        }
      },
      "4": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "6": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "7": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 69,
          column: 3
        }
      },
      "8": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 75,
          column: 3
        }
      },
      "9": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 81,
          column: 3
        }
      },
      "10": {
        start: {
          line: 82,
          column: 0
        },
        end: {
          line: 104,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/utils/validation/employeeSchemas.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/utils/validation/employeeSchemas.ts"],
      sourcesContent: ["import Joi from 'joi';\n\nexport const createEmployeeSchema = Joi.object({\n  user_id: Joi.string().uuid().required().messages({\n    'string.guid': 'User ID must be a valid UUID',\n    'any.required': 'User ID is required'\n  }),\n  department_id: Joi.string().uuid().allow(null).optional().messages({\n    'string.guid': 'Department ID must be a valid UUID'\n  }),\n  position: Joi.string().min(2).max(100).required().messages({\n    'string.min': 'Position must be at least 2 characters long',\n    'string.max': 'Position must not exceed 100 characters',\n    'any.required': 'Position is required'\n  }),\n  employment_type: Joi.string().valid('regular', 'contractual', 'jo').required().messages({\n    'any.only': 'Employment type must be one of: regular, contractual, jo',\n    'any.required': 'Employment type is required'\n  }),\n  hire_date: Joi.date().max('now').required().messages({\n    'date.max': 'Hire date cannot be in the future',\n    'any.required': 'Hire date is required'\n  }),\n  base_salary: Joi.number().positive().min(10000).max(1000000).required().messages({\n    'number.base': 'Base salary must be a number',\n    'number.positive': 'Base salary must be positive',\n    'number.min': 'Base salary must be at least 10,000',\n    'number.max': 'Base salary cannot exceed 1,000,000',\n    'any.required': 'Base salary is required'\n  }),\n  status: Joi.string().valid('active', 'inactive', 'terminated', 'on_leave').default('active').messages({\n    'any.only': 'Status must be one of: active, inactive, terminated, on_leave'\n  })\n});\n\nexport const updateEmployeeSchema = Joi.object({\n  department_id: Joi.string().uuid().allow(null).optional().messages({\n    'string.guid': 'Department ID must be a valid UUID'\n  }),\n  position: Joi.string().min(2).max(100).optional().messages({\n    'string.min': 'Position must be at least 2 characters long',\n    'string.max': 'Position must not exceed 100 characters'\n  }),\n  employment_type: Joi.string().valid('regular', 'contractual', 'jo').optional().messages({\n    'any.only': 'Employment type must be one of: regular, contractual, jo'\n  }),\n  hire_date: Joi.date().max('now').optional().messages({\n    'date.max': 'Hire date cannot be in the future'\n  }),\n  base_salary: Joi.number().positive().min(10000).max(1000000).optional().messages({\n    'number.base': 'Base salary must be a number',\n    'number.positive': 'Base salary must be positive',\n    'number.min': 'Base salary must be at least 10,000',\n    'number.max': 'Base salary cannot exceed 1,000,000'\n  }),\n  status: Joi.string().valid('active', 'inactive', 'terminated', 'on_leave').optional().messages({\n    'any.only': 'Status must be one of: active, inactive, terminated, on_leave'\n  })\n});\n\nexport const employeeIdSchema = Joi.object({\n  id: Joi.string().uuid().required().messages({\n    'string.guid': 'Employee ID must be a valid UUID',\n    'any.required': 'Employee ID is required'\n  })\n});\n\nexport const employeeUserIdSchema = Joi.object({\n  user_id: Joi.string().uuid().required().messages({\n    'string.guid': 'User ID must be a valid UUID',\n    'any.required': 'User ID is required'\n  })\n});\n\nexport const employeeEmployeeIdSchema = Joi.object({\n  employee_id: Joi.string().pattern(/^EMP\\d{6}$/).required().messages({\n    'string.pattern.base': 'Employee ID must be in format EMP000000',\n    'any.required': 'Employee ID is required'\n  })\n});\n\nexport const listEmployeesSchema = Joi.object({\n  page: Joi.number().integer().min(1).default(1).messages({\n    'number.base': 'Page must be a number',\n    'number.integer': 'Page must be an integer',\n    'number.min': 'Page must be at least 1'\n  }),\n  limit: Joi.number().integer().min(1).max(100).default(20).messages({\n    'number.base': 'Limit must be a number',\n    'number.integer': 'Limit must be an integer',\n    'number.min': 'Limit must be at least 1',\n    'number.max': 'Limit cannot exceed 100'\n  }),\n  department_id: Joi.string().uuid().optional().messages({\n    'string.guid': 'Department ID must be a valid UUID'\n  }),\n  status: Joi.string().valid('active', 'inactive', 'terminated', 'on_leave').optional().messages({\n    'any.only': 'Status must be one of: active, inactive, terminated, on_leave'\n  }),\n  search: Joi.string().min(1).max(100).optional().messages({\n    'string.min': 'Search term must be at least 1 character',\n    'string.max': 'Search term cannot exceed 100 characters'\n  })\n}); "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "477474125447cd87f801abba3393965bd9552e06"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fgg36rfgj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fgg36rfgj();
var __importDefault =
/* istanbul ignore next */
(cov_1fgg36rfgj().s[0]++,
/* istanbul ignore next */
(cov_1fgg36rfgj().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1fgg36rfgj().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1fgg36rfgj().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1fgg36rfgj().f[0]++;
  cov_1fgg36rfgj().s[1]++;
  return /* istanbul ignore next */(cov_1fgg36rfgj().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1fgg36rfgj().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1fgg36rfgj().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1fgg36rfgj().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1fgg36rfgj().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fgg36rfgj().s[3]++;
exports.listEmployeesSchema = exports.employeeEmployeeIdSchema = exports.employeeUserIdSchema = exports.employeeIdSchema = exports.updateEmployeeSchema = exports.createEmployeeSchema = void 0;
const joi_1 =
/* istanbul ignore next */
(cov_1fgg36rfgj().s[4]++, __importDefault(require("joi")));
/* istanbul ignore next */
cov_1fgg36rfgj().s[5]++;
exports.createEmployeeSchema = joi_1.default.object({
  user_id: joi_1.default.string().uuid().required().messages({
    'string.guid': 'User ID must be a valid UUID',
    'any.required': 'User ID is required'
  }),
  department_id: joi_1.default.string().uuid().allow(null).optional().messages({
    'string.guid': 'Department ID must be a valid UUID'
  }),
  position: joi_1.default.string().min(2).max(100).required().messages({
    'string.min': 'Position must be at least 2 characters long',
    'string.max': 'Position must not exceed 100 characters',
    'any.required': 'Position is required'
  }),
  employment_type: joi_1.default.string().valid('regular', 'contractual', 'jo').required().messages({
    'any.only': 'Employment type must be one of: regular, contractual, jo',
    'any.required': 'Employment type is required'
  }),
  hire_date: joi_1.default.date().max('now').required().messages({
    'date.max': 'Hire date cannot be in the future',
    'any.required': 'Hire date is required'
  }),
  base_salary: joi_1.default.number().positive().min(10000).max(1000000).required().messages({
    'number.base': 'Base salary must be a number',
    'number.positive': 'Base salary must be positive',
    'number.min': 'Base salary must be at least 10,000',
    'number.max': 'Base salary cannot exceed 1,000,000',
    'any.required': 'Base salary is required'
  }),
  status: joi_1.default.string().valid('active', 'inactive', 'terminated', 'on_leave').default('active').messages({
    'any.only': 'Status must be one of: active, inactive, terminated, on_leave'
  })
});
/* istanbul ignore next */
cov_1fgg36rfgj().s[6]++;
exports.updateEmployeeSchema = joi_1.default.object({
  department_id: joi_1.default.string().uuid().allow(null).optional().messages({
    'string.guid': 'Department ID must be a valid UUID'
  }),
  position: joi_1.default.string().min(2).max(100).optional().messages({
    'string.min': 'Position must be at least 2 characters long',
    'string.max': 'Position must not exceed 100 characters'
  }),
  employment_type: joi_1.default.string().valid('regular', 'contractual', 'jo').optional().messages({
    'any.only': 'Employment type must be one of: regular, contractual, jo'
  }),
  hire_date: joi_1.default.date().max('now').optional().messages({
    'date.max': 'Hire date cannot be in the future'
  }),
  base_salary: joi_1.default.number().positive().min(10000).max(1000000).optional().messages({
    'number.base': 'Base salary must be a number',
    'number.positive': 'Base salary must be positive',
    'number.min': 'Base salary must be at least 10,000',
    'number.max': 'Base salary cannot exceed 1,000,000'
  }),
  status: joi_1.default.string().valid('active', 'inactive', 'terminated', 'on_leave').optional().messages({
    'any.only': 'Status must be one of: active, inactive, terminated, on_leave'
  })
});
/* istanbul ignore next */
cov_1fgg36rfgj().s[7]++;
exports.employeeIdSchema = joi_1.default.object({
  id: joi_1.default.string().uuid().required().messages({
    'string.guid': 'Employee ID must be a valid UUID',
    'any.required': 'Employee ID is required'
  })
});
/* istanbul ignore next */
cov_1fgg36rfgj().s[8]++;
exports.employeeUserIdSchema = joi_1.default.object({
  user_id: joi_1.default.string().uuid().required().messages({
    'string.guid': 'User ID must be a valid UUID',
    'any.required': 'User ID is required'
  })
});
/* istanbul ignore next */
cov_1fgg36rfgj().s[9]++;
exports.employeeEmployeeIdSchema = joi_1.default.object({
  employee_id: joi_1.default.string().pattern(/^EMP\d{6}$/).required().messages({
    'string.pattern.base': 'Employee ID must be in format EMP000000',
    'any.required': 'Employee ID is required'
  })
});
/* istanbul ignore next */
cov_1fgg36rfgj().s[10]++;
exports.listEmployeesSchema = joi_1.default.object({
  page: joi_1.default.number().integer().min(1).default(1).messages({
    'number.base': 'Page must be a number',
    'number.integer': 'Page must be an integer',
    'number.min': 'Page must be at least 1'
  }),
  limit: joi_1.default.number().integer().min(1).max(100).default(20).messages({
    'number.base': 'Limit must be a number',
    'number.integer': 'Limit must be an integer',
    'number.min': 'Limit must be at least 1',
    'number.max': 'Limit cannot exceed 100'
  }),
  department_id: joi_1.default.string().uuid().optional().messages({
    'string.guid': 'Department ID must be a valid UUID'
  }),
  status: joi_1.default.string().valid('active', 'inactive', 'terminated', 'on_leave').optional().messages({
    'any.only': 'Status must be one of: active, inactive, terminated, on_leave'
  }),
  search: joi_1.default.string().min(1).max(100).optional().messages({
    'string.min': 'Search term must be at least 1 character',
    'string.max': 'Search term cannot exceed 100 characters'
  })
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,