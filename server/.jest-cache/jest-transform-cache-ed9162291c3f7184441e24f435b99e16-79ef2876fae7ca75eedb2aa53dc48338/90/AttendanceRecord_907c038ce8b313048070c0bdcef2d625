c893e0a75b1a435cdbb773f320c565c1
"use strict";

/* istanbul ignore next */
function cov_1ydtkuxzgt() {
  var path = "/home/kim/tito/server/src/models/attendance/AttendanceRecord.ts";
  var hash = "c660cc0f44e27d2b4c42c1980bb00ea12cf834e0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/models/attendance/AttendanceRecord.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 71
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 51
        }
      },
      "3": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "4": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "5": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "6": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "7": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 73
        }
      },
      "8": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "9": {
        start: {
          line: 50,
          column: 22
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "10": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 87
        }
      },
      "11": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 62
        }
      },
      "12": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 31
        }
      },
      "13": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "14": {
        start: {
          line: 70,
          column: 25
        },
        end: {
          line: 70,
          column: 26
        }
      },
      "15": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "16": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 65
        }
      },
      "17": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 50
        }
      },
      "18": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 25
        }
      },
      "19": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "20": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 37
        }
      },
      "21": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 60
        }
      },
      "22": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 30
        }
      },
      "23": {
        start: {
          line: 81,
          column: 22
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "24": {
        start: {
          line: 93,
          column: 23
        },
        end: {
          line: 93,
          column: 81
        }
      },
      "25": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 62
        }
      },
      "26": {
        start: {
          line: 100,
          column: 140
        },
        end: {
          line: 100,
          column: 146
        }
      },
      "27": {
        start: {
          line: 101,
          column: 23
        },
        end: {
          line: 101,
          column: 41
        }
      },
      "28": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 102,
          column: 34
        }
      },
      "29": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "30": {
        start: {
          line: 104,
          column: 25
        },
        end: {
          line: 104,
          column: 26
        }
      },
      "31": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "32": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 68
        }
      },
      "33": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 41
        }
      },
      "34": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 25
        }
      },
      "35": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "36": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 69
        }
      },
      "37": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 43
        }
      },
      "38": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 25
        }
      },
      "39": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "40": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 62
        }
      },
      "41": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 40
        }
      },
      "42": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 25
        }
      },
      "43": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "44": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 62
        }
      },
      "45": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 38
        }
      },
      "46": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 25
        }
      },
      "47": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "48": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 71
        }
      },
      "49": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 37
        }
      },
      "50": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 25
        }
      },
      "51": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "52": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 136
        }
      },
      "53": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 44
        }
      },
      "54": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 25
        }
      },
      "55": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 136,
          column: 102
        }
      },
      "56": {
        start: {
          line: 138,
          column: 27
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "57": {
        start: {
          line: 146,
          column: 28
        },
        end: {
          line: 146,
          column: 90
        }
      },
      "58": {
        start: {
          line: 147,
          column: 22
        },
        end: {
          line: 147,
          column: 57
        }
      },
      "59": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "60": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 40
        }
      },
      "61": {
        start: {
          line: 169,
          column: 23
        },
        end: {
          line: 169,
          column: 84
        }
      },
      "62": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "63": {
        start: {
          line: 182,
          column: 22
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "64": {
        start: {
          line: 199,
          column: 23
        },
        end: {
          line: 199,
          column: 73
        }
      },
      "65": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "66": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 24
        }
      },
      "67": {
        start: {
          line: 203,
          column: 23
        },
        end: {
          line: 203,
          column: 37
        }
      },
      "68": {
        start: {
          line: 205,
          column: 30
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "69": {
        start: {
          line: 218,
          column: 31
        },
        end: {
          line: 218,
          column: 89
        }
      },
      "70": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 46
        }
      },
      "71": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 22
        }
      },
      "72": {
        start: {
          line: 226,
          column: 22
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "73": {
        start: {
          line: 243,
          column: 23
        },
        end: {
          line: 243,
          column: 101
        }
      },
      "74": {
        start: {
          line: 244,
          column: 22
        },
        end: {
          line: 244,
          column: 36
        }
      },
      "75": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 252,
          column: 10
        }
      },
      "76": {
        start: {
          line: 258,
          column: 22
        },
        end: {
          line: 258,
          column: 68
        }
      },
      "77": {
        start: {
          line: 259,
          column: 23
        },
        end: {
          line: 259,
          column: 73
        }
      },
      "78": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 61
        }
      },
      "79": {
        start: {
          line: 266,
          column: 22
        },
        end: {
          line: 266,
          column: 72
        }
      },
      "80": {
        start: {
          line: 267,
          column: 23
        },
        end: {
          line: 267,
          column: 67
        }
      },
      "81": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 46
        }
      },
      "82": {
        start: {
          line: 271,
          column: 0
        },
        end: {
          line: 271,
          column: 54
        }
      },
      "83": {
        start: {
          line: 272,
          column: 0
        },
        end: {
          line: 272,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 50
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 49
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 67
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 45
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 99
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 46
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 181
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        loc: {
          start: {
            line: 225,
            column: 69
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 225
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 37
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 257
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 37
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 265
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 30
          }
        }, {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 24,
            column: 42
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 44,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 40
          },
          end: {
            line: 44,
            column: 54
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 61
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 15
          },
          end: {
            line: 62,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 40
          },
          end: {
            line: 62,
            column: 54
          }
        }, {
          start: {
            line: 62,
            column: 57
          },
          end: {
            line: 62,
            column: 61
          }
        }],
        line: 62
      },
      "3": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 40
          },
          end: {
            line: 94,
            column: 54
          }
        }, {
          start: {
            line: 94,
            column: 57
          },
          end: {
            line: 94,
            column: 61
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 99,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 41
          },
          end: {
            line: 99,
            column: 43
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 24
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 34
          },
          end: {
            line: 100,
            column: 36
          }
        }],
        line: 100
      },
      "9": {
        loc: {
          start: {
            line: 100,
            column: 100
          },
          end: {
            line: 100,
            column: 115
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 109
          },
          end: {
            line: 100,
            column: 115
          }
        }],
        line: 100
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 117
          },
          end: {
            line: 100,
            column: 135
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 129
          },
          end: {
            line: 100,
            column: 135
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "14": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "15": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "16": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "17": {
        loc: {
          start: {
            line: 136,
            column: 28
          },
          end: {
            line: 136,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 57
          },
          end: {
            line: 136,
            column: 97
          }
        }, {
          start: {
            line: 136,
            column: 100
          },
          end: {
            line: 136,
            column: 102
          }
        }],
        line: 136
      },
      "18": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "19": {
        loc: {
          start: {
            line: 246,
            column: 23
          },
          end: {
            line: 246,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 23
          },
          end: {
            line: 246,
            column: 49
          }
        }, {
          start: {
            line: 246,
            column: 53
          },
          end: {
            line: 246,
            column: 54
          }
        }],
        line: 246
      },
      "20": {
        loc: {
          start: {
            line: 247,
            column: 25
          },
          end: {
            line: 247,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 25
          },
          end: {
            line: 247,
            column: 53
          }
        }, {
          start: {
            line: 247,
            column: 57
          },
          end: {
            line: 247,
            column: 58
          }
        }],
        line: 247
      },
      "21": {
        loc: {
          start: {
            line: 248,
            column: 22
          },
          end: {
            line: 248,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 22
          },
          end: {
            line: 248,
            column: 47
          }
        }, {
          start: {
            line: 248,
            column: 51
          },
          end: {
            line: 248,
            column: 52
          }
        }],
        line: 248
      },
      "22": {
        loc: {
          start: {
            line: 249,
            column: 24
          },
          end: {
            line: 249,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 24
          },
          end: {
            line: 249,
            column: 51
          }
        }, {
          start: {
            line: 249,
            column: 55
          },
          end: {
            line: 249,
            column: 56
          }
        }],
        line: 249
      },
      "23": {
        loc: {
          start: {
            line: 250,
            column: 25
          },
          end: {
            line: 250,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 25
          },
          end: {
            line: 250,
            column: 53
          }
        }, {
          start: {
            line: 250,
            column: 57
          },
          end: {
            line: 250,
            column: 58
          }
        }],
        line: 250
      },
      "24": {
        loc: {
          start: {
            line: 251,
            column: 24
          },
          end: {
            line: 251,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 24
          },
          end: {
            line: 251,
            column: 53
          }
        }, {
          start: {
            line: 251,
            column: 57
          },
          end: {
            line: 251,
            column: 58
          }
        }],
        line: 251
      },
      "25": {
        loc: {
          start: {
            line: 260,
            column: 15
          },
          end: {
            line: 260,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 33
          },
          end: {
            line: 260,
            column: 52
          }
        }, {
          start: {
            line: 260,
            column: 55
          },
          end: {
            line: 260,
            column: 60
          }
        }],
        line: 260
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/models/attendance/AttendanceRecord.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/models/attendance/AttendanceRecord.ts"],
      sourcesContent: ["import { getPool } from '../../config/database';\n\nexport interface AttendanceRecord {\n  id: string;\n  employeeId: string;\n  date: Date;\n  overallStatus: 'present' | 'late' | 'absent' | 'partial';\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface AttendanceRecordWithEmployee extends AttendanceRecord {\n  employeeCode: string;\n  employeeName: string;\n  departmentName: string | null;\n}\n\nexport interface CreateAttendanceRecordData {\n  employeeId: string;\n  date: Date;\n  overallStatus?: 'present' | 'late' | 'absent' | 'partial';\n}\n\nexport interface UpdateAttendanceRecordData {\n  overallStatus?: 'present' | 'late' | 'absent' | 'partial';\n}\n\nexport interface AttendanceRecordListParams {\n  page?: number | undefined;\n  limit?: number | undefined;\n  employeeId?: string | undefined;\n  departmentId?: string | undefined;\n  startDate?: Date | undefined;\n  endDate?: Date | undefined;\n  status?: 'present' | 'late' | 'absent' | 'partial' | undefined;\n  search?: string | undefined;\n  sortBy?: string | undefined;\n  sortOrder?: 'asc' | 'desc' | undefined;\n}\n\nexport class AttendanceRecordModel {\n  /**\n   * Create a new attendance record\n   */\n  async createAttendanceRecord(data: CreateAttendanceRecordData): Promise<AttendanceRecord> {\n    const query = `\n      INSERT INTO attendance_records (employee_id, date, overall_status)\n      VALUES ($1, $2, $3)\n      RETURNING \n        id,\n        employee_id as \"employeeId\",\n        date,\n        overall_status as \"overallStatus\",\n        created_at as \"createdAt\",\n        updated_at as \"updatedAt\"\n    `;\n\n    const result = await getPool().query(query, [\n      data.employeeId,\n      data.date,\n      data.overallStatus || 'absent'\n    ]);\n\n    return result.rows[0];\n  }\n\n  /**\n   * Get attendance record by ID\n   */\n  async findById(id: string): Promise<AttendanceRecord | null> {\n    const query = `\n      SELECT \n        id,\n        employee_id as \"employeeId\",\n        date,\n        overall_status as \"overallStatus\",\n        created_at as \"createdAt\",\n        updated_at as \"updatedAt\"\n      FROM attendance_records\n      WHERE id = $1\n    `;\n\n    const result = await getPool().query(query, [id]);\n    return result.rows.length > 0 ? result.rows[0] : null;\n  }\n\n  /**\n   * Get attendance record by employee ID and date\n   */\n  async findByEmployeeAndDate(employeeId: string, date: Date): Promise<AttendanceRecord | null> {\n    const query = `\n      SELECT \n        id,\n        employee_id as \"employeeId\",\n        date,\n        overall_status as \"overallStatus\",\n        created_at as \"createdAt\",\n        updated_at as \"updatedAt\"\n      FROM attendance_records\n      WHERE employee_id = $1 AND date = $2\n    `;\n\n    const result = await getPool().query(query, [employeeId, date]);\n    return result.rows.length > 0 ? result.rows[0] : null;\n  }\n\n  /**\n   * Update attendance record\n   */\n  async updateAttendanceRecord(id: string, data: UpdateAttendanceRecordData): Promise<AttendanceRecord | null> {\n    const updateFields: string[] = [];\n    const updateValues: any[] = [];\n    let paramIndex = 1;\n\n    if (data.overallStatus !== undefined) {\n      updateFields.push(`overall_status = $${paramIndex}`);\n      updateValues.push(data.overallStatus);\n      paramIndex++;\n    }\n\n    if (updateFields.length === 0) {\n      return this.findById(id);\n    }\n\n    updateFields.push(`updated_at = CURRENT_TIMESTAMP`);\n    updateValues.push(id);\n\n    const query = `\n      UPDATE attendance_records \n      SET ${updateFields.join(', ')}\n      WHERE id = $${paramIndex}\n      RETURNING \n        id,\n        employee_id as \"employeeId\",\n        date,\n        overall_status as \"overallStatus\",\n        created_at as \"createdAt\",\n        updated_at as \"updatedAt\"\n    `;\n\n    const result = await getPool().query(query, updateValues);\n    return result.rows.length > 0 ? result.rows[0] : null;\n  }\n\n  /**\n   * List attendance records with filtering and pagination\n   */\n  async listAttendanceRecords(params: AttendanceRecordListParams = {}): Promise<{\n    records: AttendanceRecordWithEmployee[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    const {\n      page = 1,\n      limit = 20,\n      employeeId,\n      departmentId,\n      startDate,\n      endDate,\n      status,\n      search,\n      sortBy = 'date',\n      sortOrder = 'desc'\n    } = params;\n\n    const offset = (page - 1) * limit;\n    const whereConditions: string[] = [];\n    const queryParams: any[] = [];\n    let paramIndex = 1;\n\n    // Build WHERE conditions\n    if (employeeId) {\n      whereConditions.push(`ar.employee_id = $${paramIndex}`);\n      queryParams.push(employeeId);\n      paramIndex++;\n    }\n\n    if (departmentId) {\n      whereConditions.push(`e.department_id = $${paramIndex}`);\n      queryParams.push(departmentId);\n      paramIndex++;\n    }\n\n    if (startDate) {\n      whereConditions.push(`ar.date >= $${paramIndex}`);\n      queryParams.push(startDate);\n      paramIndex++;\n    }\n\n    if (endDate) {\n      whereConditions.push(`ar.date <= $${paramIndex}`);\n      queryParams.push(endDate);\n      paramIndex++;\n    }\n\n    if (status) {\n      whereConditions.push(`ar.overall_status = $${paramIndex}`);\n      queryParams.push(status);\n      paramIndex++;\n    }\n\n    if (search) {\n      whereConditions.push(`(CONCAT(u.first_name, ' ', u.last_name) ILIKE $${paramIndex} OR e.employee_id ILIKE $${paramIndex})`);\n      queryParams.push(`%${search}%`);\n      paramIndex++;\n    }\n\n    const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(' AND ')}` : '';\n\n    // Count query\n    const countQuery = `\n      SELECT COUNT(*) as total\n      FROM attendance_records ar\n      JOIN employees e ON ar.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      ${whereClause}\n    `;\n\n    const countResult = await getPool().query(countQuery, queryParams);\n    const total = parseInt(countResult.rows[0].total);\n\n    // Data query\n    const dataQuery = `\n      SELECT \n        ar.id,\n        ar.employee_id as \"employeeId\",\n        ar.date,\n        ar.overall_status as \"overallStatus\",\n        ar.created_at as \"createdAt\",\n        ar.updated_at as \"updatedAt\",\n        e.employee_id as \"employeeCode\",\n        CONCAT(u.first_name, ' ', u.last_name) as \"employeeName\",\n        d.name as \"departmentName\"\n      FROM attendance_records ar\n      JOIN employees e ON ar.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      ${whereClause}\n      ORDER BY ar.${sortBy} ${sortOrder.toUpperCase()}\n      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}\n    `;\n\n    queryParams.push(limit, offset);\n    const result = await getPool().query(dataQuery, queryParams);\n\n    return {\n      records: result.rows,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit)\n    };\n  }\n\n  /**\n   * Get attendance record with sessions\n   */\n  async getAttendanceRecordWithSessions(id: string): Promise<AttendanceRecordWithEmployee & { sessions: any[] } | null> {\n    const query = `\n      SELECT \n        ar.id,\n        ar.employee_id as \"employeeId\",\n        ar.date,\n        ar.overall_status as \"overallStatus\",\n        ar.created_at as \"createdAt\",\n        ar.updated_at as \"updatedAt\",\n        e.employee_id as \"employeeCode\",\n        CONCAT(u.first_name, ' ', u.last_name) as \"employeeName\",\n        d.name as \"departmentName\"\n      FROM attendance_records ar\n      JOIN employees e ON ar.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      WHERE ar.id = $1\n    `;\n\n    const result = await getPool().query(query, [id]);\n    \n    if (result.rows.length === 0) {\n      return null;\n    }\n\n    const record = result.rows[0];\n\n    // Get sessions for this record\n    const sessionsQuery = `\n      SELECT \n        id,\n        session_type as \"sessionType\",\n        timestamp,\n        selfie_image_path as \"selfieImagePath\",\n        qr_code_hash as \"qrCodeHash\",\n        calculated_hours as \"calculatedHours\",\n        created_at as \"createdAt\"\n      FROM attendance_sessions\n      WHERE attendance_record_id = $1\n      ORDER BY timestamp\n    `;\n\n    const sessionsResult = await getPool().query(sessionsQuery, [id]);\n    record.sessions = sessionsResult.rows;\n\n    return record;\n  }\n\n  /**\n   * Get attendance statistics for an employee\n   */\n  async getEmployeeAttendanceStats(employeeId: string, startDate: Date, endDate: Date): Promise<{\n    totalDays: number;\n    presentDays: number;\n    lateDays: number;\n    absentDays: number;\n    partialDays: number;\n    totalHours: number;\n  }> {\n    const query = `\n      SELECT \n        COUNT(*) as total_days,\n        COUNT(*) FILTER (WHERE overall_status = 'present') as present_days,\n        COUNT(*) FILTER (WHERE overall_status = 'late') as late_days,\n        COUNT(*) FILTER (WHERE overall_status = 'absent') as absent_days,\n        COUNT(*) FILTER (WHERE overall_status = 'partial') as partial_days,\n        COALESCE(SUM(\n          (SELECT SUM(calculated_hours) \n           FROM attendance_sessions \n           WHERE attendance_record_id = ar.id)\n        ), 0) as total_hours\n      FROM attendance_records ar\n      WHERE employee_id = $1 \n        AND date >= $2 \n        AND date <= $3\n    `;\n\n    const result = await getPool().query(query, [employeeId, startDate, endDate]);\n    const stats = result.rows[0];\n\n    return {\n      totalDays: parseInt(stats.total_days) || 0,\n      presentDays: parseInt(stats.present_days) || 0,\n      lateDays: parseInt(stats.late_days) || 0,\n      absentDays: parseInt(stats.absent_days) || 0,\n      partialDays: parseInt(stats.partial_days) || 0,\n      totalHours: parseFloat(stats.total_hours) || 0\n    };\n  }\n\n  /**\n   * Delete attendance record\n   */\n  async deleteAttendanceRecord(id: string): Promise<boolean> {\n    const query = 'DELETE FROM attendance_records WHERE id = $1';\n    const result = await getPool().query(query, [id]);\n    return result.rowCount ? result.rowCount > 0 : false;\n  }\n\n  /**\n   * Get attendance record count\n   */\n  async getAttendanceRecordCount(): Promise<number> {\n    const query = 'SELECT COUNT(*) as count FROM attendance_records';\n    const result = await getPool().query(query);\n    return parseInt(result.rows[0].count);\n  }\n}\n\nexport const attendanceRecordModel = new AttendanceRecordModel();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c660cc0f44e27d2b4c42c1980bb00ea12cf834e0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ydtkuxzgt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ydtkuxzgt();
cov_1ydtkuxzgt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ydtkuxzgt().s[1]++;
exports.attendanceRecordModel = exports.AttendanceRecordModel = void 0;
const database_1 =
/* istanbul ignore next */
(cov_1ydtkuxzgt().s[2]++, require("../../config/database"));
class AttendanceRecordModel {
  /**
   * Create a new attendance record
   */
  async createAttendanceRecord(data) {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[0]++;
    const query =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[3]++, `
      INSERT INTO attendance_records (employee_id, date, overall_status)
      VALUES ($1, $2, $3)
      RETURNING 
        id,
        employee_id as "employeeId",
        date,
        overall_status as "overallStatus",
        created_at as "createdAt",
        updated_at as "updatedAt"
    `);
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[4]++, await (0, database_1.getPool)().query(query, [data.employeeId, data.date,
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[0][0]++, data.overallStatus) ||
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[0][1]++, 'absent')]));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[5]++;
    return result.rows[0];
  }
  /**
   * Get attendance record by ID
   */
  async findById(id) {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[1]++;
    const query =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[6]++, `
      SELECT 
        id,
        employee_id as "employeeId",
        date,
        overall_status as "overallStatus",
        created_at as "createdAt",
        updated_at as "updatedAt"
      FROM attendance_records
      WHERE id = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[7]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[8]++;
    return result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[1][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[1][1]++, null);
  }
  /**
   * Get attendance record by employee ID and date
   */
  async findByEmployeeAndDate(employeeId, date) {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[2]++;
    const query =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[9]++, `
      SELECT 
        id,
        employee_id as "employeeId",
        date,
        overall_status as "overallStatus",
        created_at as "createdAt",
        updated_at as "updatedAt"
      FROM attendance_records
      WHERE employee_id = $1 AND date = $2
    `);
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[10]++, await (0, database_1.getPool)().query(query, [employeeId, date]));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[11]++;
    return result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[2][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[2][1]++, null);
  }
  /**
   * Update attendance record
   */
  async updateAttendanceRecord(id, data) {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[3]++;
    const updateFields =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[12]++, []);
    const updateValues =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[13]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[14]++, 1);
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[15]++;
    if (data.overallStatus !== undefined) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[3][0]++;
      cov_1ydtkuxzgt().s[16]++;
      updateFields.push(`overall_status = $${paramIndex}`);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[17]++;
      updateValues.push(data.overallStatus);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[18]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[3][1]++;
    }
    cov_1ydtkuxzgt().s[19]++;
    if (updateFields.length === 0) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[4][0]++;
      cov_1ydtkuxzgt().s[20]++;
      return this.findById(id);
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[4][1]++;
    }
    cov_1ydtkuxzgt().s[21]++;
    updateFields.push(`updated_at = CURRENT_TIMESTAMP`);
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[22]++;
    updateValues.push(id);
    const query =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[23]++, `
      UPDATE attendance_records 
      SET ${updateFields.join(', ')}
      WHERE id = $${paramIndex}
      RETURNING 
        id,
        employee_id as "employeeId",
        date,
        overall_status as "overallStatus",
        created_at as "createdAt",
        updated_at as "updatedAt"
    `);
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[24]++, await (0, database_1.getPool)().query(query, updateValues));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[25]++;
    return result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[5][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[5][1]++, null);
  }
  /**
   * List attendance records with filtering and pagination
   */
  async listAttendanceRecords(params =
  /* istanbul ignore next */
  (cov_1ydtkuxzgt().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[4]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[7][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[8][0]++, 20),
      employeeId,
      departmentId,
      startDate,
      endDate,
      status,
      search,
      sortBy =
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[9][0]++, 'date'),
      sortOrder =
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[10][0]++, 'desc')
    } =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[26]++, params);
    const offset =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[27]++, (page - 1) * limit);
    const whereConditions =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[28]++, []);
    const queryParams =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[29]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[30]++, 1);
    // Build WHERE conditions
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[31]++;
    if (employeeId) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[11][0]++;
      cov_1ydtkuxzgt().s[32]++;
      whereConditions.push(`ar.employee_id = $${paramIndex}`);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[33]++;
      queryParams.push(employeeId);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[34]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[11][1]++;
    }
    cov_1ydtkuxzgt().s[35]++;
    if (departmentId) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[12][0]++;
      cov_1ydtkuxzgt().s[36]++;
      whereConditions.push(`e.department_id = $${paramIndex}`);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[37]++;
      queryParams.push(departmentId);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[38]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[12][1]++;
    }
    cov_1ydtkuxzgt().s[39]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[13][0]++;
      cov_1ydtkuxzgt().s[40]++;
      whereConditions.push(`ar.date >= $${paramIndex}`);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[41]++;
      queryParams.push(startDate);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[42]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[13][1]++;
    }
    cov_1ydtkuxzgt().s[43]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[14][0]++;
      cov_1ydtkuxzgt().s[44]++;
      whereConditions.push(`ar.date <= $${paramIndex}`);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[45]++;
      queryParams.push(endDate);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[46]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[14][1]++;
    }
    cov_1ydtkuxzgt().s[47]++;
    if (status) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[15][0]++;
      cov_1ydtkuxzgt().s[48]++;
      whereConditions.push(`ar.overall_status = $${paramIndex}`);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[49]++;
      queryParams.push(status);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[50]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[15][1]++;
    }
    cov_1ydtkuxzgt().s[51]++;
    if (search) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[16][0]++;
      cov_1ydtkuxzgt().s[52]++;
      whereConditions.push(`(CONCAT(u.first_name, ' ', u.last_name) ILIKE $${paramIndex} OR e.employee_id ILIKE $${paramIndex})`);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[53]++;
      queryParams.push(`%${search}%`);
      /* istanbul ignore next */
      cov_1ydtkuxzgt().s[54]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[16][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[55]++, whereConditions.length > 0 ?
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[17][0]++, `WHERE ${whereConditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[17][1]++, ''));
    // Count query
    const countQuery =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[56]++, `
      SELECT COUNT(*) as total
      FROM attendance_records ar
      JOIN employees e ON ar.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      ${whereClause}
    `);
    const countResult =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[57]++, await (0, database_1.getPool)().query(countQuery, queryParams));
    const total =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[58]++, parseInt(countResult.rows[0].total));
    // Data query
    const dataQuery =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[59]++, `
      SELECT 
        ar.id,
        ar.employee_id as "employeeId",
        ar.date,
        ar.overall_status as "overallStatus",
        ar.created_at as "createdAt",
        ar.updated_at as "updatedAt",
        e.employee_id as "employeeCode",
        CONCAT(u.first_name, ' ', u.last_name) as "employeeName",
        d.name as "departmentName"
      FROM attendance_records ar
      JOIN employees e ON ar.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      ${whereClause}
      ORDER BY ar.${sortBy} ${sortOrder.toUpperCase()}
      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}
    `);
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[60]++;
    queryParams.push(limit, offset);
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[61]++, await (0, database_1.getPool)().query(dataQuery, queryParams));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[62]++;
    return {
      records: result.rows,
      total,
      page,
      limit,
      totalPages: Math.ceil(total / limit)
    };
  }
  /**
   * Get attendance record with sessions
   */
  async getAttendanceRecordWithSessions(id) {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[5]++;
    const query =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[63]++, `
      SELECT 
        ar.id,
        ar.employee_id as "employeeId",
        ar.date,
        ar.overall_status as "overallStatus",
        ar.created_at as "createdAt",
        ar.updated_at as "updatedAt",
        e.employee_id as "employeeCode",
        CONCAT(u.first_name, ' ', u.last_name) as "employeeName",
        d.name as "departmentName"
      FROM attendance_records ar
      JOIN employees e ON ar.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      WHERE ar.id = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[64]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[65]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_1ydtkuxzgt().b[18][0]++;
      cov_1ydtkuxzgt().s[66]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1ydtkuxzgt().b[18][1]++;
    }
    const record =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[67]++, result.rows[0]);
    // Get sessions for this record
    const sessionsQuery =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[68]++, `
      SELECT 
        id,
        session_type as "sessionType",
        timestamp,
        selfie_image_path as "selfieImagePath",
        qr_code_hash as "qrCodeHash",
        calculated_hours as "calculatedHours",
        created_at as "createdAt"
      FROM attendance_sessions
      WHERE attendance_record_id = $1
      ORDER BY timestamp
    `);
    const sessionsResult =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[69]++, await (0, database_1.getPool)().query(sessionsQuery, [id]));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[70]++;
    record.sessions = sessionsResult.rows;
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[71]++;
    return record;
  }
  /**
   * Get attendance statistics for an employee
   */
  async getEmployeeAttendanceStats(employeeId, startDate, endDate) {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[6]++;
    const query =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[72]++, `
      SELECT 
        COUNT(*) as total_days,
        COUNT(*) FILTER (WHERE overall_status = 'present') as present_days,
        COUNT(*) FILTER (WHERE overall_status = 'late') as late_days,
        COUNT(*) FILTER (WHERE overall_status = 'absent') as absent_days,
        COUNT(*) FILTER (WHERE overall_status = 'partial') as partial_days,
        COALESCE(SUM(
          (SELECT SUM(calculated_hours) 
           FROM attendance_sessions 
           WHERE attendance_record_id = ar.id)
        ), 0) as total_hours
      FROM attendance_records ar
      WHERE employee_id = $1 
        AND date >= $2 
        AND date <= $3
    `);
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[73]++, await (0, database_1.getPool)().query(query, [employeeId, startDate, endDate]));
    const stats =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[74]++, result.rows[0]);
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[75]++;
    return {
      totalDays:
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[19][0]++, parseInt(stats.total_days)) ||
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[19][1]++, 0),
      presentDays:
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[20][0]++, parseInt(stats.present_days)) ||
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[20][1]++, 0),
      lateDays:
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[21][0]++, parseInt(stats.late_days)) ||
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[21][1]++, 0),
      absentDays:
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[22][0]++, parseInt(stats.absent_days)) ||
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[22][1]++, 0),
      partialDays:
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[23][0]++, parseInt(stats.partial_days)) ||
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[23][1]++, 0),
      totalHours:
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[24][0]++, parseFloat(stats.total_hours)) ||
      /* istanbul ignore next */
      (cov_1ydtkuxzgt().b[24][1]++, 0)
    };
  }
  /**
   * Delete attendance record
   */
  async deleteAttendanceRecord(id) {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[7]++;
    const query =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[76]++, 'DELETE FROM attendance_records WHERE id = $1');
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[77]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[78]++;
    return result.rowCount ?
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[25][0]++, result.rowCount > 0) :
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().b[25][1]++, false);
  }
  /**
   * Get attendance record count
   */
  async getAttendanceRecordCount() {
    /* istanbul ignore next */
    cov_1ydtkuxzgt().f[8]++;
    const query =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[79]++, 'SELECT COUNT(*) as count FROM attendance_records');
    const result =
    /* istanbul ignore next */
    (cov_1ydtkuxzgt().s[80]++, await (0, database_1.getPool)().query(query));
    /* istanbul ignore next */
    cov_1ydtkuxzgt().s[81]++;
    return parseInt(result.rows[0].count);
  }
}
/* istanbul ignore next */
cov_1ydtkuxzgt().s[82]++;
exports.AttendanceRecordModel = AttendanceRecordModel;
/* istanbul ignore next */
cov_1ydtkuxzgt().s[83]++;
exports.attendanceRecordModel = new AttendanceRecordModel();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,