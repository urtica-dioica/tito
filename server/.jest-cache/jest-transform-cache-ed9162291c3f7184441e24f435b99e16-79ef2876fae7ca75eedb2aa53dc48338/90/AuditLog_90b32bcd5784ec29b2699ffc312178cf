82c8f564b212bb17dc098bbc5cd1bcd2
"use strict";

/* istanbul ignore next */
function cov_al9khyywq() {
  var path = "/home/kim/tito/server/src/models/audit/AuditLog.ts";
  var hash = "0da657603d4d3150f47b7df2bed40e64eb104bfc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/models/audit/AuditLog.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 51
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "4": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "6": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 59
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 53
        }
      },
      "8": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 61
        }
      },
      "9": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "11": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "13": {
        start: {
          line: 36,
          column: 158
        },
        end: {
          line: 36,
          column: 164
        }
      },
      "14": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "15": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "16": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 23
        }
      },
      "17": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 26
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 64
        }
      },
      "20": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "21": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 25
        }
      },
      "22": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "23": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 63
        }
      },
      "24": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "25": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "26": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "27": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 60
        }
      },
      "28": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 32
        }
      },
      "29": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "30": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "31": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 72
        }
      },
      "32": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "33": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "34": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "35": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 65
        }
      },
      "36": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 35
        }
      },
      "37": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "38": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "39": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 65
        }
      },
      "40": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 33
        }
      },
      "41": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "42": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "43": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "44": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "45": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "46": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 82,
          column: 102
        }
      },
      "47": {
        start: {
          line: 84,
          column: 27
        },
        end: {
          line: 84,
          column: 74
        }
      },
      "48": {
        start: {
          line: 85,
          column: 28
        },
        end: {
          line: 85,
          column: 69
        }
      },
      "49": {
        start: {
          line: 86,
          column: 22
        },
        end: {
          line: 86,
          column: 57
        }
      },
      "50": {
        start: {
          line: 88,
          column: 22
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "51": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 35
        }
      },
      "52": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 95,
          column: 59
        }
      },
      "53": {
        start: {
          line: 96,
          column: 21
        },
        end: {
          line: 96,
          column: 71
        }
      },
      "54": {
        start: {
          line: 96,
          column: 44
        },
        end: {
          line: 96,
          column: 70
        }
      },
      "55": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "56": {
        start: {
          line: 106,
          column: 22
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "57": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 74
        }
      },
      "58": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 66
        }
      },
      "59": {
        start: {
          line: 112,
          column: 38
        },
        end: {
          line: 112,
          column: 64
        }
      },
      "60": {
        start: {
          line: 115,
          column: 22
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "61": {
        start: {
          line: 121,
          column: 23
        },
        end: {
          line: 121,
          column: 68
        }
      },
      "62": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "63": {
        start: {
          line: 122,
          column: 38
        },
        end: {
          line: 122,
          column: 64
        }
      },
      "64": {
        start: {
          line: 125,
          column: 27
        },
        end: {
          line: 125,
          column: 59
        }
      },
      "65": {
        start: {
          line: 126,
          column: 28
        },
        end: {
          line: 126,
          column: 61
        }
      },
      "66": {
        start: {
          line: 127,
          column: 26
        },
        end: {
          line: 127,
          column: 61
        }
      },
      "67": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "68": {
        start: {
          line: 134,
          column: 29
        },
        end: {
          line: 134,
          column: 63
        }
      },
      "69": {
        start: {
          line: 135,
          column: 27
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "70": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 141,
          column: 61
        }
      },
      "71": {
        start: {
          line: 142,
          column: 28
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "72": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 63
        }
      },
      "73": {
        start: {
          line: 147,
          column: 31
        },
        end: {
          line: 147,
          column: 67
        }
      },
      "74": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "75": {
        start: {
          line: 156,
          column: 22
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "76": {
        start: {
          line: 160,
          column: 23
        },
        end: {
          line: 160,
          column: 51
        }
      },
      "77": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 36
        }
      },
      "78": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 173,
          column: 10
        }
      },
      "79": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 176,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 96,
            column: 38
          }
        },
        loc: {
          start: {
            line: 96,
            column: 44
          },
          end: {
            line: 96,
            column: 70
          }
        },
        line: 96
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 52
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 105
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 112,
            column: 31
          },
          end: {
            line: 112,
            column: 32
          }
        },
        loc: {
          start: {
            line: 112,
            column: 38
          },
          end: {
            line: 112,
            column: 64
          }
        },
        line: 112
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 49
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 114
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 122,
            column: 31
          },
          end: {
            line: 122,
            column: 32
          }
        },
        loc: {
          start: {
            line: 122,
            column: 38
          },
          end: {
            line: 122,
            column: 64
          }
        },
        line: 122
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 124
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 46
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 155
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 26
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 27
          },
          end: {
            line: 20,
            column: 55
          }
        }, {
          start: {
            line: 20,
            column: 58
          },
          end: {
            line: 20,
            column: 62
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 55
          }
        }, {
          start: {
            line: 21,
            column: 58
          },
          end: {
            line: 21,
            column: 62
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 32
          }
        }, {
          start: {
            line: 22,
            column: 36
          },
          end: {
            line: 22,
            column: 40
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 35,
            column: 35
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 24
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 36
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 112
          },
          end: {
            line: 36,
            column: 133
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 121
          },
          end: {
            line: 36,
            column: 133
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 36,
            column: 135
          },
          end: {
            line: 36,
            column: 153
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 147
          },
          end: {
            line: 36,
            column: 153
          }
        }],
        line: 36
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "11": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "15": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "16": {
        loc: {
          start: {
            line: 82,
            column: 28
          },
          end: {
            line: 82,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 57
          },
          end: {
            line: 82,
            column: 97
          }
        }, {
          start: {
            line: 82,
            column: 100
          },
          end: {
            line: 82,
            column: 102
          }
        }],
        line: 82
      },
      "17": {
        loc: {
          start: {
            line: 114,
            column: 37
          },
          end: {
            line: 114,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 114,
            column: 45
          },
          end: {
            line: 114,
            column: 47
          }
        }],
        line: 114
      },
      "18": {
        loc: {
          start: {
            line: 155,
            column: 29
          },
          end: {
            line: 155,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 155,
            column: 42
          },
          end: {
            line: 155,
            column: 44
          }
        }],
        line: 155
      },
      "19": {
        loc: {
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 30
          }
        }, {
          start: {
            line: 161,
            column: 34
          },
          end: {
            line: 161,
            column: 35
          }
        }],
        line: 161
      },
      "20": {
        loc: {
          start: {
            line: 169,
            column: 21
          },
          end: {
            line: 169,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 36
          },
          end: {
            line: 169,
            column: 60
          }
        }, {
          start: {
            line: 169,
            column: 63
          },
          end: {
            line: 169,
            column: 67
          }
        }],
        line: 169
      },
      "21": {
        loc: {
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 36
          },
          end: {
            line: 170,
            column: 60
          }
        }, {
          start: {
            line: 170,
            column: 63
          },
          end: {
            line: 170,
            column: 67
          }
        }],
        line: 170
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/models/audit/AuditLog.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/models/audit/AuditLog.ts"],
      sourcesContent: ["import { Pool } from 'pg';\nimport { getPool } from '../../config/database';\n\nexport interface AuditLog {\n  id: string;\n  tableName: string;\n  recordId: string;\n  action: 'INSERT' | 'UPDATE' | 'DELETE';\n  oldData: any | null;\n  newData: any | null;\n  changedByUserId: string | null;\n  changedAt: Date;\n}\n\nexport interface CreateAuditLogData {\n  tableName: string;\n  recordId: string;\n  action: 'INSERT' | 'UPDATE' | 'DELETE';\n  oldData?: any;\n  newData?: any;\n  changedByUserId?: string;\n}\n\nexport interface AuditLogListParams {\n  page?: number;\n  limit?: number;\n  tableName?: string;\n  recordId?: string;\n  action?: 'INSERT' | 'UPDATE' | 'DELETE';\n  changedByUserId?: string;\n  startDate?: Date;\n  endDate?: Date;\n  search?: string;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\nexport class AuditLogModel {\n  private pool: Pool;\n\n  constructor() {\n    this.pool = getPool();\n  }\n\n  async createAuditLog(data: CreateAuditLogData): Promise<AuditLog> {\n    const query = `\n      INSERT INTO audit_log (\n        table_name, record_id, action, old_data, new_data, changed_by_user_id\n      ) VALUES ($1, $2, $3, $4, $5, $6)\n      RETURNING *\n    `;\n\n    const values = [\n      data.tableName,\n      data.recordId,\n      data.action,\n      data.oldData ? JSON.stringify(data.oldData) : null,\n      data.newData ? JSON.stringify(data.newData) : null,\n      data.changedByUserId || null\n    ];\n\n    const result = await this.pool.query(query, values);\n    return this.mapRowToAuditLog(result.rows[0]);\n  }\n\n  async findById(id: string): Promise<AuditLog | null> {\n    const query = 'SELECT * FROM audit_log WHERE id = $1';\n    const result = await this.pool.query(query, [id]);\n    \n    if (result.rows.length === 0) {\n      return null;\n    }\n    \n    return this.mapRowToAuditLog(result.rows[0]);\n  }\n\n  async listAuditLogs(params: AuditLogListParams = {}): Promise<{\n    logs: AuditLog[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    const {\n      page = 1,\n      limit = 20,\n      tableName,\n      recordId,\n      action,\n      changedByUserId,\n      startDate,\n      endDate,\n      search,\n      sortBy = 'changed_at',\n      sortOrder = 'desc'\n    } = params;\n\n    const offset = (page - 1) * limit;\n    let whereConditions: string[] = [];\n    let values: any[] = [];\n    let valueIndex = 1;\n\n    // Build WHERE conditions\n    if (tableName) {\n      whereConditions.push(`table_name = $${valueIndex}`);\n      values.push(tableName);\n      valueIndex++;\n    }\n\n    if (recordId) {\n      whereConditions.push(`record_id = $${valueIndex}`);\n      values.push(recordId);\n      valueIndex++;\n    }\n\n    if (action) {\n      whereConditions.push(`action = $${valueIndex}`);\n      values.push(action);\n      valueIndex++;\n    }\n\n    if (changedByUserId) {\n      whereConditions.push(`changed_by_user_id = $${valueIndex}`);\n      values.push(changedByUserId);\n      valueIndex++;\n    }\n\n    if (startDate) {\n      whereConditions.push(`changed_at >= $${valueIndex}`);\n      values.push(startDate);\n      valueIndex++;\n    }\n\n    if (endDate) {\n      whereConditions.push(`changed_at <= $${valueIndex}`);\n      values.push(endDate);\n      valueIndex++;\n    }\n\n    if (search) {\n      whereConditions.push(`(\n        table_name ILIKE $${valueIndex} OR \n        action ILIKE $${valueIndex} OR\n        old_data::text ILIKE $${valueIndex} OR\n        new_data::text ILIKE $${valueIndex}\n      )`);\n      values.push(`%${search}%`);\n      valueIndex++;\n    }\n\n    const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(' AND ')}` : '';\n\n    // Count query\n    const countQuery = `SELECT COUNT(*) FROM audit_log ${whereClause}`;\n    const countResult = await this.pool.query(countQuery, values);\n    const total = parseInt(countResult.rows[0].count);\n\n    // Main query\n    const query = `\n      SELECT * FROM audit_log \n      ${whereClause}\n      ORDER BY ${sortBy} ${sortOrder.toUpperCase()}\n      LIMIT $${valueIndex} OFFSET $${valueIndex + 1}\n    `;\n    values.push(limit, offset);\n\n    const result = await this.pool.query(query, values);\n    const logs = result.rows.map(row => this.mapRowToAuditLog(row));\n\n    return {\n      logs,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit)\n    };\n  }\n\n  async getAuditLogsByRecord(tableName: string, recordId: string): Promise<AuditLog[]> {\n    const query = `\n      SELECT * FROM audit_log \n      WHERE table_name = $1 AND record_id = $2 \n      ORDER BY changed_at DESC\n    `;\n    \n    const result = await this.pool.query(query, [tableName, recordId]);\n    return result.rows.map(row => this.mapRowToAuditLog(row));\n  }\n\n  async getAuditLogsByUser(userId: string, limit: number = 50): Promise<AuditLog[]> {\n    const query = `\n      SELECT * FROM audit_log \n      WHERE changed_by_user_id = $1 \n      ORDER BY changed_at DESC \n      LIMIT $2\n    `;\n    \n    const result = await this.pool.query(query, [userId, limit]);\n    return result.rows.map(row => this.mapRowToAuditLog(row));\n  }\n\n  async getAuditStats(): Promise<{\n    totalLogs: number;\n    logsByAction: Array<{ action: string; count: number }>;\n    logsByTable: Array<{ tableName: string; count: number }>;\n    recentActivity: number;\n  }> {\n    const totalQuery = 'SELECT COUNT(*) FROM audit_log';\n    const totalResult = await this.pool.query(totalQuery);\n    const totalLogs = parseInt(totalResult.rows[0].count);\n\n    const actionQuery = `\n      SELECT action, COUNT(*) as count \n      FROM audit_log \n      GROUP BY action \n      ORDER BY count DESC\n    `;\n    const actionResult = await this.pool.query(actionQuery);\n\n    const tableQuery = `\n      SELECT table_name, COUNT(*) as count \n      FROM audit_log \n      GROUP BY table_name \n      ORDER BY count DESC\n    `;\n    const tableResult = await this.pool.query(tableQuery);\n\n    const recentQuery = `\n      SELECT COUNT(*) FROM audit_log \n      WHERE changed_at >= NOW() - INTERVAL '24 hours'\n    `;\n    const recentResult = await this.pool.query(recentQuery);\n    const recentActivity = parseInt(recentResult.rows[0].count);\n\n    return {\n      totalLogs,\n      logsByAction: actionResult.rows,\n      logsByTable: tableResult.rows,\n      recentActivity\n    };\n  }\n\n  async deleteOldAuditLogs(daysToKeep: number = 90): Promise<number> {\n    const query = `\n      DELETE FROM audit_log \n      WHERE changed_at < NOW() - INTERVAL '${daysToKeep} days'\n    `;\n    \n    const result = await this.pool.query(query);\n    return result.rowCount || 0;\n  }\n\n  private mapRowToAuditLog(row: any): AuditLog {\n    return {\n      id: row.id,\n      tableName: row.table_name,\n      recordId: row.record_id,\n      action: row.action,\n      oldData: row.old_data ? JSON.parse(row.old_data) : null,\n      newData: row.new_data ? JSON.parse(row.new_data) : null,\n      changedByUserId: row.changed_by_user_id,\n      changedAt: row.changed_at\n    };\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0da657603d4d3150f47b7df2bed40e64eb104bfc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_al9khyywq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_al9khyywq();
cov_al9khyywq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_al9khyywq().s[1]++;
exports.AuditLogModel = void 0;
const database_1 =
/* istanbul ignore next */
(cov_al9khyywq().s[2]++, require("../../config/database"));
class AuditLogModel {
  constructor() {
    /* istanbul ignore next */
    cov_al9khyywq().f[0]++;
    cov_al9khyywq().s[3]++;
    this.pool = (0, database_1.getPool)();
  }
  async createAuditLog(data) {
    /* istanbul ignore next */
    cov_al9khyywq().f[1]++;
    const query =
    /* istanbul ignore next */
    (cov_al9khyywq().s[4]++, `
      INSERT INTO audit_log (
        table_name, record_id, action, old_data, new_data, changed_by_user_id
      ) VALUES ($1, $2, $3, $4, $5, $6)
      RETURNING *
    `);
    const values =
    /* istanbul ignore next */
    (cov_al9khyywq().s[5]++, [data.tableName, data.recordId, data.action, data.oldData ?
    /* istanbul ignore next */
    (cov_al9khyywq().b[0][0]++, JSON.stringify(data.oldData)) :
    /* istanbul ignore next */
    (cov_al9khyywq().b[0][1]++, null), data.newData ?
    /* istanbul ignore next */
    (cov_al9khyywq().b[1][0]++, JSON.stringify(data.newData)) :
    /* istanbul ignore next */
    (cov_al9khyywq().b[1][1]++, null),
    /* istanbul ignore next */
    (cov_al9khyywq().b[2][0]++, data.changedByUserId) ||
    /* istanbul ignore next */
    (cov_al9khyywq().b[2][1]++, null)]);
    const result =
    /* istanbul ignore next */
    (cov_al9khyywq().s[6]++, await this.pool.query(query, values));
    /* istanbul ignore next */
    cov_al9khyywq().s[7]++;
    return this.mapRowToAuditLog(result.rows[0]);
  }
  async findById(id) {
    /* istanbul ignore next */
    cov_al9khyywq().f[2]++;
    const query =
    /* istanbul ignore next */
    (cov_al9khyywq().s[8]++, 'SELECT * FROM audit_log WHERE id = $1');
    const result =
    /* istanbul ignore next */
    (cov_al9khyywq().s[9]++, await this.pool.query(query, [id]));
    /* istanbul ignore next */
    cov_al9khyywq().s[10]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_al9khyywq().b[3][0]++;
      cov_al9khyywq().s[11]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_al9khyywq().b[3][1]++;
    }
    cov_al9khyywq().s[12]++;
    return this.mapRowToAuditLog(result.rows[0]);
  }
  async listAuditLogs(params =
  /* istanbul ignore next */
  (cov_al9khyywq().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_al9khyywq().f[3]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_al9khyywq().b[5][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_al9khyywq().b[6][0]++, 20),
      tableName,
      recordId,
      action,
      changedByUserId,
      startDate,
      endDate,
      search,
      sortBy =
      /* istanbul ignore next */
      (cov_al9khyywq().b[7][0]++, 'changed_at'),
      sortOrder =
      /* istanbul ignore next */
      (cov_al9khyywq().b[8][0]++, 'desc')
    } =
    /* istanbul ignore next */
    (cov_al9khyywq().s[13]++, params);
    const offset =
    /* istanbul ignore next */
    (cov_al9khyywq().s[14]++, (page - 1) * limit);
    let whereConditions =
    /* istanbul ignore next */
    (cov_al9khyywq().s[15]++, []);
    let values =
    /* istanbul ignore next */
    (cov_al9khyywq().s[16]++, []);
    let valueIndex =
    /* istanbul ignore next */
    (cov_al9khyywq().s[17]++, 1);
    // Build WHERE conditions
    /* istanbul ignore next */
    cov_al9khyywq().s[18]++;
    if (tableName) {
      /* istanbul ignore next */
      cov_al9khyywq().b[9][0]++;
      cov_al9khyywq().s[19]++;
      whereConditions.push(`table_name = $${valueIndex}`);
      /* istanbul ignore next */
      cov_al9khyywq().s[20]++;
      values.push(tableName);
      /* istanbul ignore next */
      cov_al9khyywq().s[21]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_al9khyywq().b[9][1]++;
    }
    cov_al9khyywq().s[22]++;
    if (recordId) {
      /* istanbul ignore next */
      cov_al9khyywq().b[10][0]++;
      cov_al9khyywq().s[23]++;
      whereConditions.push(`record_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_al9khyywq().s[24]++;
      values.push(recordId);
      /* istanbul ignore next */
      cov_al9khyywq().s[25]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_al9khyywq().b[10][1]++;
    }
    cov_al9khyywq().s[26]++;
    if (action) {
      /* istanbul ignore next */
      cov_al9khyywq().b[11][0]++;
      cov_al9khyywq().s[27]++;
      whereConditions.push(`action = $${valueIndex}`);
      /* istanbul ignore next */
      cov_al9khyywq().s[28]++;
      values.push(action);
      /* istanbul ignore next */
      cov_al9khyywq().s[29]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_al9khyywq().b[11][1]++;
    }
    cov_al9khyywq().s[30]++;
    if (changedByUserId) {
      /* istanbul ignore next */
      cov_al9khyywq().b[12][0]++;
      cov_al9khyywq().s[31]++;
      whereConditions.push(`changed_by_user_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_al9khyywq().s[32]++;
      values.push(changedByUserId);
      /* istanbul ignore next */
      cov_al9khyywq().s[33]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_al9khyywq().b[12][1]++;
    }
    cov_al9khyywq().s[34]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_al9khyywq().b[13][0]++;
      cov_al9khyywq().s[35]++;
      whereConditions.push(`changed_at >= $${valueIndex}`);
      /* istanbul ignore next */
      cov_al9khyywq().s[36]++;
      values.push(startDate);
      /* istanbul ignore next */
      cov_al9khyywq().s[37]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_al9khyywq().b[13][1]++;
    }
    cov_al9khyywq().s[38]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_al9khyywq().b[14][0]++;
      cov_al9khyywq().s[39]++;
      whereConditions.push(`changed_at <= $${valueIndex}`);
      /* istanbul ignore next */
      cov_al9khyywq().s[40]++;
      values.push(endDate);
      /* istanbul ignore next */
      cov_al9khyywq().s[41]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_al9khyywq().b[14][1]++;
    }
    cov_al9khyywq().s[42]++;
    if (search) {
      /* istanbul ignore next */
      cov_al9khyywq().b[15][0]++;
      cov_al9khyywq().s[43]++;
      whereConditions.push(`(
        table_name ILIKE $${valueIndex} OR 
        action ILIKE $${valueIndex} OR
        old_data::text ILIKE $${valueIndex} OR
        new_data::text ILIKE $${valueIndex}
      )`);
      /* istanbul ignore next */
      cov_al9khyywq().s[44]++;
      values.push(`%${search}%`);
      /* istanbul ignore next */
      cov_al9khyywq().s[45]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_al9khyywq().b[15][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_al9khyywq().s[46]++, whereConditions.length > 0 ?
    /* istanbul ignore next */
    (cov_al9khyywq().b[16][0]++, `WHERE ${whereConditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_al9khyywq().b[16][1]++, ''));
    // Count query
    const countQuery =
    /* istanbul ignore next */
    (cov_al9khyywq().s[47]++, `SELECT COUNT(*) FROM audit_log ${whereClause}`);
    const countResult =
    /* istanbul ignore next */
    (cov_al9khyywq().s[48]++, await this.pool.query(countQuery, values));
    const total =
    /* istanbul ignore next */
    (cov_al9khyywq().s[49]++, parseInt(countResult.rows[0].count));
    // Main query
    const query =
    /* istanbul ignore next */
    (cov_al9khyywq().s[50]++, `
      SELECT * FROM audit_log 
      ${whereClause}
      ORDER BY ${sortBy} ${sortOrder.toUpperCase()}
      LIMIT $${valueIndex} OFFSET $${valueIndex + 1}
    `);
    /* istanbul ignore next */
    cov_al9khyywq().s[51]++;
    values.push(limit, offset);
    const result =
    /* istanbul ignore next */
    (cov_al9khyywq().s[52]++, await this.pool.query(query, values));
    const logs =
    /* istanbul ignore next */
    (cov_al9khyywq().s[53]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_al9khyywq().f[4]++;
      cov_al9khyywq().s[54]++;
      return this.mapRowToAuditLog(row);
    }));
    /* istanbul ignore next */
    cov_al9khyywq().s[55]++;
    return {
      logs,
      total,
      page,
      limit,
      totalPages: Math.ceil(total / limit)
    };
  }
  async getAuditLogsByRecord(tableName, recordId) {
    /* istanbul ignore next */
    cov_al9khyywq().f[5]++;
    const query =
    /* istanbul ignore next */
    (cov_al9khyywq().s[56]++, `
      SELECT * FROM audit_log 
      WHERE table_name = $1 AND record_id = $2 
      ORDER BY changed_at DESC
    `);
    const result =
    /* istanbul ignore next */
    (cov_al9khyywq().s[57]++, await this.pool.query(query, [tableName, recordId]));
    /* istanbul ignore next */
    cov_al9khyywq().s[58]++;
    return result.rows.map(row => {
      /* istanbul ignore next */
      cov_al9khyywq().f[6]++;
      cov_al9khyywq().s[59]++;
      return this.mapRowToAuditLog(row);
    });
  }
  async getAuditLogsByUser(userId, limit =
  /* istanbul ignore next */
  (cov_al9khyywq().b[17][0]++, 50)) {
    /* istanbul ignore next */
    cov_al9khyywq().f[7]++;
    const query =
    /* istanbul ignore next */
    (cov_al9khyywq().s[60]++, `
      SELECT * FROM audit_log 
      WHERE changed_by_user_id = $1 
      ORDER BY changed_at DESC 
      LIMIT $2
    `);
    const result =
    /* istanbul ignore next */
    (cov_al9khyywq().s[61]++, await this.pool.query(query, [userId, limit]));
    /* istanbul ignore next */
    cov_al9khyywq().s[62]++;
    return result.rows.map(row => {
      /* istanbul ignore next */
      cov_al9khyywq().f[8]++;
      cov_al9khyywq().s[63]++;
      return this.mapRowToAuditLog(row);
    });
  }
  async getAuditStats() {
    /* istanbul ignore next */
    cov_al9khyywq().f[9]++;
    const totalQuery =
    /* istanbul ignore next */
    (cov_al9khyywq().s[64]++, 'SELECT COUNT(*) FROM audit_log');
    const totalResult =
    /* istanbul ignore next */
    (cov_al9khyywq().s[65]++, await this.pool.query(totalQuery));
    const totalLogs =
    /* istanbul ignore next */
    (cov_al9khyywq().s[66]++, parseInt(totalResult.rows[0].count));
    const actionQuery =
    /* istanbul ignore next */
    (cov_al9khyywq().s[67]++, `
      SELECT action, COUNT(*) as count 
      FROM audit_log 
      GROUP BY action 
      ORDER BY count DESC
    `);
    const actionResult =
    /* istanbul ignore next */
    (cov_al9khyywq().s[68]++, await this.pool.query(actionQuery));
    const tableQuery =
    /* istanbul ignore next */
    (cov_al9khyywq().s[69]++, `
      SELECT table_name, COUNT(*) as count 
      FROM audit_log 
      GROUP BY table_name 
      ORDER BY count DESC
    `);
    const tableResult =
    /* istanbul ignore next */
    (cov_al9khyywq().s[70]++, await this.pool.query(tableQuery));
    const recentQuery =
    /* istanbul ignore next */
    (cov_al9khyywq().s[71]++, `
      SELECT COUNT(*) FROM audit_log 
      WHERE changed_at >= NOW() - INTERVAL '24 hours'
    `);
    const recentResult =
    /* istanbul ignore next */
    (cov_al9khyywq().s[72]++, await this.pool.query(recentQuery));
    const recentActivity =
    /* istanbul ignore next */
    (cov_al9khyywq().s[73]++, parseInt(recentResult.rows[0].count));
    /* istanbul ignore next */
    cov_al9khyywq().s[74]++;
    return {
      totalLogs,
      logsByAction: actionResult.rows,
      logsByTable: tableResult.rows,
      recentActivity
    };
  }
  async deleteOldAuditLogs(daysToKeep =
  /* istanbul ignore next */
  (cov_al9khyywq().b[18][0]++, 90)) {
    /* istanbul ignore next */
    cov_al9khyywq().f[10]++;
    const query =
    /* istanbul ignore next */
    (cov_al9khyywq().s[75]++, `
      DELETE FROM audit_log 
      WHERE changed_at < NOW() - INTERVAL '${daysToKeep} days'
    `);
    const result =
    /* istanbul ignore next */
    (cov_al9khyywq().s[76]++, await this.pool.query(query));
    /* istanbul ignore next */
    cov_al9khyywq().s[77]++;
    return /* istanbul ignore next */(cov_al9khyywq().b[19][0]++, result.rowCount) ||
    /* istanbul ignore next */
    (cov_al9khyywq().b[19][1]++, 0);
  }
  mapRowToAuditLog(row) {
    /* istanbul ignore next */
    cov_al9khyywq().f[11]++;
    cov_al9khyywq().s[78]++;
    return {
      id: row.id,
      tableName: row.table_name,
      recordId: row.record_id,
      action: row.action,
      oldData: row.old_data ?
      /* istanbul ignore next */
      (cov_al9khyywq().b[20][0]++, JSON.parse(row.old_data)) :
      /* istanbul ignore next */
      (cov_al9khyywq().b[20][1]++, null),
      newData: row.new_data ?
      /* istanbul ignore next */
      (cov_al9khyywq().b[21][0]++, JSON.parse(row.new_data)) :
      /* istanbul ignore next */
      (cov_al9khyywq().b[21][1]++, null),
      changedByUserId: row.changed_by_user_id,
      changedAt: row.changed_at
    };
  }
}
/* istanbul ignore next */
cov_al9khyywq().s[79]++;
exports.AuditLogModel = AuditLogModel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,