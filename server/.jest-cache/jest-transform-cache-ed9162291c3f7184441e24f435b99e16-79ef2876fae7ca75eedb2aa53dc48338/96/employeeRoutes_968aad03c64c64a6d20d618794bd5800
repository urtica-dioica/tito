1e358ceb65861193f24898bb29951e8d
"use strict";

/* istanbul ignore next */
function cov_2myfw9rhfc() {
  var path = "/home/kim/tito/server/src/routes/hr/employeeRoutes.ts";
  var hash = "145bd92ec3e4c7dc47c238296a5466e38c32d3c7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/routes/hr/employeeRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 29
        },
        end: {
          line: 4,
          column: 79
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 68
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "5": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 66
        }
      },
      "6": {
        start: {
          line: 8,
          column: 26
        },
        end: {
          line: 8,
          column: 88
        }
      },
      "7": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 53
        }
      },
      "8": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 38
        }
      },
      "9": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 72
        }
      },
      "10": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "11": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "12": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 122
        }
      },
      "13": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 118
        }
      },
      "14": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 120
        }
      },
      "15": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 58
        }
      },
      "16": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 123
        }
      },
      "17": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 50,
          column: 196
        }
      },
      "18": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 129
        }
      },
      "19": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 62,
          column: 145
        }
      },
      "20": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 25
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/home/kim/tito/server/src/routes/hr/employeeRoutes.ts",
      mappings: ";;AAAA,qCAAiC;AACjC,gFAA6E;AAC7E,qEAAkE;AAClE,+DAA4D;AAC5D,mEAAmG;AACnG,yFAA4J;AAC5J,sDAAyE;AAEzE,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AACxB,MAAM,kBAAkB,GAAG,IAAI,uCAAkB,EAAE,CAAC;AAEpD,gEAAgE;AAChE,MAAM,CAAC,GAAG,CAAC,2BAAY,CAAC,CAAC;AACzB,MAAM,CAAC,GAAG,CAAC,qBAAS,CAAC,CAAC;AAEtB;;;;GAIG;AACH,MAAM,CAAC,IAAI,CACT,GAAG,EACH,IAAA,uBAAY,EAAC,sCAAoB,CAAC,EAClC,kBAAkB,CAAC,cAAc,CAClC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,IAAI,CACT,OAAO,EACP,qBAAS,EACT,gCAAoB,EACpB,kBAAkB,CAAC,mBAAmB,CACvC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,GAAG,EACH,IAAA,wBAAa,EAAC,qCAAmB,CAAC,EAClC,kBAAkB,CAAC,aAAa,CACjC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,QAAQ,EACR,kBAAkB,CAAC,gBAAgB,CACpC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,MAAM,EACN,IAAA,yBAAc,EAAC,sCAAoB,CAAC,EACpC,kBAAkB,CAAC,WAAW,CAC/B,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,MAAM,EACN,IAAA,yBAAc,EAAC,sCAAoB,CAAC,EACpC,IAAA,uBAAY,EAAC,sCAAoB,CAAC,EAClC,kBAAkB,CAAC,cAAc,CAClC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,MAAM,CACX,MAAM,EACN,IAAA,yBAAc,EAAC,sCAAoB,CAAC,EACpC,kBAAkB,CAAC,cAAc,CAClC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,MAAM,CACX,kBAAkB,EAClB,IAAA,yBAAc,EAAC,sCAAoB,CAAC,EACpC,kBAAkB,CAAC,kBAAkB,CACtC,CAAC;AAEF,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["/home/kim/tito/server/src/routes/hr/employeeRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\nimport { EmployeeController } from '../../controllers/hr/employeeController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { requireHR } from '../../middleware/auth/authorize';\nimport { validateBody, validateQuery, validateParams } from '../../middleware/validation/validate';\nimport { createEmployeeSchema, updateEmployeeSchema, employeeParamsSchema, employeeQuerySchema } from '../../middleware/validation/schemas/employeeSchemas';\nimport { uploadCSV, handleCSVUploadError } from '../../config/csvUpload';\n\nconst router = Router();\nconst employeeController = new EmployeeController();\n\n// Apply authentication and HR admin authorization to all routes\nrouter.use(authenticate);\nrouter.use(requireHR);\n\n/**\n * @route POST /api/v1/hr/employees\n * @desc Create a new employee\n * @access HR Admin only\n */\nrouter.post(\n  '/',\n  validateBody(createEmployeeSchema),\n  employeeController.createEmployee\n);\n\n/**\n * @route POST /api/v1/hr/employees/bulk\n * @desc Create multiple employees from CSV file\n * @access HR Admin only\n */\nrouter.post(\n  '/bulk',\n  uploadCSV,\n  handleCSVUploadError,\n  employeeController.createBulkEmployees\n);\n\n/**\n * @route GET /api/v1/hr/employees\n * @desc List employees with filtering and pagination\n * @access HR Admin only\n */\nrouter.get(\n  '/',\n  validateQuery(employeeQuerySchema),\n  employeeController.listEmployees\n);\n\n/**\n * @route GET /api/v1/hr/employees/stats\n * @desc Get employee statistics\n * @access HR Admin only\n */\nrouter.get(\n  '/stats',\n  employeeController.getEmployeeStats\n);\n\n/**\n * @route GET /api/v1/hr/employees/:id\n * @desc Get employee by ID\n * @access HR Admin only\n */\nrouter.get(\n  '/:id',\n  validateParams(employeeParamsSchema),\n  employeeController.getEmployee\n);\n\n/**\n * @route PUT /api/v1/hr/employees/:id\n * @desc Update employee\n * @access HR Admin only\n */\nrouter.put(\n  '/:id',\n  validateParams(employeeParamsSchema),\n  validateBody(updateEmployeeSchema),\n  employeeController.updateEmployee\n);\n\n/**\n * @route DELETE /api/v1/hr/employees/:id\n * @desc Delete employee (soft delete)\n * @access HR Admin only\n */\nrouter.delete(\n  '/:id',\n  validateParams(employeeParamsSchema),\n  employeeController.deleteEmployee\n);\n\n/**\n * @route DELETE /api/v1/hr/employees/:id/hard-delete\n * @desc Hard delete employee (permanently remove from database)\n * @access HR Admin only\n */\nrouter.delete(\n  '/:id/hard-delete',\n  validateParams(employeeParamsSchema),\n  employeeController.hardDeleteEmployee\n);\n\nexport default router;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "145bd92ec3e4c7dc47c238296a5466e38c32d3c7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2myfw9rhfc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2myfw9rhfc();
cov_2myfw9rhfc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[1]++, require("express"));
const employeeController_1 =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[2]++, require("../../controllers/hr/employeeController"));
const authenticate_1 =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[3]++, require("../../middleware/auth/authenticate"));
const authorize_1 =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[4]++, require("../../middleware/auth/authorize"));
const validate_1 =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[5]++, require("../../middleware/validation/validate"));
const employeeSchemas_1 =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[6]++, require("../../middleware/validation/schemas/employeeSchemas"));
const csvUpload_1 =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[7]++, require("../../config/csvUpload"));
const router =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[8]++, (0, express_1.Router)());
const employeeController =
/* istanbul ignore next */
(cov_2myfw9rhfc().s[9]++, new employeeController_1.EmployeeController());
// Apply authentication and HR admin authorization to all routes
/* istanbul ignore next */
cov_2myfw9rhfc().s[10]++;
router.use(authenticate_1.authenticate);
/* istanbul ignore next */
cov_2myfw9rhfc().s[11]++;
router.use(authorize_1.requireHR);
/**
 * @route POST /api/v1/hr/employees
 * @desc Create a new employee
 * @access HR Admin only
 */
/* istanbul ignore next */
cov_2myfw9rhfc().s[12]++;
router.post('/', (0, validate_1.validateBody)(employeeSchemas_1.createEmployeeSchema), employeeController.createEmployee);
/**
 * @route POST /api/v1/hr/employees/bulk
 * @desc Create multiple employees from CSV file
 * @access HR Admin only
 */
/* istanbul ignore next */
cov_2myfw9rhfc().s[13]++;
router.post('/bulk', csvUpload_1.uploadCSV, csvUpload_1.handleCSVUploadError, employeeController.createBulkEmployees);
/**
 * @route GET /api/v1/hr/employees
 * @desc List employees with filtering and pagination
 * @access HR Admin only
 */
/* istanbul ignore next */
cov_2myfw9rhfc().s[14]++;
router.get('/', (0, validate_1.validateQuery)(employeeSchemas_1.employeeQuerySchema), employeeController.listEmployees);
/**
 * @route GET /api/v1/hr/employees/stats
 * @desc Get employee statistics
 * @access HR Admin only
 */
/* istanbul ignore next */
cov_2myfw9rhfc().s[15]++;
router.get('/stats', employeeController.getEmployeeStats);
/**
 * @route GET /api/v1/hr/employees/:id
 * @desc Get employee by ID
 * @access HR Admin only
 */
/* istanbul ignore next */
cov_2myfw9rhfc().s[16]++;
router.get('/:id', (0, validate_1.validateParams)(employeeSchemas_1.employeeParamsSchema), employeeController.getEmployee);
/**
 * @route PUT /api/v1/hr/employees/:id
 * @desc Update employee
 * @access HR Admin only
 */
/* istanbul ignore next */
cov_2myfw9rhfc().s[17]++;
router.put('/:id', (0, validate_1.validateParams)(employeeSchemas_1.employeeParamsSchema), (0, validate_1.validateBody)(employeeSchemas_1.updateEmployeeSchema), employeeController.updateEmployee);
/**
 * @route DELETE /api/v1/hr/employees/:id
 * @desc Delete employee (soft delete)
 * @access HR Admin only
 */
/* istanbul ignore next */
cov_2myfw9rhfc().s[18]++;
router.delete('/:id', (0, validate_1.validateParams)(employeeSchemas_1.employeeParamsSchema), employeeController.deleteEmployee);
/**
 * @route DELETE /api/v1/hr/employees/:id/hard-delete
 * @desc Hard delete employee (permanently remove from database)
 * @access HR Admin only
 */
/* istanbul ignore next */
cov_2myfw9rhfc().s[19]++;
router.delete('/:id/hard-delete', (0, validate_1.validateParams)(employeeSchemas_1.employeeParamsSchema), employeeController.hardDeleteEmployee);
/* istanbul ignore next */
cov_2myfw9rhfc().s[20]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzXzEiLCJjb3ZfMm15Znc5cmhmYyIsInMiLCJyZXF1aXJlIiwiZW1wbG95ZWVDb250cm9sbGVyXzEiLCJhdXRoZW50aWNhdGVfMSIsImF1dGhvcml6ZV8xIiwidmFsaWRhdGVfMSIsImVtcGxveWVlU2NoZW1hc18xIiwiY3N2VXBsb2FkXzEiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJlbXBsb3llZUNvbnRyb2xsZXIiLCJFbXBsb3llZUNvbnRyb2xsZXIiLCJ1c2UiLCJhdXRoZW50aWNhdGUiLCJyZXF1aXJlSFIiLCJwb3N0IiwidmFsaWRhdGVCb2R5IiwiY3JlYXRlRW1wbG95ZWVTY2hlbWEiLCJjcmVhdGVFbXBsb3llZSIsInVwbG9hZENTViIsImhhbmRsZUNTVlVwbG9hZEVycm9yIiwiY3JlYXRlQnVsa0VtcGxveWVlcyIsImdldCIsInZhbGlkYXRlUXVlcnkiLCJlbXBsb3llZVF1ZXJ5U2NoZW1hIiwibGlzdEVtcGxveWVlcyIsImdldEVtcGxveWVlU3RhdHMiLCJ2YWxpZGF0ZVBhcmFtcyIsImVtcGxveWVlUGFyYW1zU2NoZW1hIiwiZ2V0RW1wbG95ZWUiLCJwdXQiLCJ1cGRhdGVFbXBsb3llZVNjaGVtYSIsInVwZGF0ZUVtcGxveWVlIiwiZGVsZXRlIiwiZGVsZXRlRW1wbG95ZWUiLCJoYXJkRGVsZXRlRW1wbG95ZWUiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi9ob21lL2tpbS90aXRvL3NlcnZlci9zcmMvcm91dGVzL2hyL2VtcGxveWVlUm91dGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgRW1wbG95ZWVDb250cm9sbGVyIH0gZnJvbSAnLi4vLi4vY29udHJvbGxlcnMvaHIvZW1wbG95ZWVDb250cm9sbGVyJztcbmltcG9ydCB7IGF1dGhlbnRpY2F0ZSB9IGZyb20gJy4uLy4uL21pZGRsZXdhcmUvYXV0aC9hdXRoZW50aWNhdGUnO1xuaW1wb3J0IHsgcmVxdWlyZUhSIH0gZnJvbSAnLi4vLi4vbWlkZGxld2FyZS9hdXRoL2F1dGhvcml6ZSc7XG5pbXBvcnQgeyB2YWxpZGF0ZUJvZHksIHZhbGlkYXRlUXVlcnksIHZhbGlkYXRlUGFyYW1zIH0gZnJvbSAnLi4vLi4vbWlkZGxld2FyZS92YWxpZGF0aW9uL3ZhbGlkYXRlJztcbmltcG9ydCB7IGNyZWF0ZUVtcGxveWVlU2NoZW1hLCB1cGRhdGVFbXBsb3llZVNjaGVtYSwgZW1wbG95ZWVQYXJhbXNTY2hlbWEsIGVtcGxveWVlUXVlcnlTY2hlbWEgfSBmcm9tICcuLi8uLi9taWRkbGV3YXJlL3ZhbGlkYXRpb24vc2NoZW1hcy9lbXBsb3llZVNjaGVtYXMnO1xuaW1wb3J0IHsgdXBsb2FkQ1NWLCBoYW5kbGVDU1ZVcGxvYWRFcnJvciB9IGZyb20gJy4uLy4uL2NvbmZpZy9jc3ZVcGxvYWQnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbmNvbnN0IGVtcGxveWVlQ29udHJvbGxlciA9IG5ldyBFbXBsb3llZUNvbnRyb2xsZXIoKTtcblxuLy8gQXBwbHkgYXV0aGVudGljYXRpb24gYW5kIEhSIGFkbWluIGF1dGhvcml6YXRpb24gdG8gYWxsIHJvdXRlc1xucm91dGVyLnVzZShhdXRoZW50aWNhdGUpO1xucm91dGVyLnVzZShyZXF1aXJlSFIpO1xuXG4vKipcbiAqIEByb3V0ZSBQT1NUIC9hcGkvdjEvaHIvZW1wbG95ZWVzXG4gKiBAZGVzYyBDcmVhdGUgYSBuZXcgZW1wbG95ZWVcbiAqIEBhY2Nlc3MgSFIgQWRtaW4gb25seVxuICovXG5yb3V0ZXIucG9zdChcbiAgJy8nLFxuICB2YWxpZGF0ZUJvZHkoY3JlYXRlRW1wbG95ZWVTY2hlbWEpLFxuICBlbXBsb3llZUNvbnRyb2xsZXIuY3JlYXRlRW1wbG95ZWVcbik7XG5cbi8qKlxuICogQHJvdXRlIFBPU1QgL2FwaS92MS9oci9lbXBsb3llZXMvYnVsa1xuICogQGRlc2MgQ3JlYXRlIG11bHRpcGxlIGVtcGxveWVlcyBmcm9tIENTViBmaWxlXG4gKiBAYWNjZXNzIEhSIEFkbWluIG9ubHlcbiAqL1xucm91dGVyLnBvc3QoXG4gICcvYnVsaycsXG4gIHVwbG9hZENTVixcbiAgaGFuZGxlQ1NWVXBsb2FkRXJyb3IsXG4gIGVtcGxveWVlQ29udHJvbGxlci5jcmVhdGVCdWxrRW1wbG95ZWVzXG4pO1xuXG4vKipcbiAqIEByb3V0ZSBHRVQgL2FwaS92MS9oci9lbXBsb3llZXNcbiAqIEBkZXNjIExpc3QgZW1wbG95ZWVzIHdpdGggZmlsdGVyaW5nIGFuZCBwYWdpbmF0aW9uXG4gKiBAYWNjZXNzIEhSIEFkbWluIG9ubHlcbiAqL1xucm91dGVyLmdldChcbiAgJy8nLFxuICB2YWxpZGF0ZVF1ZXJ5KGVtcGxveWVlUXVlcnlTY2hlbWEpLFxuICBlbXBsb3llZUNvbnRyb2xsZXIubGlzdEVtcGxveWVlc1xuKTtcblxuLyoqXG4gKiBAcm91dGUgR0VUIC9hcGkvdjEvaHIvZW1wbG95ZWVzL3N0YXRzXG4gKiBAZGVzYyBHZXQgZW1wbG95ZWUgc3RhdGlzdGljc1xuICogQGFjY2VzcyBIUiBBZG1pbiBvbmx5XG4gKi9cbnJvdXRlci5nZXQoXG4gICcvc3RhdHMnLFxuICBlbXBsb3llZUNvbnRyb2xsZXIuZ2V0RW1wbG95ZWVTdGF0c1xuKTtcblxuLyoqXG4gKiBAcm91dGUgR0VUIC9hcGkvdjEvaHIvZW1wbG95ZWVzLzppZFxuICogQGRlc2MgR2V0IGVtcGxveWVlIGJ5IElEXG4gKiBAYWNjZXNzIEhSIEFkbWluIG9ubHlcbiAqL1xucm91dGVyLmdldChcbiAgJy86aWQnLFxuICB2YWxpZGF0ZVBhcmFtcyhlbXBsb3llZVBhcmFtc1NjaGVtYSksXG4gIGVtcGxveWVlQ29udHJvbGxlci5nZXRFbXBsb3llZVxuKTtcblxuLyoqXG4gKiBAcm91dGUgUFVUIC9hcGkvdjEvaHIvZW1wbG95ZWVzLzppZFxuICogQGRlc2MgVXBkYXRlIGVtcGxveWVlXG4gKiBAYWNjZXNzIEhSIEFkbWluIG9ubHlcbiAqL1xucm91dGVyLnB1dChcbiAgJy86aWQnLFxuICB2YWxpZGF0ZVBhcmFtcyhlbXBsb3llZVBhcmFtc1NjaGVtYSksXG4gIHZhbGlkYXRlQm9keSh1cGRhdGVFbXBsb3llZVNjaGVtYSksXG4gIGVtcGxveWVlQ29udHJvbGxlci51cGRhdGVFbXBsb3llZVxuKTtcblxuLyoqXG4gKiBAcm91dGUgREVMRVRFIC9hcGkvdjEvaHIvZW1wbG95ZWVzLzppZFxuICogQGRlc2MgRGVsZXRlIGVtcGxveWVlIChzb2Z0IGRlbGV0ZSlcbiAqIEBhY2Nlc3MgSFIgQWRtaW4gb25seVxuICovXG5yb3V0ZXIuZGVsZXRlKFxuICAnLzppZCcsXG4gIHZhbGlkYXRlUGFyYW1zKGVtcGxveWVlUGFyYW1zU2NoZW1hKSxcbiAgZW1wbG95ZWVDb250cm9sbGVyLmRlbGV0ZUVtcGxveWVlXG4pO1xuXG4vKipcbiAqIEByb3V0ZSBERUxFVEUgL2FwaS92MS9oci9lbXBsb3llZXMvOmlkL2hhcmQtZGVsZXRlXG4gKiBAZGVzYyBIYXJkIGRlbGV0ZSBlbXBsb3llZSAocGVybWFuZW50bHkgcmVtb3ZlIGZyb20gZGF0YWJhc2UpXG4gKiBAYWNjZXNzIEhSIEFkbWluIG9ubHlcbiAqL1xucm91dGVyLmRlbGV0ZShcbiAgJy86aWQvaGFyZC1kZWxldGUnLFxuICB2YWxpZGF0ZVBhcmFtcyhlbXBsb3llZVBhcmFtc1NjaGVtYSksXG4gIGVtcGxveWVlQ29udHJvbGxlci5oYXJkRGVsZXRlRW1wbG95ZWVcbik7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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