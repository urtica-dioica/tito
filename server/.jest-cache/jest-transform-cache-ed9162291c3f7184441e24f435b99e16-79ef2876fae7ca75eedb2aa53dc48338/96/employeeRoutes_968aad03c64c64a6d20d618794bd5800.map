{"version":3,"names":["express_1","cov_2myfw9rhfc","s","require","employeeController_1","authenticate_1","authorize_1","validate_1","employeeSchemas_1","csvUpload_1","router","Router","employeeController","EmployeeController","use","authenticate","requireHR","post","validateBody","createEmployeeSchema","createEmployee","uploadCSV","handleCSVUploadError","createBulkEmployees","get","validateQuery","employeeQuerySchema","listEmployees","getEmployeeStats","validateParams","employeeParamsSchema","getEmployee","put","updateEmployeeSchema","updateEmployee","delete","deleteEmployee","hardDeleteEmployee","exports","default"],"sources":["/home/kim/tito/server/src/routes/hr/employeeRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { EmployeeController } from '../../controllers/hr/employeeController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { requireHR } from '../../middleware/auth/authorize';\nimport { validateBody, validateQuery, validateParams } from '../../middleware/validation/validate';\nimport { createEmployeeSchema, updateEmployeeSchema, employeeParamsSchema, employeeQuerySchema } from '../../middleware/validation/schemas/employeeSchemas';\nimport { uploadCSV, handleCSVUploadError } from '../../config/csvUpload';\n\nconst router = Router();\nconst employeeController = new EmployeeController();\n\n// Apply authentication and HR admin authorization to all routes\nrouter.use(authenticate);\nrouter.use(requireHR);\n\n/**\n * @route POST /api/v1/hr/employees\n * @desc Create a new employee\n * @access HR Admin only\n */\nrouter.post(\n  '/',\n  validateBody(createEmployeeSchema),\n  employeeController.createEmployee\n);\n\n/**\n * @route POST /api/v1/hr/employees/bulk\n * @desc Create multiple employees from CSV file\n * @access HR Admin only\n */\nrouter.post(\n  '/bulk',\n  uploadCSV,\n  handleCSVUploadError,\n  employeeController.createBulkEmployees\n);\n\n/**\n * @route GET /api/v1/hr/employees\n * @desc List employees with filtering and pagination\n * @access HR Admin only\n */\nrouter.get(\n  '/',\n  validateQuery(employeeQuerySchema),\n  employeeController.listEmployees\n);\n\n/**\n * @route GET /api/v1/hr/employees/stats\n * @desc Get employee statistics\n * @access HR Admin only\n */\nrouter.get(\n  '/stats',\n  employeeController.getEmployeeStats\n);\n\n/**\n * @route GET /api/v1/hr/employees/:id\n * @desc Get employee by ID\n * @access HR Admin only\n */\nrouter.get(\n  '/:id',\n  validateParams(employeeParamsSchema),\n  employeeController.getEmployee\n);\n\n/**\n * @route PUT /api/v1/hr/employees/:id\n * @desc Update employee\n * @access HR Admin only\n */\nrouter.put(\n  '/:id',\n  validateParams(employeeParamsSchema),\n  validateBody(updateEmployeeSchema),\n  employeeController.updateEmployee\n);\n\n/**\n * @route DELETE /api/v1/hr/employees/:id\n * @desc Delete employee (soft delete)\n * @access HR Admin only\n */\nrouter.delete(\n  '/:id',\n  validateParams(employeeParamsSchema),\n  employeeController.deleteEmployee\n);\n\n/**\n * @route DELETE /api/v1/hr/employees/:id/hard-delete\n * @desc Hard delete employee (permanently remove from database)\n * @access HR Admin only\n */\nrouter.delete(\n  '/:id/hard-delete',\n  validateParams(employeeParamsSchema),\n  employeeController.hardDeleteEmployee\n);\n\nexport default router;"],"mappings":"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","ignoreList":[]}