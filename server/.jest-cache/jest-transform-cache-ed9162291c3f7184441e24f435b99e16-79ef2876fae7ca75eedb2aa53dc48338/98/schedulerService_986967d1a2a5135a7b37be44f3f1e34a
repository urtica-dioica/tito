cdc972dddaa0e60344e41cd63cac1a31
"use strict";

/* istanbul ignore next */
function cov_15qka3uz2() {
  var path = "/home/kim/tito/server/src/services/scheduler/schedulerService.ts";
  var hash = "50a181924355dbe6e30ebd05e19adb83d9844c4c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/services/scheduler/schedulerService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 61
        }
      },
      "39": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "40": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 63
        }
      },
      "41": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "42": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "43": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "44": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 63
        }
      },
      "45": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 41
        }
      },
      "46": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "47": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 74
        }
      },
      "48": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "49": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "50": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 63
        }
      },
      "51": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 37
        }
      },
      "52": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 39
        }
      },
      "53": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 72
        }
      },
      "54": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "55": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 70
        }
      },
      "56": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "57": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 31
        }
      },
      "58": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 63
        }
      },
      "59": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "60": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 34
        }
      },
      "61": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 71
        }
      },
      "62": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 26
        }
      },
      "63": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 72
        }
      },
      "64": {
        start: {
          line: 91,
          column: 24
        },
        end: {
          line: 91,
          column: 40
        }
      },
      "65": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "66": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 93,
          column: 34
        }
      },
      "67": {
        start: {
          line: 94,
          column: 28
        },
        end: {
          line: 94,
          column: 41
        }
      },
      "68": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 41
        }
      },
      "69": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "70": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "71": {
        start: {
          line: 100,
          column: 34
        },
        end: {
          line: 100,
          column: 67
        }
      },
      "72": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 112,
          column: 29
        }
      },
      "73": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "74": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 82
        }
      },
      "75": {
        start: {
          line: 104,
          column: 41
        },
        end: {
          line: 104,
          column: 98
        }
      },
      "76": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 112
        }
      },
      "77": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 86
        }
      },
      "78": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 31
        }
      },
      "79": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 44
        }
      },
      "80": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 91
        }
      },
      "81": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 23
        }
      },
      "82": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 43
        }
      },
      "83": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "84": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 124,
          column: 34
        }
      },
      "85": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 125,
          column: 41
        }
      },
      "86": {
        start: {
          line: 127,
          column: 36
        },
        end: {
          line: 127,
          column: 58
        }
      },
      "87": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 91
        }
      },
      "88": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 41
        }
      },
      "89": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 130,
          column: 67
        }
      },
      "90": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 145,
          column: 29
        }
      },
      "91": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 142,
          column: 17
        }
      },
      "92": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 85
        }
      },
      "93": {
        start: {
          line: 135,
          column: 45
        },
        end: {
          line: 135,
          column: 127
        }
      },
      "94": {
        start: {
          line: 135,
          column: 80
        },
        end: {
          line: 135,
          column: 126
        }
      },
      "95": {
        start: {
          line: 136,
          column: 41
        },
        end: {
          line: 136,
          column: 59
        }
      },
      "96": {
        start: {
          line: 137,
          column: 41
        },
        end: {
          line: 137,
          column: 78
        }
      },
      "97": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 117
        }
      },
      "98": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 89
        }
      },
      "99": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 31
        }
      },
      "100": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 44
        }
      },
      "101": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 94
        }
      },
      "102": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 23
        }
      },
      "103": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "104": {
        start: {
          line: 157,
          column: 60
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "105": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "106": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 75
        }
      },
      "107": {
        start: {
          line: 170,
          column: 33
        },
        end: {
          line: 170,
          column: 90
        }
      },
      "108": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 101
        }
      },
      "109": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 32
        }
      },
      "110": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 75
        }
      },
      "111": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 24
        }
      },
      "112": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "113": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 78
        }
      },
      "114": {
        start: {
          line: 185,
          column: 37
        },
        end: {
          line: 185,
          column: 119
        }
      },
      "115": {
        start: {
          line: 185,
          column: 72
        },
        end: {
          line: 185,
          column: 118
        }
      },
      "116": {
        start: {
          line: 186,
          column: 33
        },
        end: {
          line: 186,
          column: 51
        }
      },
      "117": {
        start: {
          line: 187,
          column: 33
        },
        end: {
          line: 187,
          column: 78
        }
      },
      "118": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 106
        }
      },
      "119": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 32
        }
      },
      "120": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 78
        }
      },
      "121": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 24
        }
      },
      "122": {
        start: {
          line: 197,
          column: 0
        },
        end: {
          line: 197,
          column: 44
        }
      },
      "123": {
        start: {
          line: 199,
          column: 0
        },
        end: {
          line: 199,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 43
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 25
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 56
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 72
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 27
          }
        },
        loc: {
          start: {
            line: 80,
            column: 48
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 80
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 90
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 92,
            column: 29
          },
          end: {
            line: 92,
            column: 30
          }
        },
        loc: {
          start: {
            line: 92,
            column: 35
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 92
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 101,
            column: 39
          },
          end: {
            line: 101,
            column: 40
          }
        },
        loc: {
          start: {
            line: 101,
            column: 51
          },
          end: {
            line: 112,
            column: 13
          }
        },
        line: 101
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 30
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 121
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 123,
            column: 29
          },
          end: {
            line: 123,
            column: 30
          }
        },
        loc: {
          start: {
            line: 123,
            column: 35
          },
          end: {
            line: 148,
            column: 9
          }
        },
        line: 123
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 131,
            column: 39
          },
          end: {
            line: 131,
            column: 40
          }
        },
        loc: {
          start: {
            line: 131,
            column: 51
          },
          end: {
            line: 145,
            column: 13
          }
        },
        line: 131
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 135,
            column: 74
          },
          end: {
            line: 135,
            column: 75
          }
        },
        loc: {
          start: {
            line: 135,
            column: 80
          },
          end: {
            line: 135,
            column: 126
          }
        },
        line: 135
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 154
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 157,
            column: 51
          },
          end: {
            line: 157,
            column: 52
          }
        },
        loc: {
          start: {
            line: 157,
            column: 60
          },
          end: {
            line: 161,
            column: 13
          }
        },
        line: 157
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 33
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 167
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 50
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 182
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 185,
            column: 66
          },
          end: {
            line: 185,
            column: 67
          }
        },
        loc: {
          start: {
            line: 185,
            column: 72
          },
          end: {
            line: 185,
            column: 118
          }
        },
        line: 185
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "21": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "22": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "23": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "24": {
        loc: {
          start: {
            line: 128,
            column: 45
          },
          end: {
            line: 128,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 69
          },
          end: {
            line: 128,
            column: 70
          }
        }, {
          start: {
            line: 128,
            column: 73
          },
          end: {
            line: 128,
            column: 88
          }
        }],
        line: 128
      },
      "25": {
        loc: {
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 182,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 182,
            column: 46
          },
          end: {
            line: 182,
            column: 48
          }
        }],
        line: 182
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/services/scheduler/schedulerService.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/services/scheduler/schedulerService.ts"],
      sourcesContent: ["import { ImageProcessor } from '../../utils/imageProcessor';\nimport logger from '../../utils/logger';\n\nexport class SchedulerService {\n  private static instance: SchedulerService;\n  private jobs: Map<string, NodeJS.Timeout> = new Map();\n  private isRunning = false;\n\n  private constructor() {}\n\n  static getInstance(): SchedulerService {\n    if (!SchedulerService.instance) {\n      SchedulerService.instance = new SchedulerService();\n    }\n    return SchedulerService.instance;\n  }\n\n  /**\n   * Start the scheduler service\n   */\n  start(): void {\n    if (this.isRunning) {\n      logger.warn('Scheduler service is already running');\n      return;\n    }\n\n    this.isRunning = true;\n    logger.info('Starting scheduler service...');\n\n    // Schedule selfie cleanup to run daily at 2:00 AM\n    this.scheduleSelfieCleanup();\n    \n    // Schedule audit log cleanup to run weekly on Sunday at 3:00 AM\n    this.scheduleAuditLogCleanup();\n\n    logger.info('Scheduler service started successfully');\n  }\n\n  /**\n   * Stop the scheduler service\n   */\n  stop(): void {\n    if (!this.isRunning) {\n      logger.warn('Scheduler service is not running');\n      return;\n    }\n\n    this.isRunning = false;\n    logger.info('Stopping scheduler service...');\n\n    // Clear all scheduled jobs\n    this.jobs.forEach((timeout, jobName) => {\n      clearTimeout(timeout);\n      logger.info(`Stopped scheduled job: ${jobName}`);\n    });\n\n    this.jobs.clear();\n    logger.info('Scheduler service stopped successfully');\n  }\n\n  /**\n   * Schedule selfie cleanup to run daily\n   */\n  private scheduleSelfieCleanup(): void {\n    const jobName = 'selfie-cleanup';\n    \n    const scheduleNext = () => {\n      const now = new Date();\n      const nextRun = new Date(now);\n      nextRun.setHours(2, 0, 0, 0); // 2:00 AM\n      \n      // If it's already past 2:00 AM today, schedule for tomorrow\n      if (now.getHours() >= 2) {\n        nextRun.setDate(nextRun.getDate() + 1);\n      }\n\n      const timeUntilNext = nextRun.getTime() - now.getTime();\n      \n      const timeout = setTimeout(async () => {\n        try {\n          logger.info('Starting scheduled selfie cleanup...');\n          const deletedCount = await ImageProcessor.cleanupOldSelfies();\n          logger.info(`Scheduled selfie cleanup completed. Deleted ${deletedCount} files.`);\n        } catch (error) {\n          logger.error('Scheduled selfie cleanup failed:', error);\n        }\n        \n        // Schedule the next run\n        scheduleNext();\n      }, timeUntilNext);\n\n      this.jobs.set(jobName, timeout);\n      logger.info(`Scheduled selfie cleanup for ${nextRun.toISOString()}`);\n    };\n\n    scheduleNext();\n  }\n\n  /**\n   * Schedule audit log cleanup to run weekly\n   */\n  private scheduleAuditLogCleanup(): void {\n    const jobName = 'audit-log-cleanup';\n    \n    const scheduleNext = () => {\n      const now = new Date();\n      const nextRun = new Date(now);\n      \n      // Find next Sunday at 3:00 AM\n      const daysUntilSunday = (7 - now.getDay()) % 7;\n      nextRun.setDate(now.getDate() + (daysUntilSunday === 0 ? 7 : daysUntilSunday));\n      nextRun.setHours(3, 0, 0, 0); // 3:00 AM\n      \n      const timeUntilNext = nextRun.getTime() - now.getTime();\n      \n      const timeout = setTimeout(async () => {\n        try {\n          logger.info('Starting scheduled audit log cleanup...');\n          // Import here to avoid circular dependencies\n          const { AuditService } = await import('../audit/auditService');\n          const auditService = new AuditService();\n          const deletedCount = await auditService.cleanupOldLogs(90); // Keep 90 days\n          logger.info(`Scheduled audit log cleanup completed. Deleted ${deletedCount} records.`);\n        } catch (error) {\n          logger.error('Scheduled audit log cleanup failed:', error);\n        }\n        \n        // Schedule the next run\n        scheduleNext();\n      }, timeUntilNext);\n\n      this.jobs.set(jobName, timeout);\n      logger.info(`Scheduled audit log cleanup for ${nextRun.toISOString()}`);\n    };\n\n    scheduleNext();\n  }\n\n  /**\n   * Get status of all scheduled jobs\n   */\n  getStatus(): {\n    isRunning: boolean;\n    jobs: Array<{\n      name: string;\n      nextRun?: string;\n    }>;\n  } {\n    return {\n      isRunning: this.isRunning,\n      jobs: Array.from(this.jobs.keys()).map(name => ({\n        name,\n        // Note: We can't easily get the next run time from setTimeout\n        // This would require more complex scheduling logic\n      }))\n    };\n  }\n\n  /**\n   * Manually trigger selfie cleanup\n   */\n  async triggerSelfieCleanup(): Promise<number> {\n    try {\n      logger.info('Manually triggering selfie cleanup...');\n      const deletedCount = await ImageProcessor.cleanupOldSelfies();\n      logger.info(`Manual selfie cleanup completed. Deleted ${deletedCount} files.`);\n      return deletedCount;\n    } catch (error) {\n      logger.error('Manual selfie cleanup failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Manually trigger audit log cleanup\n   */\n  async triggerAuditLogCleanup(daysToKeep: number = 90): Promise<number> {\n    try {\n      logger.info('Manually triggering audit log cleanup...');\n      const { AuditService } = await import('../audit/auditService');\n      const auditService = new AuditService();\n      const deletedCount = await auditService.cleanupOldLogs(daysToKeep);\n      logger.info(`Manual audit log cleanup completed. Deleted ${deletedCount} records.`);\n      return deletedCount;\n    } catch (error) {\n      logger.error('Manual audit log cleanup failed:', error);\n      throw error;\n    }\n  }\n}\n\n// Export singleton instance\nexport const schedulerService = SchedulerService.getInstance();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "50a181924355dbe6e30ebd05e19adb83d9844c4c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15qka3uz2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15qka3uz2();
var __createBinding =
/* istanbul ignore next */
(cov_15qka3uz2().s[0]++,
/* istanbul ignore next */
(cov_15qka3uz2().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_15qka3uz2().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_15qka3uz2().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_15qka3uz2().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_15qka3uz2().f[0]++;
  cov_15qka3uz2().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_15qka3uz2().b[2][0]++;
    cov_15qka3uz2().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_15qka3uz2().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_15qka3uz2().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_15qka3uz2().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_15qka3uz2().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_15qka3uz2().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_15qka3uz2().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_15qka3uz2().b[5][1]++,
  /* istanbul ignore next */
  (cov_15qka3uz2().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_15qka3uz2().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_15qka3uz2().b[3][0]++;
    cov_15qka3uz2().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_15qka3uz2().f[1]++;
        cov_15qka3uz2().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_15qka3uz2().b[3][1]++;
  }
  cov_15qka3uz2().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_15qka3uz2().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_15qka3uz2().f[2]++;
  cov_15qka3uz2().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_15qka3uz2().b[7][0]++;
    cov_15qka3uz2().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_15qka3uz2().b[7][1]++;
  }
  cov_15qka3uz2().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_15qka3uz2().s[11]++,
/* istanbul ignore next */
(cov_15qka3uz2().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_15qka3uz2().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_15qka3uz2().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_15qka3uz2().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_15qka3uz2().f[3]++;
  cov_15qka3uz2().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_15qka3uz2().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_15qka3uz2().f[4]++;
  cov_15qka3uz2().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_15qka3uz2().s[14]++,
/* istanbul ignore next */
(cov_15qka3uz2().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_15qka3uz2().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_15qka3uz2().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_15qka3uz2().f[5]++;
  cov_15qka3uz2().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_15qka3uz2().f[6]++;
    cov_15qka3uz2().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_15qka3uz2().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_15qka3uz2().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_15qka3uz2().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[17]++, []);
      /* istanbul ignore next */
      cov_15qka3uz2().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_15qka3uz2().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_15qka3uz2().b[12][0]++;
          cov_15qka3uz2().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_15qka3uz2().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_15qka3uz2().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_15qka3uz2().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_15qka3uz2().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_15qka3uz2().f[8]++;
    cov_15qka3uz2().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_15qka3uz2().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_15qka3uz2().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_15qka3uz2().b[13][0]++;
      cov_15qka3uz2().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_15qka3uz2().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_15qka3uz2().s[26]++, {});
    /* istanbul ignore next */
    cov_15qka3uz2().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_15qka3uz2().b[15][0]++;
      cov_15qka3uz2().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_15qka3uz2().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_15qka3uz2().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_15qka3uz2().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_15qka3uz2().b[16][0]++;
          cov_15qka3uz2().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_15qka3uz2().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_15qka3uz2().b[15][1]++;
    }
    cov_15qka3uz2().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_15qka3uz2().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_15qka3uz2().s[35]++,
/* istanbul ignore next */
(cov_15qka3uz2().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_15qka3uz2().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_15qka3uz2().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_15qka3uz2().f[9]++;
  cov_15qka3uz2().s[36]++;
  return /* istanbul ignore next */(cov_15qka3uz2().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_15qka3uz2().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_15qka3uz2().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_15qka3uz2().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_15qka3uz2().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_15qka3uz2().s[38]++;
exports.schedulerService = exports.SchedulerService = void 0;
const imageProcessor_1 =
/* istanbul ignore next */
(cov_15qka3uz2().s[39]++, require("../../utils/imageProcessor"));
const logger_1 =
/* istanbul ignore next */
(cov_15qka3uz2().s[40]++, __importDefault(require("../../utils/logger")));
class SchedulerService {
  constructor() {
    /* istanbul ignore next */
    cov_15qka3uz2().f[10]++;
    cov_15qka3uz2().s[41]++;
    this.jobs = new Map();
    /* istanbul ignore next */
    cov_15qka3uz2().s[42]++;
    this.isRunning = false;
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_15qka3uz2().f[11]++;
    cov_15qka3uz2().s[43]++;
    if (!SchedulerService.instance) {
      /* istanbul ignore next */
      cov_15qka3uz2().b[20][0]++;
      cov_15qka3uz2().s[44]++;
      SchedulerService.instance = new SchedulerService();
    } else
    /* istanbul ignore next */
    {
      cov_15qka3uz2().b[20][1]++;
    }
    cov_15qka3uz2().s[45]++;
    return SchedulerService.instance;
  }
  /**
   * Start the scheduler service
   */
  start() {
    /* istanbul ignore next */
    cov_15qka3uz2().f[12]++;
    cov_15qka3uz2().s[46]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_15qka3uz2().b[21][0]++;
      cov_15qka3uz2().s[47]++;
      logger_1.default.warn('Scheduler service is already running');
      /* istanbul ignore next */
      cov_15qka3uz2().s[48]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_15qka3uz2().b[21][1]++;
    }
    cov_15qka3uz2().s[49]++;
    this.isRunning = true;
    /* istanbul ignore next */
    cov_15qka3uz2().s[50]++;
    logger_1.default.info('Starting scheduler service...');
    // Schedule selfie cleanup to run daily at 2:00 AM
    /* istanbul ignore next */
    cov_15qka3uz2().s[51]++;
    this.scheduleSelfieCleanup();
    // Schedule audit log cleanup to run weekly on Sunday at 3:00 AM
    /* istanbul ignore next */
    cov_15qka3uz2().s[52]++;
    this.scheduleAuditLogCleanup();
    /* istanbul ignore next */
    cov_15qka3uz2().s[53]++;
    logger_1.default.info('Scheduler service started successfully');
  }
  /**
   * Stop the scheduler service
   */
  stop() {
    /* istanbul ignore next */
    cov_15qka3uz2().f[13]++;
    cov_15qka3uz2().s[54]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_15qka3uz2().b[22][0]++;
      cov_15qka3uz2().s[55]++;
      logger_1.default.warn('Scheduler service is not running');
      /* istanbul ignore next */
      cov_15qka3uz2().s[56]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_15qka3uz2().b[22][1]++;
    }
    cov_15qka3uz2().s[57]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_15qka3uz2().s[58]++;
    logger_1.default.info('Stopping scheduler service...');
    // Clear all scheduled jobs
    /* istanbul ignore next */
    cov_15qka3uz2().s[59]++;
    this.jobs.forEach((timeout, jobName) => {
      /* istanbul ignore next */
      cov_15qka3uz2().f[14]++;
      cov_15qka3uz2().s[60]++;
      clearTimeout(timeout);
      /* istanbul ignore next */
      cov_15qka3uz2().s[61]++;
      logger_1.default.info(`Stopped scheduled job: ${jobName}`);
    });
    /* istanbul ignore next */
    cov_15qka3uz2().s[62]++;
    this.jobs.clear();
    /* istanbul ignore next */
    cov_15qka3uz2().s[63]++;
    logger_1.default.info('Scheduler service stopped successfully');
  }
  /**
   * Schedule selfie cleanup to run daily
   */
  scheduleSelfieCleanup() {
    /* istanbul ignore next */
    cov_15qka3uz2().f[15]++;
    const jobName =
    /* istanbul ignore next */
    (cov_15qka3uz2().s[64]++, 'selfie-cleanup');
    /* istanbul ignore next */
    cov_15qka3uz2().s[65]++;
    const scheduleNext = () => {
      /* istanbul ignore next */
      cov_15qka3uz2().f[16]++;
      const now =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[66]++, new Date());
      const nextRun =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[67]++, new Date(now));
      /* istanbul ignore next */
      cov_15qka3uz2().s[68]++;
      nextRun.setHours(2, 0, 0, 0); // 2:00 AM
      // If it's already past 2:00 AM today, schedule for tomorrow
      /* istanbul ignore next */
      cov_15qka3uz2().s[69]++;
      if (now.getHours() >= 2) {
        /* istanbul ignore next */
        cov_15qka3uz2().b[23][0]++;
        cov_15qka3uz2().s[70]++;
        nextRun.setDate(nextRun.getDate() + 1);
      } else
      /* istanbul ignore next */
      {
        cov_15qka3uz2().b[23][1]++;
      }
      const timeUntilNext =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[71]++, nextRun.getTime() - now.getTime());
      const timeout =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[72]++, setTimeout(async () => {
        /* istanbul ignore next */
        cov_15qka3uz2().f[17]++;
        cov_15qka3uz2().s[73]++;
        try {
          /* istanbul ignore next */
          cov_15qka3uz2().s[74]++;
          logger_1.default.info('Starting scheduled selfie cleanup...');
          const deletedCount =
          /* istanbul ignore next */
          (cov_15qka3uz2().s[75]++, await imageProcessor_1.ImageProcessor.cleanupOldSelfies());
          /* istanbul ignore next */
          cov_15qka3uz2().s[76]++;
          logger_1.default.info(`Scheduled selfie cleanup completed. Deleted ${deletedCount} files.`);
        } catch (error) {
          /* istanbul ignore next */
          cov_15qka3uz2().s[77]++;
          logger_1.default.error('Scheduled selfie cleanup failed:', error);
        }
        // Schedule the next run
        /* istanbul ignore next */
        cov_15qka3uz2().s[78]++;
        scheduleNext();
      }, timeUntilNext));
      /* istanbul ignore next */
      cov_15qka3uz2().s[79]++;
      this.jobs.set(jobName, timeout);
      /* istanbul ignore next */
      cov_15qka3uz2().s[80]++;
      logger_1.default.info(`Scheduled selfie cleanup for ${nextRun.toISOString()}`);
    };
    /* istanbul ignore next */
    cov_15qka3uz2().s[81]++;
    scheduleNext();
  }
  /**
   * Schedule audit log cleanup to run weekly
   */
  scheduleAuditLogCleanup() {
    /* istanbul ignore next */
    cov_15qka3uz2().f[18]++;
    const jobName =
    /* istanbul ignore next */
    (cov_15qka3uz2().s[82]++, 'audit-log-cleanup');
    /* istanbul ignore next */
    cov_15qka3uz2().s[83]++;
    const scheduleNext = () => {
      /* istanbul ignore next */
      cov_15qka3uz2().f[19]++;
      const now =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[84]++, new Date());
      const nextRun =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[85]++, new Date(now));
      // Find next Sunday at 3:00 AM
      const daysUntilSunday =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[86]++, (7 - now.getDay()) % 7);
      /* istanbul ignore next */
      cov_15qka3uz2().s[87]++;
      nextRun.setDate(now.getDate() + (daysUntilSunday === 0 ?
      /* istanbul ignore next */
      (cov_15qka3uz2().b[24][0]++, 7) :
      /* istanbul ignore next */
      (cov_15qka3uz2().b[24][1]++, daysUntilSunday)));
      /* istanbul ignore next */
      cov_15qka3uz2().s[88]++;
      nextRun.setHours(3, 0, 0, 0); // 3:00 AM
      const timeUntilNext =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[89]++, nextRun.getTime() - now.getTime());
      const timeout =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[90]++, setTimeout(async () => {
        /* istanbul ignore next */
        cov_15qka3uz2().f[20]++;
        cov_15qka3uz2().s[91]++;
        try {
          /* istanbul ignore next */
          cov_15qka3uz2().s[92]++;
          logger_1.default.info('Starting scheduled audit log cleanup...');
          // Import here to avoid circular dependencies
          const {
            AuditService
          } =
          /* istanbul ignore next */
          (cov_15qka3uz2().s[93]++, await Promise.resolve().then(() => {
            /* istanbul ignore next */
            cov_15qka3uz2().f[21]++;
            cov_15qka3uz2().s[94]++;
            return __importStar(require('../audit/auditService'));
          }));
          const auditService =
          /* istanbul ignore next */
          (cov_15qka3uz2().s[95]++, new AuditService());
          const deletedCount =
          /* istanbul ignore next */
          (cov_15qka3uz2().s[96]++, await auditService.cleanupOldLogs(90)); // Keep 90 days
          /* istanbul ignore next */
          cov_15qka3uz2().s[97]++;
          logger_1.default.info(`Scheduled audit log cleanup completed. Deleted ${deletedCount} records.`);
        } catch (error) {
          /* istanbul ignore next */
          cov_15qka3uz2().s[98]++;
          logger_1.default.error('Scheduled audit log cleanup failed:', error);
        }
        // Schedule the next run
        /* istanbul ignore next */
        cov_15qka3uz2().s[99]++;
        scheduleNext();
      }, timeUntilNext));
      /* istanbul ignore next */
      cov_15qka3uz2().s[100]++;
      this.jobs.set(jobName, timeout);
      /* istanbul ignore next */
      cov_15qka3uz2().s[101]++;
      logger_1.default.info(`Scheduled audit log cleanup for ${nextRun.toISOString()}`);
    };
    /* istanbul ignore next */
    cov_15qka3uz2().s[102]++;
    scheduleNext();
  }
  /**
   * Get status of all scheduled jobs
   */
  getStatus() {
    /* istanbul ignore next */
    cov_15qka3uz2().f[22]++;
    cov_15qka3uz2().s[103]++;
    return {
      isRunning: this.isRunning,
      jobs: Array.from(this.jobs.keys()).map(name => {
        /* istanbul ignore next */
        cov_15qka3uz2().f[23]++;
        cov_15qka3uz2().s[104]++;
        return {
          name
          // Note: We can't easily get the next run time from setTimeout
          // This would require more complex scheduling logic
        };
      })
    };
  }
  /**
   * Manually trigger selfie cleanup
   */
  async triggerSelfieCleanup() {
    /* istanbul ignore next */
    cov_15qka3uz2().f[24]++;
    cov_15qka3uz2().s[105]++;
    try {
      /* istanbul ignore next */
      cov_15qka3uz2().s[106]++;
      logger_1.default.info('Manually triggering selfie cleanup...');
      const deletedCount =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[107]++, await imageProcessor_1.ImageProcessor.cleanupOldSelfies());
      /* istanbul ignore next */
      cov_15qka3uz2().s[108]++;
      logger_1.default.info(`Manual selfie cleanup completed. Deleted ${deletedCount} files.`);
      /* istanbul ignore next */
      cov_15qka3uz2().s[109]++;
      return deletedCount;
    } catch (error) {
      /* istanbul ignore next */
      cov_15qka3uz2().s[110]++;
      logger_1.default.error('Manual selfie cleanup failed:', error);
      /* istanbul ignore next */
      cov_15qka3uz2().s[111]++;
      throw error;
    }
  }
  /**
   * Manually trigger audit log cleanup
   */
  async triggerAuditLogCleanup(daysToKeep =
  /* istanbul ignore next */
  (cov_15qka3uz2().b[25][0]++, 90)) {
    /* istanbul ignore next */
    cov_15qka3uz2().f[25]++;
    cov_15qka3uz2().s[112]++;
    try {
      /* istanbul ignore next */
      cov_15qka3uz2().s[113]++;
      logger_1.default.info('Manually triggering audit log cleanup...');
      const {
        AuditService
      } =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[114]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_15qka3uz2().f[26]++;
        cov_15qka3uz2().s[115]++;
        return __importStar(require('../audit/auditService'));
      }));
      const auditService =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[116]++, new AuditService());
      const deletedCount =
      /* istanbul ignore next */
      (cov_15qka3uz2().s[117]++, await auditService.cleanupOldLogs(daysToKeep));
      /* istanbul ignore next */
      cov_15qka3uz2().s[118]++;
      logger_1.default.info(`Manual audit log cleanup completed. Deleted ${deletedCount} records.`);
      /* istanbul ignore next */
      cov_15qka3uz2().s[119]++;
      return deletedCount;
    } catch (error) {
      /* istanbul ignore next */
      cov_15qka3uz2().s[120]++;
      logger_1.default.error('Manual audit log cleanup failed:', error);
      /* istanbul ignore next */
      cov_15qka3uz2().s[121]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_15qka3uz2().s[122]++;
exports.SchedulerService = SchedulerService;
// Export singleton instance
/* istanbul ignore next */
cov_15qka3uz2().s[123]++;
exports.schedulerService = SchedulerService.getInstance();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,