{"file":"/home/kim/tito/server/tests/jest.setup.ts","mappings":"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","names":[],"sources":["/home/kim/tito/server/tests/jest.setup.ts"],"sourcesContent":["/**\n * Jest Setup File\n * \n * This file runs before each test file and sets up mocks and global configurations.\n */\n\nimport { mockRedisService } from './utils/mockRedisService';\nimport { mockDatabaseService } from './utils/mockDatabaseService';\n\n// Mock the Redis service module\njest.mock('../src/services/redis/redisService', () => ({\n  RedisService: jest.fn().mockImplementation(() => mockRedisService),\n  redisService: mockRedisService\n}));\n\n// Mock the database service module\njest.mock('pg', () => ({\n  Pool: jest.fn().mockImplementation(() => mockDatabaseService),\n  Client: jest.fn().mockImplementation(() => mockDatabaseService)\n}));\n\n// Mock the database config module\njest.mock('../src/config/database', () => ({\n  getPool: jest.fn(() => mockDatabaseService)\n}));\n\n// Mock other external services that might cause issues in tests\njest.mock('../src/services/email/emailService', () => ({\n  EmailService: jest.fn().mockImplementation(() => ({\n    sendEmail: jest.fn().mockResolvedValue(true),\n    sendPasswordResetEmail: jest.fn().mockResolvedValue(true),\n    sendWelcomeEmail: jest.fn().mockResolvedValue(true)\n  }))\n}));\n\n// Mock file system operations\njest.mock('fs/promises', () => ({\n  writeFile: jest.fn().mockResolvedValue(undefined),\n  readFile: jest.fn().mockResolvedValue('mock file content'),\n  unlink: jest.fn().mockResolvedValue(undefined),\n  mkdir: jest.fn().mockResolvedValue(undefined),\n  access: jest.fn().mockResolvedValue(undefined)\n}));\n\n// Mock multer for file uploads\njest.mock('multer', () => ({\n  diskStorage: jest.fn(),\n  memoryStorage: jest.fn(),\n  __esModule: true,\n  default: jest.fn(() => ({\n    single: jest.fn(),\n    array: jest.fn(),\n    fields: jest.fn()\n  }))\n}));\n\n// Global test timeout\njest.setTimeout(30000);\n\n// Global error handler for unhandled promise rejections\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\n});\n\n// Global error handler for uncaught exceptions\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught Exception:', error);\n});\n"],"version":3}