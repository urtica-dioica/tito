a4fe82b93d08ee20e4b70ac7a6d9dea2
"use strict";

/* istanbul ignore next */
function cov_27s7xsdp9m() {
  var path = "/home/kim/tito/server/src/models/attendance/AttendanceSession.ts";
  var hash = "e39b3678aa061a74ad65bf80ec8a182cbaa7b555";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/models/attendance/AttendanceSession.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 73
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 51
        }
      },
      "3": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "4": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 12,
          column: 26
        }
      },
      "5": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "7": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "8": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "9": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "10": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 34
        }
      },
      "11": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "12": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "13": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "15": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 49,
          column: 17
        }
      },
      "16": {
        start: {
          line: 29,
          column: 42
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "17": {
        start: {
          line: 35,
          column: 43
        },
        end: {
          line: 35,
          column: 122
        }
      },
      "18": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 42,
          column: 21
        }
      },
      "19": {
        start: {
          line: 37,
          column: 50
        },
        end: {
          line: 37,
          column: 72
        }
      },
      "20": {
        start: {
          line: 38,
          column: 47
        },
        end: {
          line: 38,
          column: 158
        }
      },
      "21": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 66
        }
      },
      "22": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "23": {
        start: {
          line: 41,
          column: 24
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "24": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 59
        }
      },
      "25": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 58
        }
      },
      "26": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 47
        }
      },
      "27": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 71
        }
      },
      "28": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "29": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 87,
          column: 10
        }
      },
      "30": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 30
        }
      },
      "31": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "32": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 107,
          column: 73
        }
      },
      "33": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 62
        }
      },
      "34": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "35": {
        start: {
          line: 137,
          column: 23
        },
        end: {
          line: 137,
          column: 73
        }
      },
      "36": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 62
        }
      },
      "37": {
        start: {
          line: 144,
          column: 22
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "38": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 158,
          column: 89
        }
      },
      "39": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 27
        }
      },
      "40": {
        start: {
          line: 165,
          column: 22
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "41": {
        start: {
          line: 181,
          column: 23
        },
        end: {
          line: 181,
          column: 87
        }
      },
      "42": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 62
        }
      },
      "43": {
        start: {
          line: 188,
          column: 29
        },
        end: {
          line: 188,
          column: 31
        }
      },
      "44": {
        start: {
          line: 189,
          column: 29
        },
        end: {
          line: 189,
          column: 31
        }
      },
      "45": {
        start: {
          line: 190,
          column: 25
        },
        end: {
          line: 190,
          column: 26
        }
      },
      "46": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "47": {
        start: {
          line: 193,
          column: 35
        },
        end: {
          line: 193,
          column: 58
        }
      },
      "48": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 203,
          column: 13
        }
      },
      "49": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "50": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 67
        }
      },
      "51": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 68
        }
      },
      "52": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 50
        }
      },
      "53": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 29
        }
      },
      "54": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "55": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 68
        }
      },
      "56": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 52
        }
      },
      "57": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 25
        }
      },
      "58": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "59": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 63
        }
      },
      "60": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 47
        }
      },
      "61": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 25
        }
      },
      "62": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "63": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 37
        }
      },
      "64": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 30
        }
      },
      "65": {
        start: {
          line: 219,
          column: 22
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "66": {
        start: {
          line: 233,
          column: 23
        },
        end: {
          line: 233,
          column: 81
        }
      },
      "67": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 62
        }
      },
      "68": {
        start: {
          line: 240,
          column: 150
        },
        end: {
          line: 240,
          column: 156
        }
      },
      "69": {
        start: {
          line: 241,
          column: 23
        },
        end: {
          line: 241,
          column: 41
        }
      },
      "70": {
        start: {
          line: 242,
          column: 32
        },
        end: {
          line: 242,
          column: 34
        }
      },
      "71": {
        start: {
          line: 243,
          column: 28
        },
        end: {
          line: 243,
          column: 30
        }
      },
      "72": {
        start: {
          line: 244,
          column: 25
        },
        end: {
          line: 244,
          column: 26
        }
      },
      "73": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "74": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 68
        }
      },
      "75": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 41
        }
      },
      "76": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 25
        }
      },
      "77": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "78": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 69
        }
      },
      "79": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 43
        }
      },
      "80": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 25
        }
      },
      "81": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "82": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 68
        }
      },
      "83": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 42
        }
      },
      "84": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 25
        }
      },
      "85": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "86": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 62
        }
      },
      "87": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 40
        }
      },
      "88": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 25
        }
      },
      "89": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "90": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 62
        }
      },
      "91": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 38
        }
      },
      "92": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 25
        }
      },
      "93": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "94": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 136
        }
      },
      "95": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 44
        }
      },
      "96": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 25
        }
      },
      "97": {
        start: {
          line: 276,
          column: 28
        },
        end: {
          line: 276,
          column: 102
        }
      },
      "98": {
        start: {
          line: 278,
          column: 27
        },
        end: {
          line: 286,
          column: 5
        }
      },
      "99": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 90
        }
      },
      "100": {
        start: {
          line: 288,
          column: 22
        },
        end: {
          line: 288,
          column: 57
        }
      },
      "101": {
        start: {
          line: 290,
          column: 26
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "102": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 40
        }
      },
      "103": {
        start: {
          line: 316,
          column: 23
        },
        end: {
          line: 316,
          column: 84
        }
      },
      "104": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 323,
          column: 10
        }
      },
      "105": {
        start: {
          line: 329,
          column: 22
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "106": {
        start: {
          line: 342,
          column: 23
        },
        end: {
          line: 342,
          column: 89
        }
      },
      "107": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "108": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 21
        }
      },
      "109": {
        start: {
          line: 346,
          column: 50
        },
        end: {
          line: 346,
          column: 64
        }
      },
      "110": {
        start: {
          line: 347,
          column: 22
        },
        end: {
          line: 347,
          column: 113
        }
      },
      "111": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 34
        }
      },
      "112": {
        start: {
          line: 354,
          column: 22
        },
        end: {
          line: 365,
          column: 5
        }
      },
      "113": {
        start: {
          line: 366,
          column: 23
        },
        end: {
          line: 366,
          column: 101
        }
      },
      "114": {
        start: {
          line: 367,
          column: 22
        },
        end: {
          line: 367,
          column: 36
        }
      },
      "115": {
        start: {
          line: 368,
          column: 26
        },
        end: {
          line: 368,
          column: 115
        }
      },
      "116": {
        start: {
          line: 369,
          column: 35
        },
        end: {
          line: 369,
          column: 76
        }
      },
      "117": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 376,
          column: 10
        }
      },
      "118": {
        start: {
          line: 382,
          column: 22
        },
        end: {
          line: 382,
          column: 69
        }
      },
      "119": {
        start: {
          line: 383,
          column: 23
        },
        end: {
          line: 383,
          column: 73
        }
      },
      "120": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 61
        }
      },
      "121": {
        start: {
          line: 390,
          column: 22
        },
        end: {
          line: 390,
          column: 73
        }
      },
      "122": {
        start: {
          line: 391,
          column: 23
        },
        end: {
          line: 391,
          column: 67
        }
      },
      "123": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 46
        }
      },
      "124": {
        start: {
          line: 395,
          column: 0
        },
        end: {
          line: 395,
          column: 56
        }
      },
      "125": {
        start: {
          line: 396,
          column: 0
        },
        end: {
          line: 396,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 23
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 93
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 34
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 113
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 60
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 143
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 62
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 164
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 44
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 187
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 46
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 239
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 52
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 328
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        loc: {
          start: {
            line: 353,
            column: 66
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 353
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 381,
            column: 5
          }
        },
        loc: {
          start: {
            line: 381,
            column: 38
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 381
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 389,
            column: 5
          }
        },
        loc: {
          start: {
            line: 389,
            column: 38
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 389
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 19,
            column: 9
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 43
          }
        }, {
          start: {
            line: 14,
            column: 47
          },
          end: {
            line: 14,
            column: 80
          }
        }, {
          start: {
            line: 14,
            column: 84
          },
          end: {
            line: 14,
            column: 119
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 17
          },
          end: {
            line: 17,
            column: 162
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 17
          },
          end: {
            line: 17,
            column: 49
          }
        }, {
          start: {
            line: 17,
            column: 53
          },
          end: {
            line: 17,
            column: 87
          }
        }, {
          start: {
            line: 17,
            column: 91
          },
          end: {
            line: 17,
            column: 127
          }
        }, {
          start: {
            line: 17,
            column: 131
          },
          end: {
            line: 17,
            column: 162
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        }, {
          start: {
            line: 44,
            column: 21
          },
          end: {
            line: 49,
            column: 17
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 42,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 42,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 81,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 22
          },
          end: {
            line: 81,
            column: 29
          }
        }, {
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 81,
            column: 36
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 23
          },
          end: {
            line: 82,
            column: 31
          }
        }, {
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 82,
            column: 38
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 28
          },
          end: {
            line: 85,
            column: 41
          }
        }, {
          start: {
            line: 85,
            column: 44
          },
          end: {
            line: 85,
            column: 48
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 27
          }
        }, {
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 86,
            column: 35
          }
        }],
        line: 86
      },
      "11": {
        loc: {
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 40
          },
          end: {
            line: 108,
            column: 54
          }
        }, {
          start: {
            line: 108,
            column: 57
          },
          end: {
            line: 108,
            column: 61
          }
        }],
        line: 108
      },
      "12": {
        loc: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 40
          },
          end: {
            line: 138,
            column: 54
          }
        }, {
          start: {
            line: 138,
            column: 57
          },
          end: {
            line: 138,
            column: 61
          }
        }],
        line: 138
      },
      "13": {
        loc: {
          start: {
            line: 182,
            column: 15
          },
          end: {
            line: 182,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 40
          },
          end: {
            line: 182,
            column: 54
          }
        }, {
          start: {
            line: 182,
            column: 57
          },
          end: {
            line: 182,
            column: 61
          }
        }],
        line: 182
      },
      "14": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "15": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "16": {
        loc: {
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        }, {
          start: {
            line: 198,
            column: 21
          },
          end: {
            line: 200,
            column: 17
          }
        }],
        line: 195
      },
      "17": {
        loc: {
          start: {
            line: 195,
            column: 20
          },
          end: {
            line: 195,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 20
          },
          end: {
            line: 195,
            column: 61
          }
        }, {
          start: {
            line: 195,
            column: 65
          },
          end: {
            line: 195,
            column: 108
          }
        }, {
          start: {
            line: 195,
            column: 112
          },
          end: {
            line: 195,
            column: 157
          }
        }],
        line: 195
      },
      "18": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "19": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "20": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "21": {
        loc: {
          start: {
            line: 234,
            column: 15
          },
          end: {
            line: 234,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 40
          },
          end: {
            line: 234,
            column: 54
          }
        }, {
          start: {
            line: 234,
            column: 57
          },
          end: {
            line: 234,
            column: 61
          }
        }],
        line: 234
      },
      "22": {
        loc: {
          start: {
            line: 239,
            column: 33
          },
          end: {
            line: 239,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 239,
            column: 42
          },
          end: {
            line: 239,
            column: 44
          }
        }],
        line: 239
      },
      "23": {
        loc: {
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 240,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 240,
            column: 23
          },
          end: {
            line: 240,
            column: 24
          }
        }],
        line: 240
      },
      "24": {
        loc: {
          start: {
            line: 240,
            column: 26
          },
          end: {
            line: 240,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 240,
            column: 34
          },
          end: {
            line: 240,
            column: 36
          }
        }],
        line: 240
      },
      "25": {
        loc: {
          start: {
            line: 240,
            column: 105
          },
          end: {
            line: 240,
            column: 125
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 240,
            column: 114
          },
          end: {
            line: 240,
            column: 125
          }
        }],
        line: 240
      },
      "26": {
        loc: {
          start: {
            line: 240,
            column: 127
          },
          end: {
            line: 240,
            column: 145
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 240,
            column: 139
          },
          end: {
            line: 240,
            column: 145
          }
        }],
        line: 240
      },
      "27": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "28": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "29": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "30": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "31": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "32": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "33": {
        loc: {
          start: {
            line: 276,
            column: 28
          },
          end: {
            line: 276,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 276,
            column: 57
          },
          end: {
            line: 276,
            column: 97
          }
        }, {
          start: {
            line: 276,
            column: 100
          },
          end: {
            line: 276,
            column: 102
          }
        }],
        line: 276
      },
      "34": {
        loc: {
          start: {
            line: 312,
            column: 17
          },
          end: {
            line: 312,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 42
          },
          end: {
            line: 312,
            column: 77
          }
        }, {
          start: {
            line: 312,
            column: 80
          },
          end: {
            line: 312,
            column: 93
          }
        }],
        line: 312
      },
      "35": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "36": {
        loc: {
          start: {
            line: 371,
            column: 27
          },
          end: {
            line: 371,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 27
          },
          end: {
            line: 371,
            column: 57
          }
        }, {
          start: {
            line: 371,
            column: 61
          },
          end: {
            line: 371,
            column: 62
          }
        }],
        line: 371
      },
      "37": {
        loc: {
          start: {
            line: 372,
            column: 29
          },
          end: {
            line: 372,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 29
          },
          end: {
            line: 372,
            column: 62
          }
        }, {
          start: {
            line: 372,
            column: 66
          },
          end: {
            line: 372,
            column: 67
          }
        }],
        line: 372
      },
      "38": {
        loc: {
          start: {
            line: 373,
            column: 30
          },
          end: {
            line: 373,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 30
          },
          end: {
            line: 373,
            column: 64
          }
        }, {
          start: {
            line: 373,
            column: 68
          },
          end: {
            line: 373,
            column: 69
          }
        }],
        line: 373
      },
      "39": {
        loc: {
          start: {
            line: 374,
            column: 24
          },
          end: {
            line: 374,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 24
          },
          end: {
            line: 374,
            column: 53
          }
        }, {
          start: {
            line: 374,
            column: 57
          },
          end: {
            line: 374,
            column: 58
          }
        }],
        line: 374
      },
      "40": {
        loc: {
          start: {
            line: 384,
            column: 15
          },
          end: {
            line: 384,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 33
          },
          end: {
            line: 384,
            column: 52
          }
        }, {
          start: {
            line: 384,
            column: 55
          },
          end: {
            line: 384,
            column: 60
          }
        }],
        line: 384
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/models/attendance/AttendanceSession.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/models/attendance/AttendanceSession.ts"],
      sourcesContent: ["import { getPool } from '../../config/database';\nimport { ImageProcessor } from '../../utils/imageProcessor';\n\nexport interface AttendanceSession {\n  id: string;\n  attendanceRecordId: string;\n  sessionType: 'clock_in' | 'clock_out' | 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out' | 'overtime';\n  timestamp: Date;\n  selfieImagePath: string | null;\n  qrCodeHash: string | null;\n  calculatedHours: number;\n  createdAt: Date;\n}\n\nexport interface AttendanceSessionWithDetails extends AttendanceSession {\n  employeeId: string;\n  employeeCode: string;\n  employeeName: string;\n  departmentName: string | null;\n  date: Date;\n  overallStatus: string;\n}\n\nexport interface CreateAttendanceSessionData {\n  attendanceRecordId: string;\n  sessionType: 'clock_in' | 'clock_out' | 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out' | 'overtime';\n  timestamp: Date;\n  selfieImagePath?: string;\n  qrCodeHash?: string;\n}\n\nexport interface UpdateAttendanceSessionData {\n  timestamp?: Date;\n  selfieImagePath?: string;\n  qrCodeHash?: string;\n}\n\nexport interface AttendanceSessionListParams {\n  page?: number | undefined;\n  limit?: number | undefined;\n  employeeId?: string | undefined;\n  departmentId?: string | undefined;\n  sessionType?: 'clock_in' | 'clock_out' | 'morning_in' | 'morning_out' | 'afternoon_in' | 'afternoon_out' | 'overtime' | undefined;\n  startDate?: Date | undefined;\n  endDate?: Date | undefined;\n  search?: string | undefined;\n  sortBy?: string | undefined;\n  sortOrder?: 'asc' | 'desc' | undefined;\n}\n\nexport class AttendanceSessionModel {\n  /**\n   * Create a new attendance session\n   */\n  async createAttendanceSession(data: CreateAttendanceSessionData): Promise<AttendanceSession> {\n    // Map time-based session types to clock_in/clock_out fields\n    let clockIn: Date | null = null;\n    let clockOut: Date | null = null;\n    \n    if (data.sessionType === 'clock_in' || data.sessionType === 'morning_in' || data.sessionType === 'afternoon_in') {\n      clockIn = data.timestamp;\n    } else if (data.sessionType === 'clock_out' || data.sessionType === 'morning_out' || data.sessionType === 'afternoon_out' || data.sessionType === 'overtime') {\n      clockOut = data.timestamp;\n    }\n\n    // Process selfie image if provided\n    let selfieImagePath: string | null = null;\n    let selfieImageUrl: string | null = null;\n    let selfieTakenAt: Date | null = null;\n\n    if (data.selfieImagePath) {\n      try {\n        // Check if it's base64 data or already a file path\n        if (data.selfieImagePath.startsWith('data:image/')) {\n          // Get employee ID from attendance record for filename generation\n          const employeeQuery = `\n            SELECT ar.employee_id, e.employee_id as employee_code\n            FROM attendance_records ar\n            JOIN employees e ON ar.employee_id = e.id\n            WHERE ar.id = $1\n          `;\n          const employeeResult = await getPool().query(employeeQuery, [data.attendanceRecordId]);\n          \n          if (employeeResult.rows.length > 0) {\n            const { employee_code } = employeeResult.rows[0];\n            const processedImage = await ImageProcessor.processSelfieImage(\n              data.selfieImagePath,\n              employee_code,\n              data.sessionType\n            );\n            \n            selfieImagePath = processedImage.filePath;\n            selfieImageUrl = `/uploads/${processedImage.fileName}`;\n            selfieTakenAt = new Date();\n          }\n        } else {\n          // Assume it's already a file path\n          selfieImagePath = data.selfieImagePath;\n          selfieImageUrl = data.selfieImagePath;\n          selfieTakenAt = new Date();\n        }\n      } catch (error) {\n        console.error('Error processing selfie image:', error);\n        // Continue without selfie if processing fails\n      }\n    }\n\n    const query = `\n      INSERT INTO attendance_sessions (\n        attendance_record_id, \n        session_type, \n        clock_in, \n        clock_out, \n        selfie_image_path, \n        selfie_image_url,\n        selfie_taken_at,\n        qr_code_hash\n      )\n      VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n      RETURNING \n        id,\n        attendance_record_id as \"attendanceRecordId\",\n        session_type as \"sessionType\",\n        COALESCE(clock_in, clock_out) as \"timestamp\",\n        selfie_image_path as \"selfieImagePath\",\n        qr_code_hash as \"qrCodeHash\",\n        calculated_hours as \"calculatedHours\",\n        created_at as \"createdAt\"\n    `;\n\n    const result = await getPool().query(query, [\n      data.attendanceRecordId,\n      data.sessionType,\n      clockIn ? clockIn : null,\n      clockOut ? clockOut : null,\n      selfieImagePath,\n      selfieImageUrl,\n      selfieTakenAt ? selfieTakenAt : null,\n      data.qrCodeHash || null\n    ]);\n\n    return result.rows[0];\n  }\n\n  /**\n   * Get attendance session by ID\n   */\n  async findById(id: string): Promise<AttendanceSession | null> {\n    const query = `\n      SELECT \n        id,\n        attendance_record_id as \"attendanceRecordId\",\n        session_type as \"sessionType\",\n        COALESCE(clock_in, clock_out) as \"timestamp\",\n        selfie_image_path as \"selfieImagePath\",\n        qr_code_hash as \"qrCodeHash\",\n        calculated_hours as \"calculatedHours\",\n        created_at as \"createdAt\"\n      FROM attendance_sessions\n      WHERE id = $1\n    `;\n\n    const result = await getPool().query(query, [id]);\n    return result.rows.length > 0 ? result.rows[0] : null;\n  }\n\n  /**\n   * Get attendance session with details\n   */\n  async findByIdWithDetails(id: string): Promise<AttendanceSessionWithDetails | null> {\n    const query = `\n      SELECT \n        s.id,\n        s.attendance_record_id as \"attendanceRecordId\",\n        s.session_type as \"sessionType\",\n        COALESCE(s.clock_in, s.clock_out) as \"timestamp\",\n        s.selfie_image_path as \"selfieImagePath\",\n        s.qr_code_hash as \"qrCodeHash\",\n        s.calculated_hours as \"calculatedHours\",\n        s.created_at as \"createdAt\",\n        ar.employee_id as \"employeeId\",\n        ar.date,\n        ar.overall_status as \"overallStatus\",\n        e.employee_id as \"employeeCode\",\n        CONCAT(u.first_name, ' ', u.last_name) as \"employeeName\",\n        d.name as \"departmentName\"\n      FROM attendance_sessions s\n      JOIN attendance_records ar ON s.attendance_record_id = ar.id\n      JOIN employees e ON ar.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      WHERE s.id = $1\n    `;\n\n    const result = await getPool().query(query, [id]);\n    return result.rows.length > 0 ? result.rows[0] : null;\n  }\n\n  /**\n   * Get sessions for an attendance record\n   */\n  async getSessionsByAttendanceRecord(attendanceRecordId: string): Promise<AttendanceSession[]> {\n    const query = `\n      SELECT \n        id,\n        attendance_record_id as \"attendanceRecordId\",\n        session_type as \"sessionType\",\n        COALESCE(clock_in, clock_out) as \"timestamp\",\n        selfie_image_path as \"selfieImagePath\",\n        qr_code_hash as \"qrCodeHash\",\n        calculated_hours as \"calculatedHours\",\n        created_at as \"createdAt\"\n      FROM attendance_sessions\n      WHERE attendance_record_id = $1\n      ORDER BY COALESCE(clock_in, clock_out)\n    `;\n\n    const result = await getPool().query(query, [attendanceRecordId]);\n    return result.rows;\n  }\n\n  /**\n   * Get latest session for an employee on a specific date\n   */\n  async getLatestSessionByEmployeeAndDate(employeeId: string, date: Date): Promise<AttendanceSession | null> {\n    const query = `\n      SELECT \n        s.id,\n        s.attendance_record_id as \"attendanceRecordId\",\n        s.session_type as \"sessionType\",\n        COALESCE(s.clock_in, s.clock_out) as \"timestamp\",\n        s.selfie_image_path as \"selfieImagePath\",\n        s.qr_code_hash as \"qrCodeHash\",\n        s.calculated_hours as \"calculatedHours\",\n        s.created_at as \"createdAt\"\n      FROM attendance_sessions s\n      JOIN attendance_records ar ON s.attendance_record_id = ar.id\n      WHERE ar.employee_id = $1 AND ar.date = $2\n      ORDER BY COALESCE(s.clock_in, s.clock_out) DESC\n      LIMIT 1\n    `;\n\n    const result = await getPool().query(query, [employeeId, date]);\n    return result.rows.length > 0 ? result.rows[0] : null;\n  }\n\n  /**\n   * Update attendance session\n   */\n  async updateAttendanceSession(id: string, data: UpdateAttendanceSessionData): Promise<AttendanceSession | null> {\n    const updateFields: string[] = [];\n    const updateValues: any[] = [];\n    let paramIndex = 1;\n\n    if (data.timestamp !== undefined) {\n      // Get the current session to determine if it's clock_in or clock_out\n      const currentSession = await this.findById(id);\n      if (currentSession) {\n        if (currentSession.sessionType === 'clock_in' || currentSession.sessionType === 'morning_in' || currentSession.sessionType === 'afternoon_in') {\n          updateFields.push(`clock_in = $${paramIndex}`);\n        } else {\n          updateFields.push(`clock_out = $${paramIndex}`);\n        }\n        updateValues.push(data.timestamp);\n        paramIndex++;\n      }\n    }\n\n    if (data.selfieImagePath !== undefined) {\n      updateFields.push(`selfie_image_path = $${paramIndex}`);\n      updateValues.push(data.selfieImagePath);\n      paramIndex++;\n    }\n\n    if (data.qrCodeHash !== undefined) {\n      updateFields.push(`qr_code_hash = $${paramIndex}`);\n      updateValues.push(data.qrCodeHash);\n      paramIndex++;\n    }\n\n    if (updateFields.length === 0) {\n      return this.findById(id);\n    }\n\n    updateValues.push(id);\n\n    const query = `\n      UPDATE attendance_sessions \n      SET ${updateFields.join(', ')}\n      WHERE id = $${paramIndex}\n      RETURNING \n        id,\n        attendance_record_id as \"attendanceRecordId\",\n        session_type as \"sessionType\",\n        COALESCE(clock_in, clock_out) as \"timestamp\",\n        selfie_image_path as \"selfieImagePath\",\n        qr_code_hash as \"qrCodeHash\",\n        calculated_hours as \"calculatedHours\",\n        created_at as \"createdAt\"\n    `;\n\n    const result = await getPool().query(query, updateValues);\n    return result.rows.length > 0 ? result.rows[0] : null;\n  }\n\n  /**\n   * List attendance sessions with filtering and pagination\n   */\n  async listAttendanceSessions(params: AttendanceSessionListParams = {}): Promise<{\n    sessions: AttendanceSessionWithDetails[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    const {\n      page = 1,\n      limit = 20,\n      employeeId,\n      departmentId,\n      sessionType,\n      startDate,\n      endDate,\n      search,\n      sortBy = 'timestamp',\n      sortOrder = 'desc'\n    } = params;\n\n    const offset = (page - 1) * limit;\n    const whereConditions: string[] = [];\n    const queryParams: any[] = [];\n    let paramIndex = 1;\n\n    // Build WHERE conditions\n    if (employeeId) {\n      whereConditions.push(`ar.employee_id = $${paramIndex}`);\n      queryParams.push(employeeId);\n      paramIndex++;\n    }\n\n    if (departmentId) {\n      whereConditions.push(`e.department_id = $${paramIndex}`);\n      queryParams.push(departmentId);\n      paramIndex++;\n    }\n\n    if (sessionType) {\n      whereConditions.push(`s.session_type = $${paramIndex}`);\n      queryParams.push(sessionType);\n      paramIndex++;\n    }\n\n    if (startDate) {\n      whereConditions.push(`ar.date >= $${paramIndex}`);\n      queryParams.push(startDate);\n      paramIndex++;\n    }\n\n    if (endDate) {\n      whereConditions.push(`ar.date <= $${paramIndex}`);\n      queryParams.push(endDate);\n      paramIndex++;\n    }\n\n    if (search) {\n      whereConditions.push(`(CONCAT(u.first_name, ' ', u.last_name) ILIKE $${paramIndex} OR e.employee_id ILIKE $${paramIndex})`);\n      queryParams.push(`%${search}%`);\n      paramIndex++;\n    }\n\n    const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(' AND ')}` : '';\n\n    // Count query\n    const countQuery = `\n      SELECT COUNT(*) as total\n      FROM attendance_sessions s\n      JOIN attendance_records ar ON s.attendance_record_id = ar.id\n      JOIN employees e ON ar.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      ${whereClause}\n    `;\n\n    const countResult = await getPool().query(countQuery, queryParams);\n    const total = parseInt(countResult.rows[0].total);\n\n    // Data query\n    const dataQuery = `\n      SELECT \n        s.id,\n        s.attendance_record_id as \"attendanceRecordId\",\n        s.session_type as \"sessionType\",\n        COALESCE(s.clock_in, s.clock_out) as \"timestamp\",\n        s.selfie_image_path as \"selfieImagePath\",\n        s.qr_code_hash as \"qrCodeHash\",\n        s.calculated_hours as \"calculatedHours\",\n        s.created_at as \"createdAt\",\n        ar.employee_id as \"employeeId\",\n        ar.date,\n        ar.overall_status as \"overallStatus\",\n        e.employee_id as \"employeeCode\",\n        CONCAT(u.first_name, ' ', u.last_name) as \"employeeName\",\n        d.name as \"departmentName\"\n      FROM attendance_sessions s\n      JOIN attendance_records ar ON s.attendance_record_id = ar.id\n      JOIN employees e ON ar.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      ${whereClause}\n      ORDER BY ${sortBy === 'timestamp' ? 'COALESCE(s.clock_in, s.clock_out)' : `s.${sortBy}`} ${sortOrder.toUpperCase()}\n      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}\n    `;\n\n    queryParams.push(limit, offset);\n    const result = await getPool().query(dataQuery, queryParams);\n\n    return {\n      sessions: result.rows,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit)\n    };\n  }\n\n  /**\n   * Calculate hours between clock in and clock out sessions\n   */\n  async calculateSessionHours(attendanceRecordId: string): Promise<number> {\n    const query = `\n      SELECT \n        clock_in.clock_in as clock_in_time,\n        clock_out.clock_out as clock_out_time\n      FROM attendance_sessions clock_in\n      JOIN attendance_sessions clock_out ON clock_in.attendance_record_id = clock_out.attendance_record_id\n      WHERE clock_in.attendance_record_id = $1\n        AND clock_in.clock_in IS NOT NULL\n        AND clock_out.clock_out IS NOT NULL\n        AND clock_in.clock_in < clock_out.clock_out\n      ORDER BY clock_in.clock_in DESC, clock_out.clock_out ASC\n      LIMIT 1\n    `;\n\n    const result = await getPool().query(query, [attendanceRecordId]);\n    \n    if (result.rows.length === 0) {\n      return 0;\n    }\n\n    const { clock_in_time, clock_out_time } = result.rows[0];\n    const hours = (new Date(clock_out_time).getTime() - new Date(clock_in_time).getTime()) / (1000 * 60 * 60);\n    \n    return Math.max(0, hours);\n  }\n\n  /**\n   * Get session statistics for an employee\n   */\n  async getEmployeeSessionStats(employeeId: string, startDate: Date, endDate: Date): Promise<{\n    totalSessions: number;\n    clockInSessions: number;\n    clockOutSessions: number;\n    totalHours: number;\n    averageHoursPerDay: number;\n  }> {\n    const query = `\n      SELECT \n        COUNT(*) as total_sessions,\n        COUNT(*) FILTER (WHERE session_type = 'clock_in') as clock_in_sessions,\n        COUNT(*) FILTER (WHERE session_type = 'clock_out') as clock_out_sessions,\n        COALESCE(SUM(calculated_hours), 0) as total_hours\n      FROM attendance_sessions s\n      JOIN attendance_records ar ON s.attendance_record_id = ar.id\n      WHERE ar.employee_id = $1 \n        AND ar.date >= $2 \n        AND ar.date <= $3\n    `;\n\n    const result = await getPool().query(query, [employeeId, startDate, endDate]);\n    const stats = result.rows[0];\n\n    const totalDays = Math.max(1, Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24)));\n    const averageHoursPerDay = parseFloat(stats.total_hours) / totalDays;\n\n    return {\n      totalSessions: parseInt(stats.total_sessions) || 0,\n      clockInSessions: parseInt(stats.clock_in_sessions) || 0,\n      clockOutSessions: parseInt(stats.clock_out_sessions) || 0,\n      totalHours: parseFloat(stats.total_hours) || 0,\n      averageHoursPerDay: Math.round(averageHoursPerDay * 100) / 100\n    };\n  }\n\n  /**\n   * Delete attendance session\n   */\n  async deleteAttendanceSession(id: string): Promise<boolean> {\n    const query = 'DELETE FROM attendance_sessions WHERE id = $1';\n    const result = await getPool().query(query, [id]);\n    return result.rowCount ? result.rowCount > 0 : false;\n  }\n\n  /**\n   * Get attendance session count\n   */\n  async getAttendanceSessionCount(): Promise<number> {\n    const query = 'SELECT COUNT(*) as count FROM attendance_sessions';\n    const result = await getPool().query(query);\n    return parseInt(result.rows[0].count);\n  }\n}\n\nexport const attendanceSessionModel = new AttendanceSessionModel();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e39b3678aa061a74ad65bf80ec8a182cbaa7b555"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27s7xsdp9m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27s7xsdp9m();
cov_27s7xsdp9m().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27s7xsdp9m().s[1]++;
exports.attendanceSessionModel = exports.AttendanceSessionModel = void 0;
const database_1 =
/* istanbul ignore next */
(cov_27s7xsdp9m().s[2]++, require("../../config/database"));
const imageProcessor_1 =
/* istanbul ignore next */
(cov_27s7xsdp9m().s[3]++, require("../../utils/imageProcessor"));
class AttendanceSessionModel {
  /**
   * Create a new attendance session
   */
  async createAttendanceSession(data) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[0]++;
    // Map time-based session types to clock_in/clock_out fields
    let clockIn =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[4]++, null);
    let clockOut =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[5]++, null);
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[6]++;
    if (
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[1][0]++, data.sessionType === 'clock_in') ||
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[1][1]++, data.sessionType === 'morning_in') ||
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[1][2]++, data.sessionType === 'afternoon_in')) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[0][0]++;
      cov_27s7xsdp9m().s[7]++;
      clockIn = data.timestamp;
    } else {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[0][1]++;
      cov_27s7xsdp9m().s[8]++;
      if (
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[3][0]++, data.sessionType === 'clock_out') ||
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[3][1]++, data.sessionType === 'morning_out') ||
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[3][2]++, data.sessionType === 'afternoon_out') ||
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[3][3]++, data.sessionType === 'overtime')) {
        /* istanbul ignore next */
        cov_27s7xsdp9m().b[2][0]++;
        cov_27s7xsdp9m().s[9]++;
        clockOut = data.timestamp;
      } else
      /* istanbul ignore next */
      {
        cov_27s7xsdp9m().b[2][1]++;
      }
    }
    // Process selfie image if provided
    let selfieImagePath =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[10]++, null);
    let selfieImageUrl =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[11]++, null);
    let selfieTakenAt =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[12]++, null);
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[13]++;
    if (data.selfieImagePath) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[4][0]++;
      cov_27s7xsdp9m().s[14]++;
      try {
        /* istanbul ignore next */
        cov_27s7xsdp9m().s[15]++;
        // Check if it's base64 data or already a file path
        if (data.selfieImagePath.startsWith('data:image/')) {
          /* istanbul ignore next */
          cov_27s7xsdp9m().b[5][0]++;
          // Get employee ID from attendance record for filename generation
          const employeeQuery =
          /* istanbul ignore next */
          (cov_27s7xsdp9m().s[16]++, `
            SELECT ar.employee_id, e.employee_id as employee_code
            FROM attendance_records ar
            JOIN employees e ON ar.employee_id = e.id
            WHERE ar.id = $1
          `);
          const employeeResult =
          /* istanbul ignore next */
          (cov_27s7xsdp9m().s[17]++, await (0, database_1.getPool)().query(employeeQuery, [data.attendanceRecordId]));
          /* istanbul ignore next */
          cov_27s7xsdp9m().s[18]++;
          if (employeeResult.rows.length > 0) {
            /* istanbul ignore next */
            cov_27s7xsdp9m().b[6][0]++;
            const {
              employee_code
            } =
            /* istanbul ignore next */
            (cov_27s7xsdp9m().s[19]++, employeeResult.rows[0]);
            const processedImage =
            /* istanbul ignore next */
            (cov_27s7xsdp9m().s[20]++, await imageProcessor_1.ImageProcessor.processSelfieImage(data.selfieImagePath, employee_code, data.sessionType));
            /* istanbul ignore next */
            cov_27s7xsdp9m().s[21]++;
            selfieImagePath = processedImage.filePath;
            /* istanbul ignore next */
            cov_27s7xsdp9m().s[22]++;
            selfieImageUrl = `/uploads/${processedImage.fileName}`;
            /* istanbul ignore next */
            cov_27s7xsdp9m().s[23]++;
            selfieTakenAt = new Date();
          } else
          /* istanbul ignore next */
          {
            cov_27s7xsdp9m().b[6][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_27s7xsdp9m().b[5][1]++;
          cov_27s7xsdp9m().s[24]++;
          // Assume it's already a file path
          selfieImagePath = data.selfieImagePath;
          /* istanbul ignore next */
          cov_27s7xsdp9m().s[25]++;
          selfieImageUrl = data.selfieImagePath;
          /* istanbul ignore next */
          cov_27s7xsdp9m().s[26]++;
          selfieTakenAt = new Date();
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_27s7xsdp9m().s[27]++;
        console.error('Error processing selfie image:', error);
        // Continue without selfie if processing fails
      }
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[4][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[28]++, `
      INSERT INTO attendance_sessions (
        attendance_record_id, 
        session_type, 
        clock_in, 
        clock_out, 
        selfie_image_path, 
        selfie_image_url,
        selfie_taken_at,
        qr_code_hash
      )
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
      RETURNING 
        id,
        attendance_record_id as "attendanceRecordId",
        session_type as "sessionType",
        COALESCE(clock_in, clock_out) as "timestamp",
        selfie_image_path as "selfieImagePath",
        qr_code_hash as "qrCodeHash",
        calculated_hours as "calculatedHours",
        created_at as "createdAt"
    `);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[29]++, await (0, database_1.getPool)().query(query, [data.attendanceRecordId, data.sessionType, clockIn ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[7][0]++, clockIn) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[7][1]++, null), clockOut ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[8][0]++, clockOut) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[8][1]++, null), selfieImagePath, selfieImageUrl, selfieTakenAt ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[9][0]++, selfieTakenAt) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[9][1]++, null),
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[10][0]++, data.qrCodeHash) ||
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[10][1]++, null)]));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[30]++;
    return result.rows[0];
  }
  /**
   * Get attendance session by ID
   */
  async findById(id) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[1]++;
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[31]++, `
      SELECT 
        id,
        attendance_record_id as "attendanceRecordId",
        session_type as "sessionType",
        COALESCE(clock_in, clock_out) as "timestamp",
        selfie_image_path as "selfieImagePath",
        qr_code_hash as "qrCodeHash",
        calculated_hours as "calculatedHours",
        created_at as "createdAt"
      FROM attendance_sessions
      WHERE id = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[32]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[33]++;
    return result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[11][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[11][1]++, null);
  }
  /**
   * Get attendance session with details
   */
  async findByIdWithDetails(id) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[2]++;
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[34]++, `
      SELECT 
        s.id,
        s.attendance_record_id as "attendanceRecordId",
        s.session_type as "sessionType",
        COALESCE(s.clock_in, s.clock_out) as "timestamp",
        s.selfie_image_path as "selfieImagePath",
        s.qr_code_hash as "qrCodeHash",
        s.calculated_hours as "calculatedHours",
        s.created_at as "createdAt",
        ar.employee_id as "employeeId",
        ar.date,
        ar.overall_status as "overallStatus",
        e.employee_id as "employeeCode",
        CONCAT(u.first_name, ' ', u.last_name) as "employeeName",
        d.name as "departmentName"
      FROM attendance_sessions s
      JOIN attendance_records ar ON s.attendance_record_id = ar.id
      JOIN employees e ON ar.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      WHERE s.id = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[35]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[36]++;
    return result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[12][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[12][1]++, null);
  }
  /**
   * Get sessions for an attendance record
   */
  async getSessionsByAttendanceRecord(attendanceRecordId) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[3]++;
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[37]++, `
      SELECT 
        id,
        attendance_record_id as "attendanceRecordId",
        session_type as "sessionType",
        COALESCE(clock_in, clock_out) as "timestamp",
        selfie_image_path as "selfieImagePath",
        qr_code_hash as "qrCodeHash",
        calculated_hours as "calculatedHours",
        created_at as "createdAt"
      FROM attendance_sessions
      WHERE attendance_record_id = $1
      ORDER BY COALESCE(clock_in, clock_out)
    `);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[38]++, await (0, database_1.getPool)().query(query, [attendanceRecordId]));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[39]++;
    return result.rows;
  }
  /**
   * Get latest session for an employee on a specific date
   */
  async getLatestSessionByEmployeeAndDate(employeeId, date) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[4]++;
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[40]++, `
      SELECT 
        s.id,
        s.attendance_record_id as "attendanceRecordId",
        s.session_type as "sessionType",
        COALESCE(s.clock_in, s.clock_out) as "timestamp",
        s.selfie_image_path as "selfieImagePath",
        s.qr_code_hash as "qrCodeHash",
        s.calculated_hours as "calculatedHours",
        s.created_at as "createdAt"
      FROM attendance_sessions s
      JOIN attendance_records ar ON s.attendance_record_id = ar.id
      WHERE ar.employee_id = $1 AND ar.date = $2
      ORDER BY COALESCE(s.clock_in, s.clock_out) DESC
      LIMIT 1
    `);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[41]++, await (0, database_1.getPool)().query(query, [employeeId, date]));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[42]++;
    return result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[13][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[13][1]++, null);
  }
  /**
   * Update attendance session
   */
  async updateAttendanceSession(id, data) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[5]++;
    const updateFields =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[43]++, []);
    const updateValues =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[44]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[45]++, 1);
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[46]++;
    if (data.timestamp !== undefined) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[14][0]++;
      // Get the current session to determine if it's clock_in or clock_out
      const currentSession =
      /* istanbul ignore next */
      (cov_27s7xsdp9m().s[47]++, await this.findById(id));
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[48]++;
      if (currentSession) {
        /* istanbul ignore next */
        cov_27s7xsdp9m().b[15][0]++;
        cov_27s7xsdp9m().s[49]++;
        if (
        /* istanbul ignore next */
        (cov_27s7xsdp9m().b[17][0]++, currentSession.sessionType === 'clock_in') ||
        /* istanbul ignore next */
        (cov_27s7xsdp9m().b[17][1]++, currentSession.sessionType === 'morning_in') ||
        /* istanbul ignore next */
        (cov_27s7xsdp9m().b[17][2]++, currentSession.sessionType === 'afternoon_in')) {
          /* istanbul ignore next */
          cov_27s7xsdp9m().b[16][0]++;
          cov_27s7xsdp9m().s[50]++;
          updateFields.push(`clock_in = $${paramIndex}`);
        } else {
          /* istanbul ignore next */
          cov_27s7xsdp9m().b[16][1]++;
          cov_27s7xsdp9m().s[51]++;
          updateFields.push(`clock_out = $${paramIndex}`);
        }
        /* istanbul ignore next */
        cov_27s7xsdp9m().s[52]++;
        updateValues.push(data.timestamp);
        /* istanbul ignore next */
        cov_27s7xsdp9m().s[53]++;
        paramIndex++;
      } else
      /* istanbul ignore next */
      {
        cov_27s7xsdp9m().b[15][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[14][1]++;
    }
    cov_27s7xsdp9m().s[54]++;
    if (data.selfieImagePath !== undefined) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[18][0]++;
      cov_27s7xsdp9m().s[55]++;
      updateFields.push(`selfie_image_path = $${paramIndex}`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[56]++;
      updateValues.push(data.selfieImagePath);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[57]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[18][1]++;
    }
    cov_27s7xsdp9m().s[58]++;
    if (data.qrCodeHash !== undefined) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[19][0]++;
      cov_27s7xsdp9m().s[59]++;
      updateFields.push(`qr_code_hash = $${paramIndex}`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[60]++;
      updateValues.push(data.qrCodeHash);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[61]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[19][1]++;
    }
    cov_27s7xsdp9m().s[62]++;
    if (updateFields.length === 0) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[20][0]++;
      cov_27s7xsdp9m().s[63]++;
      return this.findById(id);
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[20][1]++;
    }
    cov_27s7xsdp9m().s[64]++;
    updateValues.push(id);
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[65]++, `
      UPDATE attendance_sessions 
      SET ${updateFields.join(', ')}
      WHERE id = $${paramIndex}
      RETURNING 
        id,
        attendance_record_id as "attendanceRecordId",
        session_type as "sessionType",
        COALESCE(clock_in, clock_out) as "timestamp",
        selfie_image_path as "selfieImagePath",
        qr_code_hash as "qrCodeHash",
        calculated_hours as "calculatedHours",
        created_at as "createdAt"
    `);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[66]++, await (0, database_1.getPool)().query(query, updateValues));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[67]++;
    return result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[21][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[21][1]++, null);
  }
  /**
   * List attendance sessions with filtering and pagination
   */
  async listAttendanceSessions(params =
  /* istanbul ignore next */
  (cov_27s7xsdp9m().b[22][0]++, {})) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[6]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[23][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[24][0]++, 20),
      employeeId,
      departmentId,
      sessionType,
      startDate,
      endDate,
      search,
      sortBy =
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[25][0]++, 'timestamp'),
      sortOrder =
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[26][0]++, 'desc')
    } =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[68]++, params);
    const offset =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[69]++, (page - 1) * limit);
    const whereConditions =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[70]++, []);
    const queryParams =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[71]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[72]++, 1);
    // Build WHERE conditions
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[73]++;
    if (employeeId) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[27][0]++;
      cov_27s7xsdp9m().s[74]++;
      whereConditions.push(`ar.employee_id = $${paramIndex}`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[75]++;
      queryParams.push(employeeId);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[76]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[27][1]++;
    }
    cov_27s7xsdp9m().s[77]++;
    if (departmentId) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[28][0]++;
      cov_27s7xsdp9m().s[78]++;
      whereConditions.push(`e.department_id = $${paramIndex}`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[79]++;
      queryParams.push(departmentId);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[80]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[28][1]++;
    }
    cov_27s7xsdp9m().s[81]++;
    if (sessionType) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[29][0]++;
      cov_27s7xsdp9m().s[82]++;
      whereConditions.push(`s.session_type = $${paramIndex}`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[83]++;
      queryParams.push(sessionType);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[84]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[29][1]++;
    }
    cov_27s7xsdp9m().s[85]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[30][0]++;
      cov_27s7xsdp9m().s[86]++;
      whereConditions.push(`ar.date >= $${paramIndex}`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[87]++;
      queryParams.push(startDate);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[88]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[30][1]++;
    }
    cov_27s7xsdp9m().s[89]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[31][0]++;
      cov_27s7xsdp9m().s[90]++;
      whereConditions.push(`ar.date <= $${paramIndex}`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[91]++;
      queryParams.push(endDate);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[92]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[31][1]++;
    }
    cov_27s7xsdp9m().s[93]++;
    if (search) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[32][0]++;
      cov_27s7xsdp9m().s[94]++;
      whereConditions.push(`(CONCAT(u.first_name, ' ', u.last_name) ILIKE $${paramIndex} OR e.employee_id ILIKE $${paramIndex})`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[95]++;
      queryParams.push(`%${search}%`);
      /* istanbul ignore next */
      cov_27s7xsdp9m().s[96]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[32][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[97]++, whereConditions.length > 0 ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[33][0]++, `WHERE ${whereConditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[33][1]++, ''));
    // Count query
    const countQuery =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[98]++, `
      SELECT COUNT(*) as total
      FROM attendance_sessions s
      JOIN attendance_records ar ON s.attendance_record_id = ar.id
      JOIN employees e ON ar.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      ${whereClause}
    `);
    const countResult =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[99]++, await (0, database_1.getPool)().query(countQuery, queryParams));
    const total =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[100]++, parseInt(countResult.rows[0].total));
    // Data query
    const dataQuery =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[101]++, `
      SELECT 
        s.id,
        s.attendance_record_id as "attendanceRecordId",
        s.session_type as "sessionType",
        COALESCE(s.clock_in, s.clock_out) as "timestamp",
        s.selfie_image_path as "selfieImagePath",
        s.qr_code_hash as "qrCodeHash",
        s.calculated_hours as "calculatedHours",
        s.created_at as "createdAt",
        ar.employee_id as "employeeId",
        ar.date,
        ar.overall_status as "overallStatus",
        e.employee_id as "employeeCode",
        CONCAT(u.first_name, ' ', u.last_name) as "employeeName",
        d.name as "departmentName"
      FROM attendance_sessions s
      JOIN attendance_records ar ON s.attendance_record_id = ar.id
      JOIN employees e ON ar.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      ${whereClause}
      ORDER BY ${sortBy === 'timestamp' ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[34][0]++, 'COALESCE(s.clock_in, s.clock_out)') :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[34][1]++, `s.${sortBy}`)} ${sortOrder.toUpperCase()}
      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}
    `);
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[102]++;
    queryParams.push(limit, offset);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[103]++, await (0, database_1.getPool)().query(dataQuery, queryParams));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[104]++;
    return {
      sessions: result.rows,
      total,
      page,
      limit,
      totalPages: Math.ceil(total / limit)
    };
  }
  /**
   * Calculate hours between clock in and clock out sessions
   */
  async calculateSessionHours(attendanceRecordId) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[7]++;
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[105]++, `
      SELECT 
        clock_in.clock_in as clock_in_time,
        clock_out.clock_out as clock_out_time
      FROM attendance_sessions clock_in
      JOIN attendance_sessions clock_out ON clock_in.attendance_record_id = clock_out.attendance_record_id
      WHERE clock_in.attendance_record_id = $1
        AND clock_in.clock_in IS NOT NULL
        AND clock_out.clock_out IS NOT NULL
        AND clock_in.clock_in < clock_out.clock_out
      ORDER BY clock_in.clock_in DESC, clock_out.clock_out ASC
      LIMIT 1
    `);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[106]++, await (0, database_1.getPool)().query(query, [attendanceRecordId]));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[107]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_27s7xsdp9m().b[35][0]++;
      cov_27s7xsdp9m().s[108]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_27s7xsdp9m().b[35][1]++;
    }
    const {
      clock_in_time,
      clock_out_time
    } =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[109]++, result.rows[0]);
    const hours =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[110]++, (new Date(clock_out_time).getTime() - new Date(clock_in_time).getTime()) / (1000 * 60 * 60));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[111]++;
    return Math.max(0, hours);
  }
  /**
   * Get session statistics for an employee
   */
  async getEmployeeSessionStats(employeeId, startDate, endDate) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[8]++;
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[112]++, `
      SELECT 
        COUNT(*) as total_sessions,
        COUNT(*) FILTER (WHERE session_type = 'clock_in') as clock_in_sessions,
        COUNT(*) FILTER (WHERE session_type = 'clock_out') as clock_out_sessions,
        COALESCE(SUM(calculated_hours), 0) as total_hours
      FROM attendance_sessions s
      JOIN attendance_records ar ON s.attendance_record_id = ar.id
      WHERE ar.employee_id = $1 
        AND ar.date >= $2 
        AND ar.date <= $3
    `);
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[113]++, await (0, database_1.getPool)().query(query, [employeeId, startDate, endDate]));
    const stats =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[114]++, result.rows[0]);
    const totalDays =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[115]++, Math.max(1, Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24))));
    const averageHoursPerDay =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[116]++, parseFloat(stats.total_hours) / totalDays);
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[117]++;
    return {
      totalSessions:
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[36][0]++, parseInt(stats.total_sessions)) ||
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[36][1]++, 0),
      clockInSessions:
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[37][0]++, parseInt(stats.clock_in_sessions)) ||
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[37][1]++, 0),
      clockOutSessions:
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[38][0]++, parseInt(stats.clock_out_sessions)) ||
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[38][1]++, 0),
      totalHours:
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[39][0]++, parseFloat(stats.total_hours)) ||
      /* istanbul ignore next */
      (cov_27s7xsdp9m().b[39][1]++, 0),
      averageHoursPerDay: Math.round(averageHoursPerDay * 100) / 100
    };
  }
  /**
   * Delete attendance session
   */
  async deleteAttendanceSession(id) {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[9]++;
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[118]++, 'DELETE FROM attendance_sessions WHERE id = $1');
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[119]++, await (0, database_1.getPool)().query(query, [id]));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[120]++;
    return result.rowCount ?
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[40][0]++, result.rowCount > 0) :
    /* istanbul ignore next */
    (cov_27s7xsdp9m().b[40][1]++, false);
  }
  /**
   * Get attendance session count
   */
  async getAttendanceSessionCount() {
    /* istanbul ignore next */
    cov_27s7xsdp9m().f[10]++;
    const query =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[121]++, 'SELECT COUNT(*) as count FROM attendance_sessions');
    const result =
    /* istanbul ignore next */
    (cov_27s7xsdp9m().s[122]++, await (0, database_1.getPool)().query(query));
    /* istanbul ignore next */
    cov_27s7xsdp9m().s[123]++;
    return parseInt(result.rows[0].count);
  }
}
/* istanbul ignore next */
cov_27s7xsdp9m().s[124]++;
exports.AttendanceSessionModel = AttendanceSessionModel;
/* istanbul ignore next */
cov_27s7xsdp9m().s[125]++;
exports.attendanceSessionModel = new AttendanceSessionModel();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,