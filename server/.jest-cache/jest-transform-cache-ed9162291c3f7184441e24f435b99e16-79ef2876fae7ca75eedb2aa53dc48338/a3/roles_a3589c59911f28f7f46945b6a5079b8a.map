{"version":3,"names":["cov_2djzbnd4ks","actualCoverage","s","exports","USER_ROLES","HR","EMPLOYEE","DEPARTMENT_HEAD","ROLE_HIERARCHY","ROLE_DESCRIPTIONS","ROLE_PERMISSIONS","canCreateUsers","canUpdateUsers","canDeleteUsers","canViewAllUsers","canCreateEmployees","canUpdateEmployees","canDeleteEmployees","canViewAllEmployees","canCreateDepartments","canUpdateDepartments","canDeleteDepartments","canViewAllDepartments","canAssignDepartmentHeads","canCreatePayrollPeriods","canUpdatePayrollPeriods","canDeletePayrollPeriods","canViewAllPayrolls","canApprovePayrolls","canUpdateSystemSettings","canViewSystemSettings","canGenerateReports","canGenerateIDCards","canViewAllIDCards","canUpdateIDCards","canViewAllRequests","cannotApproveRequests","canViewAuditLogs","canExportData","canViewDepartmentEmployees","canViewOwnDepartment","canViewDepartmentPayrolls","canApproveDepartmentPayrolls","canViewDepartmentIDCards","canViewDepartmentRequests","canApproveTimeCorrections","canApproveOvertimeRequests","canApproveLeaveRequests","canViewDepartmentAuditLogs","canUpdateOwnProfile","canViewOwnProfile","canViewOwnPayrolls","canViewOwnIDCard","canViewOwnRequests","canSubmitTimeCorrections","canSubmitOvertimeRequests","canSubmitLeaveRequests","canApproveRequests","canClockIn","canClockOut","canViewOwnAttendance","canSubmitSelfie","canViewOwnAuditLogs","hasPermission","role","permission","f","b","canAccessRole","userRole","targetRole","getRolePermissions","isValidRole","Object","values","includes","getRoleDisplayName","displayNames"],"sources":["/home/kim/tito/server/src/utils/constants/roles.ts"],"sourcesContent":["// User roles for the TITO HR Management System\nexport const USER_ROLES = {\n  HR: 'hr',\n  EMPLOYEE: 'employee',\n  DEPARTMENT_HEAD: 'department_head',\n} as const;\n\n// Type for user roles\nexport type UserRole = typeof USER_ROLES[keyof typeof USER_ROLES];\n\n// Role hierarchy (higher number = more permissions)\nexport const ROLE_HIERARCHY = {\n  [USER_ROLES.EMPLOYEE]: 1,\n  [USER_ROLES.DEPARTMENT_HEAD]: 2,\n  [USER_ROLES.HR]: 3,\n} as const;\n\n// Role descriptions\nexport const ROLE_DESCRIPTIONS = {\n  [USER_ROLES.HR]: 'HR Administrator - Full system access and user management',\n  [USER_ROLES.DEPARTMENT_HEAD]: 'Department Head - Department-specific access',\n  [USER_ROLES.EMPLOYEE]: 'Employee - Personal access only',\n} as const;\n\n// Role permissions mapping\nexport const ROLE_PERMISSIONS = {\n  [USER_ROLES.HR]: {\n    // User Management\n    canCreateUsers: true,\n    canUpdateUsers: true,\n    canDeleteUsers: true,\n    canViewAllUsers: true,\n    \n    // Employee Management\n    canCreateEmployees: true,\n    canUpdateEmployees: true,\n    canDeleteEmployees: true,\n    canViewAllEmployees: true,\n    \n    // Department Management\n    canCreateDepartments: true,\n    canUpdateDepartments: true,\n    canDeleteDepartments: true,\n    canViewAllDepartments: true,\n    canAssignDepartmentHeads: true,\n    \n    // Payroll Management\n    canCreatePayrollPeriods: true,\n    canUpdatePayrollPeriods: true,\n    canDeletePayrollPeriods: true,\n    canViewAllPayrolls: true,\n    canApprovePayrolls: true,\n    \n    // System Settings\n    canUpdateSystemSettings: true,\n    canViewSystemSettings: true,\n    canGenerateReports: true,\n    \n    // ID Card Management\n    canGenerateIDCards: true,\n    canViewAllIDCards: true,\n    canUpdateIDCards: true,\n    \n    // Request Management (View Only)\n    canViewAllRequests: true,\n    cannotApproveRequests: true, // HR cannot approve time corrections or overtime\n    \n    // Audit & Compliance\n    canViewAuditLogs: true,\n    canExportData: true,\n  },\n  \n  [USER_ROLES.DEPARTMENT_HEAD]: {\n    // User Management\n    canCreateUsers: false,\n    canUpdateUsers: false,\n    canDeleteUsers: false,\n    canViewAllUsers: false,\n    \n    // Employee Management\n    canCreateEmployees: false,\n    canUpdateEmployees: false,\n    canDeleteEmployees: false,\n    canViewAllEmployees: false,\n    canViewDepartmentEmployees: true,\n    \n    // Department Management\n    canCreateDepartments: false,\n    canUpdateDepartments: false,\n    canDeleteDepartments: false,\n    canViewAllDepartments: false,\n    canViewOwnDepartment: true,\n    canAssignDepartmentHeads: false,\n    \n    // Payroll Management\n    canCreatePayrollPeriods: false,\n    canUpdatePayrollPeriods: false,\n    canDeletePayrollPeriods: false,\n    canViewAllPayrolls: false,\n    canViewDepartmentPayrolls: true,\n    canApproveDepartmentPayrolls: true,\n    \n    // System Settings\n    canUpdateSystemSettings: false,\n    canViewSystemSettings: false,\n    canGenerateReports: false,\n    \n    // ID Card Management\n    canGenerateIDCards: false,\n    canViewAllIDCards: false,\n    canViewDepartmentIDCards: true,\n    canUpdateIDCards: false,\n    \n    // Request Management (Approval Authority)\n    canViewAllRequests: false,\n    canViewDepartmentRequests: true,\n    canApproveTimeCorrections: true,\n    canApproveOvertimeRequests: true,\n    canApproveLeaveRequests: true,\n    \n    // Audit & Compliance\n    canViewAuditLogs: false,\n    canViewDepartmentAuditLogs: true,\n    canExportData: false,\n  },\n  \n  [USER_ROLES.EMPLOYEE]: {\n    // User Management\n    canCreateUsers: false,\n    canUpdateUsers: false,\n    canDeleteUsers: false,\n    canViewAllUsers: false,\n    canUpdateOwnProfile: true,\n    \n    // Employee Management\n    canCreateEmployees: false,\n    canUpdateEmployees: false,\n    canDeleteEmployees: false,\n    canViewAllEmployees: false,\n    canViewOwnProfile: true,\n    \n    // Department Management\n    canCreateDepartments: false,\n    canUpdateDepartments: false,\n    canDeleteDepartments: false,\n    canViewAllDepartments: false,\n    canViewOwnDepartment: true,\n    canAssignDepartmentHeads: false,\n    \n    // Payroll Management\n    canCreatePayrollPeriods: false,\n    canUpdatePayrollPeriods: false,\n    canDeletePayrollPeriods: false,\n    canViewAllPayrolls: false,\n    canViewOwnPayrolls: true,\n    canApprovePayrolls: false,\n    \n    // System Settings\n    canUpdateSystemSettings: false,\n    canViewSystemSettings: false,\n    canGenerateReports: false,\n    \n    // ID Card Management\n    canGenerateIDCards: false,\n    canViewAllIDCards: false,\n    canViewOwnIDCard: true,\n    canUpdateIDCards: false,\n    \n    // Request Management (Submission Only)\n    canViewAllRequests: false,\n    canViewOwnRequests: true,\n    canSubmitTimeCorrections: true,\n    canSubmitOvertimeRequests: true,\n    canSubmitLeaveRequests: true,\n    canApproveRequests: false,\n    \n    // Attendance Management\n    canClockIn: true,\n    canClockOut: true,\n    canViewOwnAttendance: true,\n    canSubmitSelfie: true,\n    \n    // Audit & Compliance\n    canViewAuditLogs: false,\n    canViewOwnAuditLogs: true,\n    canExportData: false,\n  },\n} as const;\n\n// Check if a role has a specific permission\nexport const hasPermission = (role: UserRole, permission: keyof typeof ROLE_PERMISSIONS[UserRole]): boolean => {\n  return ROLE_PERMISSIONS[role][permission] || false;\n};\n\n// Check if a role can access another role's data\nexport const canAccessRole = (userRole: UserRole, targetRole: UserRole): boolean => {\n  return ROLE_HIERARCHY[userRole] >= ROLE_HIERARCHY[targetRole];\n};\n\n// Get all permissions for a role\nexport const getRolePermissions = (role: UserRole): typeof ROLE_PERMISSIONS[UserRole] => {\n  return ROLE_PERMISSIONS[role];\n};\n\n// Validate if a role is valid\nexport const isValidRole = (role: string): role is UserRole => {\n  return Object.values(USER_ROLES).includes(role as UserRole);\n};\n\n// Get role display name\nexport const getRoleDisplayName = (role: UserRole): string => {\n  const displayNames = {\n    [USER_ROLES.HR]: 'HR Admin',\n    [USER_ROLES.DEPARTMENT_HEAD]: 'Department Head',\n    [USER_ROLES.EMPLOYEE]: 'Employee',\n  };\n  return displayNames[role];\n}; "],"mappings":"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","ignoreList":[]}