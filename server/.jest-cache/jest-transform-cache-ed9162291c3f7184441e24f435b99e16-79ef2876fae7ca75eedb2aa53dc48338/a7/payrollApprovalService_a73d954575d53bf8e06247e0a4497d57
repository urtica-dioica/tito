1257d6b4c0956a7db8cd6028f7ec37ea
"use strict";

/* istanbul ignore next */
function cov_2217y0ag8r() {
  var path = "/home/kim/tito/server/src/services/payroll/payrollApprovalService.ts";
  var hash = "2e705304740daaa59632d5b1f8591cb1543763b1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/services/payroll/payrollApprovalService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 73
        }
      },
      "39": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 73
        }
      },
      "40": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 63
        }
      },
      "41": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 81
        }
      },
      "42": {
        start: {
          line: 48,
          column: 28
        },
        end: {
          line: 48,
          column: 110
        }
      },
      "43": {
        start: {
          line: 48,
          column: 63
        },
        end: {
          line: 48,
          column: 109
        }
      },
      "44": {
        start: {
          line: 49,
          column: 21
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "45": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 82
        }
      },
      "46": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 82
        }
      },
      "47": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "48": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 56
        }
      },
      "49": {
        start: {
          line: 55,
          column: 23
        },
        end: {
          line: 55,
          column: 43
        }
      },
      "50": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "51": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 102
        }
      },
      "52": {
        start: {
          line: 60,
          column: 30
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "53": {
        start: {
          line: 64,
          column: 31
        },
        end: {
          line: 64,
          column: 103
        }
      },
      "54": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "55": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 92
        }
      },
      "56": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 75
        }
      },
      "57": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 71
        }
      },
      "58": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 79
        }
      },
      "59": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 76
        }
      },
      "60": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 90
        }
      },
      "61": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 83,
          column: 82
        }
      },
      "62": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "63": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 58
        }
      },
      "64": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "65": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 73
        }
      },
      "66": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "67": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 78
        }
      },
      "68": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "69": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 98,
          column: 114
        }
      },
      "70": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "71": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 65
        }
      },
      "72": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 79
        }
      },
      "73": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 31
        }
      },
      "74": {
        start: {
          line: 108,
          column: 28
        },
        end: {
          line: 108,
          column: 110
        }
      },
      "75": {
        start: {
          line: 108,
          column: 63
        },
        end: {
          line: 108,
          column: 109
        }
      },
      "76": {
        start: {
          line: 109,
          column: 21
        },
        end: {
          line: 109,
          column: 30
        }
      },
      "77": {
        start: {
          line: 110,
          column: 31
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "78": {
        start: {
          line: 116,
          column: 32
        },
        end: {
          line: 116,
          column: 64
        }
      },
      "79": {
        start: {
          line: 117,
          column: 26
        },
        end: {
          line: 117,
          column: 28
        }
      },
      "80": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "81": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "82": {
        start: {
          line: 121,
          column: 43
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "83": {
        start: {
          line: 127,
          column: 44
        },
        end: {
          line: 127,
          column: 123
        }
      },
      "84": {
        start: {
          line: 128,
          column: 38
        },
        end: {
          line: 128,
          column: 90
        }
      },
      "85": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 140,
          column: 17
        }
      },
      "86": {
        start: {
          line: 131,
          column: 41
        },
        end: {
          line: 136,
          column: 21
        }
      },
      "87": {
        start: {
          line: 137,
          column: 37
        },
        end: {
          line: 137,
          column: 104
        }
      },
      "88": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 45
        }
      },
      "89": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 143
        }
      },
      "90": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 146,
          column: 17
        }
      },
      "91": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 29
        }
      },
      "92": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 28
        }
      },
      "93": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 25
        }
      },
      "94": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 153,
          column: 77
        }
      },
      "95": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 110
        }
      },
      "96": {
        start: {
          line: 155,
          column: 63
        },
        end: {
          line: 155,
          column: 109
        }
      },
      "97": {
        start: {
          line: 156,
          column: 21
        },
        end: {
          line: 156,
          column: 30
        }
      },
      "98": {
        start: {
          line: 157,
          column: 29
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "99": {
        start: {
          line: 162,
          column: 30
        },
        end: {
          line: 162,
          column: 60
        }
      },
      "100": {
        start: {
          line: 163,
          column: 36
        },
        end: {
          line: 163,
          column: 84
        }
      },
      "101": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "102": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 73
        }
      },
      "103": {
        start: {
          line: 173,
          column: 28
        },
        end: {
          line: 173,
          column: 110
        }
      },
      "104": {
        start: {
          line: 173,
          column: 63
        },
        end: {
          line: 173,
          column: 109
        }
      },
      "105": {
        start: {
          line: 174,
          column: 21
        },
        end: {
          line: 174,
          column: 30
        }
      },
      "106": {
        start: {
          line: 176,
          column: 31
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "107": {
        start: {
          line: 182,
          column: 32
        },
        end: {
          line: 182,
          column: 83
        }
      },
      "108": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "109": {
        start: {
          line: 187,
          column: 31
        },
        end: {
          line: 187,
          column: 102
        }
      },
      "110": {
        start: {
          line: 187,
          column: 73
        },
        end: {
          line: 187,
          column: 98
        }
      },
      "111": {
        start: {
          line: 188,
          column: 30
        },
        end: {
          line: 188,
          column: 97
        }
      },
      "112": {
        start: {
          line: 188,
          column: 61
        },
        end: {
          line: 188,
          column: 84
        }
      },
      "113": {
        start: {
          line: 189,
          column: 30
        },
        end: {
          line: 189,
          column: 97
        }
      },
      "114": {
        start: {
          line: 189,
          column: 61
        },
        end: {
          line: 189,
          column: 84
        }
      },
      "115": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "116": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "117": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 32
        }
      },
      "118": {
        start: {
          line: 201,
          column: 13
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "119": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 36
        }
      },
      "120": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 87
        }
      },
      "121": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 19
        }
      },
      "122": {
        start: {
          line: 211,
          column: 28
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "123": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 68
        }
      },
      "124": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 220,
          column: 11
        }
      },
      "125": {
        start: {
          line: 227,
          column: 28
        },
        end: {
          line: 227,
          column: 110
        }
      },
      "126": {
        start: {
          line: 227,
          column: 63
        },
        end: {
          line: 227,
          column: 109
        }
      },
      "127": {
        start: {
          line: 228,
          column: 21
        },
        end: {
          line: 228,
          column: 30
        }
      },
      "128": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 185
        }
      },
      "129": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 139
        }
      },
      "130": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 93
        }
      },
      "131": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 110
        }
      },
      "132": {
        start: {
          line: 236,
          column: 63
        },
        end: {
          line: 236,
          column: 109
        }
      },
      "133": {
        start: {
          line: 237,
          column: 21
        },
        end: {
          line: 237,
          column: 30
        }
      },
      "134": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "135": {
        start: {
          line: 244,
          column: 29
        },
        end: {
          line: 244,
          column: 77
        }
      },
      "136": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "137": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 56
        }
      },
      "138": {
        start: {
          line: 248,
          column: 23
        },
        end: {
          line: 248,
          column: 43
        }
      },
      "139": {
        start: {
          line: 250,
          column: 31
        },
        end: {
          line: 263,
          column: 5
        }
      },
      "140": {
        start: {
          line: 264,
          column: 32
        },
        end: {
          line: 264,
          column: 83
        }
      },
      "141": {
        start: {
          line: 265,
          column: 26
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "142": {
        start: {
          line: 265,
          column: 59
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "143": {
        start: {
          line: 273,
          column: 31
        },
        end: {
          line: 273,
          column: 47
        }
      },
      "144": {
        start: {
          line: 274,
          column: 33
        },
        end: {
          line: 274,
          column: 85
        }
      },
      "145": {
        start: {
          line: 274,
          column: 55
        },
        end: {
          line: 274,
          column: 77
        }
      },
      "146": {
        start: {
          line: 275,
          column: 34
        },
        end: {
          line: 275,
          column: 87
        }
      },
      "147": {
        start: {
          line: 275,
          column: 56
        },
        end: {
          line: 275,
          column: 79
        }
      },
      "148": {
        start: {
          line: 276,
          column: 34
        },
        end: {
          line: 276,
          column: 87
        }
      },
      "149": {
        start: {
          line: 276,
          column: 56
        },
        end: {
          line: 276,
          column: 79
        }
      },
      "150": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 286,
          column: 10
        }
      },
      "151": {
        start: {
          line: 289,
          column: 0
        },
        end: {
          line: 289,
          column: 56
        }
      },
      "152": {
        start: {
          line: 290,
          column: 0
        },
        end: {
          line: 290,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 38
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 46
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 58
          }
        },
        loc: {
          start: {
            line: 48,
            column: 63
          },
          end: {
            line: 48,
            column: 109
          }
        },
        line: 48
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 33
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 70
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 73
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 76
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 53
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 82
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 59
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 106
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 108,
            column: 57
          },
          end: {
            line: 108,
            column: 58
          }
        },
        loc: {
          start: {
            line: 108,
            column: 63
          },
          end: {
            line: 108,
            column: 109
          }
        },
        line: 108
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 36
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 152
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 155,
            column: 57
          },
          end: {
            line: 155,
            column: 58
          }
        },
        loc: {
          start: {
            line: 155,
            column: 63
          },
          end: {
            line: 155,
            column: 109
          }
        },
        line: 155
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 36
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 169
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 61
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 172
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 173,
            column: 57
          },
          end: {
            line: 173,
            column: 58
          }
        },
        loc: {
          start: {
            line: 173,
            column: 63
          },
          end: {
            line: 173,
            column: 109
          }
        },
        line: 173
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 187,
            column: 59
          },
          end: {
            line: 187,
            column: 60
          }
        },
        loc: {
          start: {
            line: 187,
            column: 73
          },
          end: {
            line: 187,
            column: 98
          }
        },
        line: 187
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 188,
            column: 56
          },
          end: {
            line: 188,
            column: 57
          }
        },
        loc: {
          start: {
            line: 188,
            column: 61
          },
          end: {
            line: 188,
            column: 84
          }
        },
        line: 188
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 189,
            column: 56
          },
          end: {
            line: 189,
            column: 57
          }
        },
        loc: {
          start: {
            line: 189,
            column: 61
          },
          end: {
            line: 189,
            column: 84
          }
        },
        line: 189
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 56
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 226
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 227,
            column: 57
          },
          end: {
            line: 227,
            column: 58
          }
        },
        loc: {
          start: {
            line: 227,
            column: 63
          },
          end: {
            line: 227,
            column: 109
          }
        },
        line: 227
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 53
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 235
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 236,
            column: 57
          },
          end: {
            line: 236,
            column: 58
          }
        },
        loc: {
          start: {
            line: 236,
            column: 63
          },
          end: {
            line: 236,
            column: 109
          }
        },
        line: 236
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 265,
            column: 51
          },
          end: {
            line: 265,
            column: 52
          }
        },
        loc: {
          start: {
            line: 265,
            column: 59
          },
          end: {
            line: 272,
            column: 9
          }
        },
        line: 265
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 274,
            column: 50
          },
          end: {
            line: 274,
            column: 51
          }
        },
        loc: {
          start: {
            line: 274,
            column: 55
          },
          end: {
            line: 274,
            column: 77
          }
        },
        line: 274
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 275,
            column: 51
          },
          end: {
            line: 275,
            column: 52
          }
        },
        loc: {
          start: {
            line: 275,
            column: 56
          },
          end: {
            line: 275,
            column: 79
          }
        },
        line: 275
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 276,
            column: 51
          },
          end: {
            line: 276,
            column: 52
          }
        },
        loc: {
          start: {
            line: 276,
            column: 56
          },
          end: {
            line: 276,
            column: 79
          }
        },
        line: 276
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "21": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "22": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "23": {
        loc: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 40
          },
          end: {
            line: 76,
            column: 42
          }
        }],
        line: 76
      },
      "24": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "25": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "26": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "27": {
        loc: {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 94,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 36
          },
          end: {
            line: 94,
            column: 46
          }
        }, {
          start: {
            line: 94,
            column: 49
          },
          end: {
            line: 94,
            column: 59
          }
        }],
        line: 94
      },
      "28": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "29": {
        loc: {
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 140,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 140,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "30": {
        loc: {
          start: {
            line: 144,
            column: 16
          },
          end: {
            line: 146,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 16
          },
          end: {
            line: 146,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "31": {
        loc: {
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 144,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 144,
            column: 42
          }
        }, {
          start: {
            line: 144,
            column: 46
          },
          end: {
            line: 144,
            column: 86
          }
        }],
        line: 144
      },
      "32": {
        loc: {
          start: {
            line: 163,
            column: 36
          },
          end: {
            line: 163,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 36
          },
          end: {
            line: 163,
            column: 79
          }
        }, {
          start: {
            line: 163,
            column: 83
          },
          end: {
            line: 163,
            column: 84
          }
        }],
        line: 163
      },
      "33": {
        loc: {
          start: {
            line: 188,
            column: 30
          },
          end: {
            line: 188,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 30
          },
          end: {
            line: 188,
            column: 92
          }
        }, {
          start: {
            line: 188,
            column: 96
          },
          end: {
            line: 188,
            column: 97
          }
        }],
        line: 188
      },
      "34": {
        loc: {
          start: {
            line: 189,
            column: 30
          },
          end: {
            line: 189,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 30
          },
          end: {
            line: 189,
            column: 92
          }
        }, {
          start: {
            line: 189,
            column: 96
          },
          end: {
            line: 189,
            column: 97
          }
        }],
        line: 189
      },
      "35": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: 201,
            column: 13
          },
          end: {
            line: 209,
            column: 9
          }
        }],
        line: 197
      },
      "36": {
        loc: {
          start: {
            line: 201,
            column: 13
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 13
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: 205,
            column: 13
          },
          end: {
            line: 209,
            column: 9
          }
        }],
        line: 201
      },
      "37": {
        loc: {
          start: {
            line: 201,
            column: 17
          },
          end: {
            line: 201,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 17
          },
          end: {
            line: 201,
            column: 49
          }
        }, {
          start: {
            line: 201,
            column: 53
          },
          end: {
            line: 201,
            column: 71
          }
        }],
        line: 201
      },
      "38": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/services/payroll/payrollApprovalService.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/services/payroll/payrollApprovalService.ts"],
      sourcesContent: ["import { PayrollApprovalModel, CreatePayrollApprovalData, UpdatePayrollApprovalData, PayrollApproval, PayrollApprovalWithDetails, PayrollApprovalListParams } from '../../models/payroll/PayrollApproval';\nimport logger from '../../utils/logger';\n\nexport interface ApprovePayrollData {\n  approvalId: string;\n  approverId: string;\n  approved: boolean;\n  comments?: string;\n}\n\nexport interface PayrollApprovalStats {\n  totalApprovals: number;\n  pendingApprovals: number;\n  approvedApprovals: number;\n  rejectedApprovals: number;\n  approvalsByDepartment: Array<{ departmentName: string; count: number }>;\n  approvalsByApprover: Array<{ approverName: string; count: number }>;\n  averageApprovalTime: number; // in hours\n}\n\nexport class PayrollApprovalService {\n  private payrollApprovalModel: PayrollApprovalModel;\n\n  constructor() {\n    this.payrollApprovalModel = new PayrollApprovalModel();\n  }\n\n  async createPayrollApproval(data: CreatePayrollApprovalData): Promise<PayrollApproval> {\n    // Validate that the payroll period exists and is in the correct status\n    const { getPool } = await import('../../config/database');\n    const pool = getPool();\n    \n    const periodQuery = 'SELECT id, status FROM payroll_periods WHERE id = $1';\n    const periodResult = await pool.query(periodQuery, [data.payrollPeriodId]);\n    \n    if (periodResult.rows.length === 0) {\n      throw new Error('Payroll period not found');\n    }\n    \n    const period = periodResult.rows[0];\n    if (period.status !== 'sent_for_review') {\n      throw new Error('Payroll period must be in \"sent_for_review\" status to create approvals');\n    }\n\n    // Check if approval already exists for this period and approver\n    const existingQuery = `\n      SELECT id FROM payroll_approvals \n      WHERE payroll_period_id = $1 AND approver_id = $2\n    `;\n    const existingResult = await pool.query(existingQuery, [data.payrollPeriodId, data.approverId]);\n    \n    if (existingResult.rows.length > 0) {\n      throw new Error('Approval already exists for this payroll period and approver');\n    }\n\n    return await this.payrollApprovalModel.createPayrollApproval(data);\n  }\n\n  async getPayrollApproval(id: string): Promise<PayrollApprovalWithDetails | null> {\n    return await this.payrollApprovalModel.findByIdWithDetails(id);\n  }\n\n  async updatePayrollApproval(id: string, data: UpdatePayrollApprovalData): Promise<PayrollApproval | null> {\n    return await this.payrollApprovalModel.updatePayrollApproval(id, data);\n  }\n\n  async listPayrollApprovals(params: PayrollApprovalListParams = {}): Promise<{\n    approvals: PayrollApprovalWithDetails[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    return await this.payrollApprovalModel.listPayrollApprovals(params);\n  }\n\n  async getPendingApprovalsForApprover(approverId: string): Promise<PayrollApprovalWithDetails[]> {\n    return await this.payrollApprovalModel.getPendingApprovalsForApprover(approverId);\n  }\n\n  async approvePayrollApproval(data: ApprovePayrollData): Promise<PayrollApproval> {\n    const approval = await this.payrollApprovalModel.findById(data.approvalId);\n    if (!approval) {\n      throw new Error('Payroll approval not found');\n    }\n\n    if (approval.status !== 'pending') {\n      throw new Error('Payroll approval is not in pending status');\n    }\n\n    if (approval.approverId !== data.approverId) {\n      throw new Error('User is not authorized to approve this payroll');\n    }\n\n    const updateData: UpdatePayrollApprovalData = {\n      status: data.approved ? 'approved' : 'rejected',\n      comments: data.comments,\n      approvedAt: new Date()\n    };\n\n    const updatedApproval = await this.payrollApprovalModel.updatePayrollApproval(data.approvalId, updateData);\n    if (!updatedApproval) {\n      throw new Error('Failed to update payroll approval');\n    }\n\n    // Check if all approvals for this payroll period are now complete\n    await this.checkAndUpdatePayrollPeriodStatus(approval.payrollPeriodId);\n\n    return updatedApproval;\n  }\n\n  async createApprovalsForPayrollPeriod(payrollPeriodId: string): Promise<PayrollApproval[]> {\n    // Get all department heads who should approve payroll for their departments\n    const { getPool } = await import('../../config/database');\n    const pool = getPool();\n    \n    const approversQuery = `\n      SELECT DISTINCT u.id as user_id, u.role, d.id as department_id, d.name as department_name\n      FROM users u\n      INNER JOIN departments d ON u.id = d.department_head_user_id\n      WHERE u.role = 'department_head' AND u.is_active = true AND d.is_active = true\n    `;\n    \n    const approversResult = await pool.query(approversQuery);\n    const approvals: PayrollApproval[] = [];\n\n    for (const approver of approversResult.rows) {\n      try {\n        // Check if there are employees in this department for this payroll period\n        const employeeCountQuery = `\n          SELECT COUNT(*) as employee_count\n          FROM payroll_records pr\n          INNER JOIN employees e ON pr.employee_id = e.id\n          WHERE pr.payroll_period_id = $1 AND e.department_id = $2\n        `;\n        \n        const employeeCountResult = await pool.query(employeeCountQuery, [payrollPeriodId, approver.department_id]);\n        const employeeCount = parseInt(employeeCountResult.rows[0].employee_count);\n        \n        // Only create approval if there are employees in this department\n        if (employeeCount > 0) {\n          const approvalData: CreatePayrollApprovalData = {\n            payrollPeriodId,\n            approverId: approver.user_id,\n            departmentId: approver.department_id,\n            status: 'pending'\n          };\n\n          const approval = await this.payrollApprovalModel.createPayrollApproval(approvalData);\n          approvals.push(approval);\n          \n          logger.info(`Created payroll approval for department: ${approver.department_name} (${employeeCount} employees)`);\n        }\n      } catch (error) {\n        // Skip if approval already exists\n        if (error instanceof Error && error.message.includes('already exists')) {\n          continue;\n        }\n        throw error;\n      }\n    }\n\n    return approvals;\n  }\n\n  async getPayrollApprovalStats(): Promise<PayrollApprovalStats> {\n    const basicStats = await this.payrollApprovalModel.getApprovalStats();\n    \n    // Calculate average approval time\n    const { getPool } = await import('../../config/database');\n    const pool = getPool();\n    \n    const avgTimeQuery = `\n      SELECT AVG(EXTRACT(EPOCH FROM (approved_at - created_at))/3600) as avg_hours\n      FROM payroll_approvals \n      WHERE approved_at IS NOT NULL\n    `;\n    \n    const avgTimeResult = await pool.query(avgTimeQuery);\n    const averageApprovalTime = parseFloat(avgTimeResult.rows[0].avg_hours) || 0;\n\n    return {\n      ...basicStats,\n      averageApprovalTime\n    };\n  }\n\n  async deletePayrollApproval(id: string): Promise<boolean> {\n    return await this.payrollApprovalModel.deletePayrollApproval(id);\n  }\n\n  async checkAndUpdatePayrollPeriodStatus(payrollPeriodId: string): Promise<void> {\n    const { getPool } = await import('../../config/database');\n    const pool = getPool();\n    \n    // Get all approvals for this payroll period\n    const approvalsQuery = `\n      SELECT status, COUNT(*) as count\n      FROM payroll_approvals \n      WHERE payroll_period_id = $1\n      GROUP BY status\n    `;\n    \n    const approvalsResult = await pool.query(approvalsQuery, [payrollPeriodId]);\n    \n    logger.info('Checking payroll period status', {\n      payrollPeriodId,\n      approvalsResult: approvalsResult.rows\n    });\n    \n    const totalApprovals = approvalsResult.rows.reduce((sum, row) => sum + parseInt(row.count), 0);\n    const approvedCount = approvalsResult.rows.find(r => r.status === 'approved')?.count || 0;\n    const rejectedCount = approvalsResult.rows.find(r => r.status === 'rejected')?.count || 0;\n\n    logger.info('Approval counts', {\n      payrollPeriodId,\n      totalApprovals,\n      approvedCount,\n      rejectedCount\n    });\n\n    let newStatus: string;\n    \n    if (rejectedCount > 0) {\n      // If any approval is rejected, mark as draft\n      newStatus = 'draft';\n    } else if (approvedCount === totalApprovals && totalApprovals > 0) {\n      // If all approvals are approved, mark as completed\n      newStatus = 'completed';\n    } else {\n      // Still pending\n      logger.info('Payroll period still pending', { payrollPeriodId });\n      return;\n    }\n\n    // Update payroll period status\n    const updateQuery = `\n      UPDATE payroll_periods \n      SET status = $1, updated_at = CURRENT_TIMESTAMP\n      WHERE id = $2\n    `;\n    \n    await pool.query(updateQuery, [newStatus, payrollPeriodId]);\n    \n    logger.info('Updated payroll period status', {\n      payrollPeriodId,\n      newStatus\n    });\n  }\n\n  /**\n   * Reset approval status for all approvals in a payroll period\n   * This is used when reprocessing payroll to require re-approval\n   */\n  async resetApprovalStatusForPeriod(payrollPeriodId: string): Promise<void> {\n    const { getPool } = await import('../../config/database');\n    const pool = getPool();\n    \n    // Reset all approvals for this period to pending\n    await pool.query(\n      'UPDATE payroll_approvals SET status = $1, comments = NULL, approved_at = NULL, updated_at = NOW() WHERE payroll_period_id = $2',\n      ['pending', payrollPeriodId]\n    );\n    \n    // Reset payroll period status to sent_for_review\n    await pool.query(\n      'UPDATE payroll_periods SET status = $1, updated_at = NOW() WHERE id = $2',\n      ['sent_for_review', payrollPeriodId]\n    );\n    \n    logger.info(`Reset approval status for payroll period ${payrollPeriodId}`);\n  }\n\n  async getApprovalWorkflowStatus(payrollPeriodId: string): Promise<{\n    periodId: string;\n    periodName: string;\n    periodStatus: string;\n    totalApprovals: number;\n    pendingApprovals: number;\n    approvedApprovals: number;\n    rejectedApprovals: number;\n    approvals: Array<{\n      id: string;\n      approverName: string;\n      departmentName: string | null;\n      status: string;\n      approvedAt: Date | null;\n      comments: string | null;\n    }>;\n  }> {\n    const { getPool } = await import('../../config/database');\n    const pool = getPool();\n    \n    // Get payroll period info\n    const periodQuery = `\n      SELECT id, period_name, status\n      FROM payroll_periods \n      WHERE id = $1\n    `;\n    const periodResult = await pool.query(periodQuery, [payrollPeriodId]);\n    \n    if (periodResult.rows.length === 0) {\n      throw new Error('Payroll period not found');\n    }\n    \n    const period = periodResult.rows[0];\n    \n    // Get all approvals with details\n    const approvalsQuery = `\n      SELECT \n        pa.id,\n        pa.status,\n        pa.approved_at,\n        pa.comments,\n        CONCAT(u.first_name, ' ', u.last_name) as approver_name,\n        d.name as department_name\n      FROM payroll_approvals pa\n      JOIN users u ON pa.approver_id = u.id\n      LEFT JOIN departments d ON pa.department_id = d.id\n      WHERE pa.payroll_period_id = $1\n      ORDER BY pa.created_at ASC\n    `;\n    \n    const approvalsResult = await pool.query(approvalsQuery, [payrollPeriodId]);\n    \n    const approvals = approvalsResult.rows.map(row => ({\n      id: row.id,\n      approverName: row.approver_name,\n      departmentName: row.department_name,\n      status: row.status,\n      approvedAt: row.approved_at,\n      comments: row.comments\n    }));\n    \n    const totalApprovals = approvals.length;\n    const pendingApprovals = approvals.filter(a => a.status === 'pending').length;\n    const approvedApprovals = approvals.filter(a => a.status === 'approved').length;\n    const rejectedApprovals = approvals.filter(a => a.status === 'rejected').length;\n\n    return {\n      periodId: period.id,\n      periodName: period.period_name,\n      periodStatus: period.status,\n      totalApprovals,\n      pendingApprovals,\n      approvedApprovals,\n      rejectedApprovals,\n      approvals\n    };\n  }\n}\n\nexport const payrollApprovalService = new PayrollApprovalService();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2e705304740daaa59632d5b1f8591cb1543763b1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2217y0ag8r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2217y0ag8r();
var __createBinding =
/* istanbul ignore next */
(cov_2217y0ag8r().s[0]++,
/* istanbul ignore next */
(cov_2217y0ag8r().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2217y0ag8r().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2217y0ag8r().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2217y0ag8r().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2217y0ag8r().f[0]++;
  cov_2217y0ag8r().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2217y0ag8r().b[2][0]++;
    cov_2217y0ag8r().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2217y0ag8r().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2217y0ag8r().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2217y0ag8r().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[5][1]++,
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2217y0ag8r().b[3][0]++;
    cov_2217y0ag8r().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2217y0ag8r().f[1]++;
        cov_2217y0ag8r().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2217y0ag8r().b[3][1]++;
  }
  cov_2217y0ag8r().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2217y0ag8r().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2217y0ag8r().f[2]++;
  cov_2217y0ag8r().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2217y0ag8r().b[7][0]++;
    cov_2217y0ag8r().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2217y0ag8r().b[7][1]++;
  }
  cov_2217y0ag8r().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2217y0ag8r().s[11]++,
/* istanbul ignore next */
(cov_2217y0ag8r().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2217y0ag8r().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2217y0ag8r().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2217y0ag8r().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2217y0ag8r().f[3]++;
  cov_2217y0ag8r().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2217y0ag8r().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2217y0ag8r().f[4]++;
  cov_2217y0ag8r().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2217y0ag8r().s[14]++,
/* istanbul ignore next */
(cov_2217y0ag8r().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2217y0ag8r().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2217y0ag8r().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2217y0ag8r().f[5]++;
  cov_2217y0ag8r().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[6]++;
    cov_2217y0ag8r().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2217y0ag8r().s[17]++, []);
      /* istanbul ignore next */
      cov_2217y0ag8r().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2217y0ag8r().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2217y0ag8r().b[12][0]++;
          cov_2217y0ag8r().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2217y0ag8r().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2217y0ag8r().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2217y0ag8r().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2217y0ag8r().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[8]++;
    cov_2217y0ag8r().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[13][0]++;
      cov_2217y0ag8r().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[26]++, {});
    /* istanbul ignore next */
    cov_2217y0ag8r().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[15][0]++;
      cov_2217y0ag8r().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2217y0ag8r().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2217y0ag8r().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2217y0ag8r().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2217y0ag8r().b[16][0]++;
          cov_2217y0ag8r().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2217y0ag8r().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[15][1]++;
    }
    cov_2217y0ag8r().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2217y0ag8r().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_2217y0ag8r().s[35]++,
/* istanbul ignore next */
(cov_2217y0ag8r().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_2217y0ag8r().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2217y0ag8r().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2217y0ag8r().f[9]++;
  cov_2217y0ag8r().s[36]++;
  return /* istanbul ignore next */(cov_2217y0ag8r().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2217y0ag8r().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2217y0ag8r().s[38]++;
exports.payrollApprovalService = exports.PayrollApprovalService = void 0;
const PayrollApproval_1 =
/* istanbul ignore next */
(cov_2217y0ag8r().s[39]++, require("../../models/payroll/PayrollApproval"));
const logger_1 =
/* istanbul ignore next */
(cov_2217y0ag8r().s[40]++, __importDefault(require("../../utils/logger")));
class PayrollApprovalService {
  constructor() {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[10]++;
    cov_2217y0ag8r().s[41]++;
    this.payrollApprovalModel = new PayrollApproval_1.PayrollApprovalModel();
  }
  async createPayrollApproval(data) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[11]++;
    // Validate that the payroll period exists and is in the correct status
    const {
      getPool
    } =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[42]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[12]++;
      cov_2217y0ag8r().s[43]++;
      return __importStar(require('../../config/database'));
    }));
    const pool =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[44]++, getPool());
    const periodQuery =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[45]++, 'SELECT id, status FROM payroll_periods WHERE id = $1');
    const periodResult =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[46]++, await pool.query(periodQuery, [data.payrollPeriodId]));
    /* istanbul ignore next */
    cov_2217y0ag8r().s[47]++;
    if (periodResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[20][0]++;
      cov_2217y0ag8r().s[48]++;
      throw new Error('Payroll period not found');
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[20][1]++;
    }
    const period =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[49]++, periodResult.rows[0]);
    /* istanbul ignore next */
    cov_2217y0ag8r().s[50]++;
    if (period.status !== 'sent_for_review') {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[21][0]++;
      cov_2217y0ag8r().s[51]++;
      throw new Error('Payroll period must be in "sent_for_review" status to create approvals');
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[21][1]++;
    }
    // Check if approval already exists for this period and approver
    const existingQuery =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[52]++, `
      SELECT id FROM payroll_approvals 
      WHERE payroll_period_id = $1 AND approver_id = $2
    `);
    const existingResult =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[53]++, await pool.query(existingQuery, [data.payrollPeriodId, data.approverId]));
    /* istanbul ignore next */
    cov_2217y0ag8r().s[54]++;
    if (existingResult.rows.length > 0) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[22][0]++;
      cov_2217y0ag8r().s[55]++;
      throw new Error('Approval already exists for this payroll period and approver');
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[22][1]++;
    }
    cov_2217y0ag8r().s[56]++;
    return await this.payrollApprovalModel.createPayrollApproval(data);
  }
  async getPayrollApproval(id) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[13]++;
    cov_2217y0ag8r().s[57]++;
    return await this.payrollApprovalModel.findByIdWithDetails(id);
  }
  async updatePayrollApproval(id, data) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[14]++;
    cov_2217y0ag8r().s[58]++;
    return await this.payrollApprovalModel.updatePayrollApproval(id, data);
  }
  async listPayrollApprovals(params =
  /* istanbul ignore next */
  (cov_2217y0ag8r().b[23][0]++, {})) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[15]++;
    cov_2217y0ag8r().s[59]++;
    return await this.payrollApprovalModel.listPayrollApprovals(params);
  }
  async getPendingApprovalsForApprover(approverId) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[16]++;
    cov_2217y0ag8r().s[60]++;
    return await this.payrollApprovalModel.getPendingApprovalsForApprover(approverId);
  }
  async approvePayrollApproval(data) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[17]++;
    const approval =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[61]++, await this.payrollApprovalModel.findById(data.approvalId));
    /* istanbul ignore next */
    cov_2217y0ag8r().s[62]++;
    if (!approval) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[24][0]++;
      cov_2217y0ag8r().s[63]++;
      throw new Error('Payroll approval not found');
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[24][1]++;
    }
    cov_2217y0ag8r().s[64]++;
    if (approval.status !== 'pending') {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[25][0]++;
      cov_2217y0ag8r().s[65]++;
      throw new Error('Payroll approval is not in pending status');
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[25][1]++;
    }
    cov_2217y0ag8r().s[66]++;
    if (approval.approverId !== data.approverId) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[26][0]++;
      cov_2217y0ag8r().s[67]++;
      throw new Error('User is not authorized to approve this payroll');
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[26][1]++;
    }
    const updateData =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[68]++, {
      status: data.approved ?
      /* istanbul ignore next */
      (cov_2217y0ag8r().b[27][0]++, 'approved') :
      /* istanbul ignore next */
      (cov_2217y0ag8r().b[27][1]++, 'rejected'),
      comments: data.comments,
      approvedAt: new Date()
    });
    const updatedApproval =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[69]++, await this.payrollApprovalModel.updatePayrollApproval(data.approvalId, updateData));
    /* istanbul ignore next */
    cov_2217y0ag8r().s[70]++;
    if (!updatedApproval) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[28][0]++;
      cov_2217y0ag8r().s[71]++;
      throw new Error('Failed to update payroll approval');
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[28][1]++;
    }
    // Check if all approvals for this payroll period are now complete
    cov_2217y0ag8r().s[72]++;
    await this.checkAndUpdatePayrollPeriodStatus(approval.payrollPeriodId);
    /* istanbul ignore next */
    cov_2217y0ag8r().s[73]++;
    return updatedApproval;
  }
  async createApprovalsForPayrollPeriod(payrollPeriodId) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[18]++;
    // Get all department heads who should approve payroll for their departments
    const {
      getPool
    } =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[74]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[19]++;
      cov_2217y0ag8r().s[75]++;
      return __importStar(require('../../config/database'));
    }));
    const pool =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[76]++, getPool());
    const approversQuery =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[77]++, `
      SELECT DISTINCT u.id as user_id, u.role, d.id as department_id, d.name as department_name
      FROM users u
      INNER JOIN departments d ON u.id = d.department_head_user_id
      WHERE u.role = 'department_head' AND u.is_active = true AND d.is_active = true
    `);
    const approversResult =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[78]++, await pool.query(approversQuery));
    const approvals =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[79]++, []);
    /* istanbul ignore next */
    cov_2217y0ag8r().s[80]++;
    for (const approver of approversResult.rows) {
      /* istanbul ignore next */
      cov_2217y0ag8r().s[81]++;
      try {
        // Check if there are employees in this department for this payroll period
        const employeeCountQuery =
        /* istanbul ignore next */
        (cov_2217y0ag8r().s[82]++, `
          SELECT COUNT(*) as employee_count
          FROM payroll_records pr
          INNER JOIN employees e ON pr.employee_id = e.id
          WHERE pr.payroll_period_id = $1 AND e.department_id = $2
        `);
        const employeeCountResult =
        /* istanbul ignore next */
        (cov_2217y0ag8r().s[83]++, await pool.query(employeeCountQuery, [payrollPeriodId, approver.department_id]));
        const employeeCount =
        /* istanbul ignore next */
        (cov_2217y0ag8r().s[84]++, parseInt(employeeCountResult.rows[0].employee_count));
        // Only create approval if there are employees in this department
        /* istanbul ignore next */
        cov_2217y0ag8r().s[85]++;
        if (employeeCount > 0) {
          /* istanbul ignore next */
          cov_2217y0ag8r().b[29][0]++;
          const approvalData =
          /* istanbul ignore next */
          (cov_2217y0ag8r().s[86]++, {
            payrollPeriodId,
            approverId: approver.user_id,
            departmentId: approver.department_id,
            status: 'pending'
          });
          const approval =
          /* istanbul ignore next */
          (cov_2217y0ag8r().s[87]++, await this.payrollApprovalModel.createPayrollApproval(approvalData));
          /* istanbul ignore next */
          cov_2217y0ag8r().s[88]++;
          approvals.push(approval);
          /* istanbul ignore next */
          cov_2217y0ag8r().s[89]++;
          logger_1.default.info(`Created payroll approval for department: ${approver.department_name} (${employeeCount} employees)`);
        } else
        /* istanbul ignore next */
        {
          cov_2217y0ag8r().b[29][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2217y0ag8r().s[90]++;
        // Skip if approval already exists
        if (
        /* istanbul ignore next */
        (cov_2217y0ag8r().b[31][0]++, error instanceof Error) &&
        /* istanbul ignore next */
        (cov_2217y0ag8r().b[31][1]++, error.message.includes('already exists'))) {
          /* istanbul ignore next */
          cov_2217y0ag8r().b[30][0]++;
          cov_2217y0ag8r().s[91]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_2217y0ag8r().b[30][1]++;
        }
        cov_2217y0ag8r().s[92]++;
        throw error;
      }
    }
    /* istanbul ignore next */
    cov_2217y0ag8r().s[93]++;
    return approvals;
  }
  async getPayrollApprovalStats() {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[20]++;
    const basicStats =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[94]++, await this.payrollApprovalModel.getApprovalStats());
    // Calculate average approval time
    const {
      getPool
    } =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[95]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[21]++;
      cov_2217y0ag8r().s[96]++;
      return __importStar(require('../../config/database'));
    }));
    const pool =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[97]++, getPool());
    const avgTimeQuery =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[98]++, `
      SELECT AVG(EXTRACT(EPOCH FROM (approved_at - created_at))/3600) as avg_hours
      FROM payroll_approvals 
      WHERE approved_at IS NOT NULL
    `);
    const avgTimeResult =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[99]++, await pool.query(avgTimeQuery));
    const averageApprovalTime =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[100]++,
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[32][0]++, parseFloat(avgTimeResult.rows[0].avg_hours)) ||
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[32][1]++, 0));
    /* istanbul ignore next */
    cov_2217y0ag8r().s[101]++;
    return {
      ...basicStats,
      averageApprovalTime
    };
  }
  async deletePayrollApproval(id) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[22]++;
    cov_2217y0ag8r().s[102]++;
    return await this.payrollApprovalModel.deletePayrollApproval(id);
  }
  async checkAndUpdatePayrollPeriodStatus(payrollPeriodId) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[23]++;
    const {
      getPool
    } =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[103]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[24]++;
      cov_2217y0ag8r().s[104]++;
      return __importStar(require('../../config/database'));
    }));
    const pool =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[105]++, getPool());
    // Get all approvals for this payroll period
    const approvalsQuery =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[106]++, `
      SELECT status, COUNT(*) as count
      FROM payroll_approvals 
      WHERE payroll_period_id = $1
      GROUP BY status
    `);
    const approvalsResult =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[107]++, await pool.query(approvalsQuery, [payrollPeriodId]));
    /* istanbul ignore next */
    cov_2217y0ag8r().s[108]++;
    logger_1.default.info('Checking payroll period status', {
      payrollPeriodId,
      approvalsResult: approvalsResult.rows
    });
    const totalApprovals =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[109]++, approvalsResult.rows.reduce((sum, row) => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[25]++;
      cov_2217y0ag8r().s[110]++;
      return sum + parseInt(row.count);
    }, 0));
    const approvedCount =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[111]++,
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[33][0]++, approvalsResult.rows.find(r => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[26]++;
      cov_2217y0ag8r().s[112]++;
      return r.status === 'approved';
    })?.count) ||
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[33][1]++, 0));
    const rejectedCount =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[113]++,
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[34][0]++, approvalsResult.rows.find(r => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[27]++;
      cov_2217y0ag8r().s[114]++;
      return r.status === 'rejected';
    })?.count) ||
    /* istanbul ignore next */
    (cov_2217y0ag8r().b[34][1]++, 0));
    /* istanbul ignore next */
    cov_2217y0ag8r().s[115]++;
    logger_1.default.info('Approval counts', {
      payrollPeriodId,
      totalApprovals,
      approvedCount,
      rejectedCount
    });
    let newStatus;
    /* istanbul ignore next */
    cov_2217y0ag8r().s[116]++;
    if (rejectedCount > 0) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[35][0]++;
      cov_2217y0ag8r().s[117]++;
      // If any approval is rejected, mark as draft
      newStatus = 'draft';
    } else {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[35][1]++;
      cov_2217y0ag8r().s[118]++;
      if (
      /* istanbul ignore next */
      (cov_2217y0ag8r().b[37][0]++, approvedCount === totalApprovals) &&
      /* istanbul ignore next */
      (cov_2217y0ag8r().b[37][1]++, totalApprovals > 0)) {
        /* istanbul ignore next */
        cov_2217y0ag8r().b[36][0]++;
        cov_2217y0ag8r().s[119]++;
        // If all approvals are approved, mark as completed
        newStatus = 'completed';
      } else {
        /* istanbul ignore next */
        cov_2217y0ag8r().b[36][1]++;
        cov_2217y0ag8r().s[120]++;
        // Still pending
        logger_1.default.info('Payroll period still pending', {
          payrollPeriodId
        });
        /* istanbul ignore next */
        cov_2217y0ag8r().s[121]++;
        return;
      }
    }
    // Update payroll period status
    const updateQuery =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[122]++, `
      UPDATE payroll_periods 
      SET status = $1, updated_at = CURRENT_TIMESTAMP
      WHERE id = $2
    `);
    /* istanbul ignore next */
    cov_2217y0ag8r().s[123]++;
    await pool.query(updateQuery, [newStatus, payrollPeriodId]);
    /* istanbul ignore next */
    cov_2217y0ag8r().s[124]++;
    logger_1.default.info('Updated payroll period status', {
      payrollPeriodId,
      newStatus
    });
  }
  /**
   * Reset approval status for all approvals in a payroll period
   * This is used when reprocessing payroll to require re-approval
   */
  async resetApprovalStatusForPeriod(payrollPeriodId) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[28]++;
    const {
      getPool
    } =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[125]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[29]++;
      cov_2217y0ag8r().s[126]++;
      return __importStar(require('../../config/database'));
    }));
    const pool =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[127]++, getPool());
    // Reset all approvals for this period to pending
    /* istanbul ignore next */
    cov_2217y0ag8r().s[128]++;
    await pool.query('UPDATE payroll_approvals SET status = $1, comments = NULL, approved_at = NULL, updated_at = NOW() WHERE payroll_period_id = $2', ['pending', payrollPeriodId]);
    // Reset payroll period status to sent_for_review
    /* istanbul ignore next */
    cov_2217y0ag8r().s[129]++;
    await pool.query('UPDATE payroll_periods SET status = $1, updated_at = NOW() WHERE id = $2', ['sent_for_review', payrollPeriodId]);
    /* istanbul ignore next */
    cov_2217y0ag8r().s[130]++;
    logger_1.default.info(`Reset approval status for payroll period ${payrollPeriodId}`);
  }
  async getApprovalWorkflowStatus(payrollPeriodId) {
    /* istanbul ignore next */
    cov_2217y0ag8r().f[30]++;
    const {
      getPool
    } =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[131]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[31]++;
      cov_2217y0ag8r().s[132]++;
      return __importStar(require('../../config/database'));
    }));
    const pool =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[133]++, getPool());
    // Get payroll period info
    const periodQuery =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[134]++, `
      SELECT id, period_name, status
      FROM payroll_periods 
      WHERE id = $1
    `);
    const periodResult =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[135]++, await pool.query(periodQuery, [payrollPeriodId]));
    /* istanbul ignore next */
    cov_2217y0ag8r().s[136]++;
    if (periodResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2217y0ag8r().b[38][0]++;
      cov_2217y0ag8r().s[137]++;
      throw new Error('Payroll period not found');
    } else
    /* istanbul ignore next */
    {
      cov_2217y0ag8r().b[38][1]++;
    }
    const period =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[138]++, periodResult.rows[0]);
    // Get all approvals with details
    const approvalsQuery =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[139]++, `
      SELECT 
        pa.id,
        pa.status,
        pa.approved_at,
        pa.comments,
        CONCAT(u.first_name, ' ', u.last_name) as approver_name,
        d.name as department_name
      FROM payroll_approvals pa
      JOIN users u ON pa.approver_id = u.id
      LEFT JOIN departments d ON pa.department_id = d.id
      WHERE pa.payroll_period_id = $1
      ORDER BY pa.created_at ASC
    `);
    const approvalsResult =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[140]++, await pool.query(approvalsQuery, [payrollPeriodId]));
    const approvals =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[141]++, approvalsResult.rows.map(row => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[32]++;
      cov_2217y0ag8r().s[142]++;
      return {
        id: row.id,
        approverName: row.approver_name,
        departmentName: row.department_name,
        status: row.status,
        approvedAt: row.approved_at,
        comments: row.comments
      };
    }));
    const totalApprovals =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[143]++, approvals.length);
    const pendingApprovals =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[144]++, approvals.filter(a => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[33]++;
      cov_2217y0ag8r().s[145]++;
      return a.status === 'pending';
    }).length);
    const approvedApprovals =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[146]++, approvals.filter(a => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[34]++;
      cov_2217y0ag8r().s[147]++;
      return a.status === 'approved';
    }).length);
    const rejectedApprovals =
    /* istanbul ignore next */
    (cov_2217y0ag8r().s[148]++, approvals.filter(a => {
      /* istanbul ignore next */
      cov_2217y0ag8r().f[35]++;
      cov_2217y0ag8r().s[149]++;
      return a.status === 'rejected';
    }).length);
    /* istanbul ignore next */
    cov_2217y0ag8r().s[150]++;
    return {
      periodId: period.id,
      periodName: period.period_name,
      periodStatus: period.status,
      totalApprovals,
      pendingApprovals,
      approvedApprovals,
      rejectedApprovals,
      approvals
    };
  }
}
/* istanbul ignore next */
cov_2217y0ag8r().s[151]++;
exports.PayrollApprovalService = PayrollApprovalService;
/* istanbul ignore next */
cov_2217y0ag8r().s[152]++;
exports.payrollApprovalService = new PayrollApprovalService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,