cfc347c85b333346923d1bff45634533
"use strict";

/* istanbul ignore next */
function cov_22z5a1c7z() {
  var path = "/home/kim/tito/server/src/models/leave/LeaveAccrual.ts";
  var hash = "dbe2adec0acd9ebeace2ddeb7de6d56264d60014";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/models/leave/LeaveAccrual.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 51
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "4": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "6": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "8": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "9": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "10": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "11": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "13": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "14": {
        start: {
          line: 55,
          column: 23
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "15": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "16": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "17": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 68
        }
      },
      "18": {
        start: {
          line: 62,
          column: 140
        },
        end: {
          line: 62,
          column: 146
        }
      },
      "19": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 41
        }
      },
      "20": {
        start: {
          line: 64,
          column: 30
        },
        end: {
          line: 64,
          column: 32
        }
      },
      "21": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 23
        }
      },
      "22": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 26
        }
      },
      "23": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "24": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 68
        }
      },
      "25": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 36
        }
      },
      "26": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 25
        }
      },
      "27": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "28": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 69
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 38
        }
      },
      "30": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "31": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "32": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 70
        }
      },
      "33": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 35
        }
      },
      "34": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 25
        }
      },
      "35": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "36": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "37": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 33
        }
      },
      "38": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 25
        }
      },
      "39": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "40": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "41": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 39
        }
      },
      "42": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 25
        }
      },
      "43": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 99,
          column: 102
        }
      },
      "44": {
        start: {
          line: 101,
          column: 27
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "45": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 69
        }
      },
      "46": {
        start: {
          line: 110,
          column: 22
        },
        end: {
          line: 110,
          column: 57
        }
      },
      "47": {
        start: {
          line: 112,
          column: 22
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "48": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 35
        }
      },
      "49": {
        start: {
          line: 135,
          column: 23
        },
        end: {
          line: 135,
          column: 59
        }
      },
      "50": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 136,
          column: 90
        }
      },
      "51": {
        start: {
          line: 136,
          column: 48
        },
        end: {
          line: 136,
          column: 89
        }
      },
      "52": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "53": {
        start: {
          line: 146,
          column: 30
        },
        end: {
          line: 146,
          column: 53
        }
      },
      "54": {
        start: {
          line: 147,
          column: 21
        },
        end: {
          line: 147,
          column: 33
        }
      },
      "55": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 148,
          column: 26
        }
      },
      "56": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "57": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 70
        }
      },
      "58": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 35
        }
      },
      "59": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 25
        }
      },
      "60": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "61": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 70
        }
      },
      "62": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 33
        }
      },
      "63": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 25
        }
      },
      "64": {
        start: {
          line: 159,
          column: 28
        },
        end: {
          line: 159,
          column: 68
        }
      },
      "65": {
        start: {
          line: 160,
          column: 22
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "66": {
        start: {
          line: 181,
          column: 23
        },
        end: {
          line: 181,
          column: 59
        }
      },
      "67": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 81
        }
      },
      "68": {
        start: {
          line: 182,
          column: 38
        },
        end: {
          line: 182,
          column: 79
        }
      },
      "69": {
        start: {
          line: 185,
          column: 30
        },
        end: {
          line: 185,
          column: 32
        }
      },
      "70": {
        start: {
          line: 186,
          column: 21
        },
        end: {
          line: 186,
          column: 23
        }
      },
      "71": {
        start: {
          line: 187,
          column: 25
        },
        end: {
          line: 187,
          column: 26
        }
      },
      "72": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "73": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 68
        }
      },
      "74": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 36
        }
      },
      "75": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 25
        }
      },
      "76": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "77": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 69
        }
      },
      "78": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 38
        }
      },
      "79": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 25
        }
      },
      "80": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "81": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 70
        }
      },
      "82": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 35
        }
      },
      "83": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 25
        }
      },
      "84": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "85": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 70
        }
      },
      "86": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 33
        }
      },
      "87": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 25
        }
      },
      "88": {
        start: {
          line: 208,
          column: 28
        },
        end: {
          line: 208,
          column: 102
        }
      },
      "89": {
        start: {
          line: 210,
          column: 27
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "90": {
        start: {
          line: 220,
          column: 28
        },
        end: {
          line: 220,
          column: 69
        }
      },
      "91": {
        start: {
          line: 222,
          column: 30
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "92": {
        start: {
          line: 235,
          column: 31
        },
        end: {
          line: 235,
          column: 75
        }
      },
      "93": {
        start: {
          line: 237,
          column: 32
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "94": {
        start: {
          line: 249,
          column: 33
        },
        end: {
          line: 249,
          column: 79
        }
      },
      "95": {
        start: {
          line: 251,
          column: 27
        },
        end: {
          line: 262,
          column: 5
        }
      },
      "96": {
        start: {
          line: 263,
          column: 28
        },
        end: {
          line: 263,
          column: 69
        }
      },
      "97": {
        start: {
          line: 264,
          column: 25
        },
        end: {
          line: 264,
          column: 44
        }
      },
      "98": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "99": {
        start: {
          line: 276,
          column: 22
        },
        end: {
          line: 276,
          column: 64
        }
      },
      "100": {
        start: {
          line: 277,
          column: 23
        },
        end: {
          line: 277,
          column: 57
        }
      },
      "101": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 63
        }
      },
      "102": {
        start: {
          line: 281,
          column: 22
        },
        end: {
          line: 281,
          column: 59
        }
      },
      "103": {
        start: {
          line: 282,
          column: 23
        },
        end: {
          line: 282,
          column: 51
        }
      },
      "104": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 46
        }
      },
      "105": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 294,
          column: 10
        }
      },
      "106": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 321,
          column: 10
        }
      },
      "107": {
        start: {
          line: 324,
          column: 0
        },
        end: {
          line: 324,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 35
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 34
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 41
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 136,
            column: 41
          },
          end: {
            line: 136,
            column: 42
          }
        },
        loc: {
          start: {
            line: 136,
            column: 48
          },
          end: {
            line: 136,
            column: 89
          }
        },
        line: 136
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 67
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 145
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 182,
            column: 32
          }
        },
        loc: {
          start: {
            line: 182,
            column: 38
          },
          end: {
            line: 182,
            column: 79
          }
        },
        line: 182
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 77
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 184
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 33
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 275
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 33
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 280
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 30
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 285
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        loc: {
          start: {
            line: 296,
            column: 41
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 296
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 35
          }
        }, {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 43
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 28
          },
          end: {
            line: 61,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 37
          },
          end: {
            line: 61,
            column: 39
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 24
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 62,
            column: 36
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 92
          },
          end: {
            line: 62,
            column: 115
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 101
          },
          end: {
            line: 62,
            column: 115
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 117
          },
          end: {
            line: 62,
            column: 135
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 129
          },
          end: {
            line: 62,
            column: 135
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "12": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "13": {
        loc: {
          start: {
            line: 99,
            column: 28
          },
          end: {
            line: 99,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 57
          },
          end: {
            line: 99,
            column: 97
          }
        }, {
          start: {
            line: 99,
            column: 100
          },
          end: {
            line: 99,
            column: 102
          }
        }],
        line: 99
      },
      "14": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "15": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "16": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "17": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "18": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "19": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "20": {
        loc: {
          start: {
            line: 208,
            column: 28
          },
          end: {
            line: 208,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 57
          },
          end: {
            line: 208,
            column: 97
          }
        }, {
          start: {
            line: 208,
            column: 100
          },
          end: {
            line: 208,
            column: 102
          }
        }],
        line: 208
      },
      "21": {
        loc: {
          start: {
            line: 266,
            column: 27
          },
          end: {
            line: 266,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 27
          },
          end: {
            line: 266,
            column: 60
          }
        }, {
          start: {
            line: 266,
            column: 64
          },
          end: {
            line: 266,
            column: 65
          }
        }],
        line: 266
      },
      "22": {
        loc: {
          start: {
            line: 267,
            column: 32
          },
          end: {
            line: 267,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 32
          },
          end: {
            line: 267,
            column: 73
          }
        }, {
          start: {
            line: 267,
            column: 77
          },
          end: {
            line: 267,
            column: 78
          }
        }],
        line: 267
      },
      "23": {
        loc: {
          start: {
            line: 268,
            column: 35
          },
          end: {
            line: 268,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 35
          },
          end: {
            line: 268,
            column: 80
          }
        }, {
          start: {
            line: 268,
            column: 84
          },
          end: {
            line: 268,
            column: 85
          }
        }],
        line: 268
      },
      "24": {
        loc: {
          start: {
            line: 269,
            column: 41
          },
          end: {
            line: 269,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 41
          },
          end: {
            line: 269,
            column: 71
          }
        }, {
          start: {
            line: 269,
            column: 75
          },
          end: {
            line: 269,
            column: 76
          }
        }],
        line: 269
      },
      "25": {
        loc: {
          start: {
            line: 278,
            column: 15
          },
          end: {
            line: 278,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 15
          },
          end: {
            line: 278,
            column: 39
          }
        }, {
          start: {
            line: 278,
            column: 43
          },
          end: {
            line: 278,
            column: 62
          }
        }],
        line: 278
      },
      "26": {
        loc: {
          start: {
            line: 312,
            column: 24
          },
          end: {
            line: 315,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 44
          },
          end: {
            line: 315,
            column: 13
          }
        }, {
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 315,
            column: 20
          }
        }],
        line: 312
      },
      "27": {
        loc: {
          start: {
            line: 316,
            column: 30
          },
          end: {
            line: 320,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 316,
            column: 57
          },
          end: {
            line: 320,
            column: 13
          }
        }, {
          start: {
            line: 320,
            column: 16
          },
          end: {
            line: 320,
            column: 20
          }
        }],
        line: 316
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/models/leave/LeaveAccrual.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/models/leave/LeaveAccrual.ts"],
      sourcesContent: ["import { Pool } from 'pg';\nimport { getPool } from '../../config/database';\n\nexport interface LeaveAccrual {\n  id: string;\n  employeeId: string;\n  attendanceRecordId: string | null;\n  overtimeHours: number;\n  leaveDaysAccrued: number;\n  accrualDate: Date;\n  createdAt: Date;\n}\n\nexport interface LeaveAccrualWithDetails extends LeaveAccrual {\n  employee: {\n    id: string;\n    employeeId: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  department?: {\n    id: string;\n    name: string;\n  } | null;\n  attendanceRecord?: {\n    id: string;\n    date: Date;\n    overallStatus: string;\n  } | null;\n}\n\nexport interface CreateLeaveAccrualData {\n  employeeId: string;\n  attendanceRecordId?: string;\n  overtimeHours: number;\n  leaveDaysAccrued: number;\n  accrualDate: Date;\n}\n\nexport interface LeaveAccrualListParams {\n  page?: number;\n  limit?: number;\n  employeeId?: string;\n  departmentId?: string;\n  startDate?: Date;\n  endDate?: Date;\n  search?: string;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\nexport class LeaveAccrualModel {\n  private pool: Pool;\n\n  constructor() {\n    this.pool = getPool();\n  }\n\n  async createLeaveAccrual(data: CreateLeaveAccrualData): Promise<LeaveAccrual> {\n    const query = `\n      INSERT INTO leave_accruals (\n        employee_id, attendance_record_id, overtime_hours, leave_days_accrued, accrual_date\n      ) VALUES ($1, $2, $3, $4, $5)\n      RETURNING *\n    `;\n\n    const values = [\n      data.employeeId,\n      data.attendanceRecordId || null,\n      data.overtimeHours,\n      data.leaveDaysAccrued,\n      data.accrualDate\n    ];\n\n    const result = await this.pool.query(query, values);\n    return this.mapRowToLeaveAccrual(result.rows[0]);\n  }\n\n  async findById(id: string): Promise<LeaveAccrual | null> {\n    const query = 'SELECT * FROM leave_accruals WHERE id = $1';\n    const result = await this.pool.query(query, [id]);\n    \n    if (result.rows.length === 0) {\n      return null;\n    }\n    \n    return this.mapRowToLeaveAccrual(result.rows[0]);\n  }\n\n  async findByIdWithDetails(id: string): Promise<LeaveAccrualWithDetails | null> {\n    const query = `\n      SELECT \n        la.*,\n        e.id as employee_id,\n        e.employee_id as employee_code,\n        u.first_name,\n        u.last_name,\n        u.email,\n        d.id as department_id,\n        d.name as department_name,\n        ar.id as attendance_record_id,\n        ar.date as attendance_date,\n        ar.overall_status\n      FROM leave_accruals la\n      JOIN employees e ON la.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      LEFT JOIN attendance_records ar ON la.attendance_record_id = ar.id\n      WHERE la.id = $1\n    `;\n    \n    const result = await this.pool.query(query, [id]);\n    \n    if (result.rows.length === 0) {\n      return null;\n    }\n    \n    return this.mapRowToLeaveAccrualWithDetails(result.rows[0]);\n  }\n\n  async listLeaveAccruals(params: LeaveAccrualListParams = {}): Promise<{\n    accruals: LeaveAccrualWithDetails[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    const {\n      page = 1,\n      limit = 20,\n      employeeId,\n      departmentId,\n      startDate,\n      endDate,\n      search,\n      sortBy = 'accrual_date',\n      sortOrder = 'desc'\n    } = params;\n\n    const offset = (page - 1) * limit;\n    let whereConditions: string[] = [];\n    let values: any[] = [];\n    let valueIndex = 1;\n\n    // Build WHERE conditions\n    if (employeeId) {\n      whereConditions.push(`la.employee_id = $${valueIndex}`);\n      values.push(employeeId);\n      valueIndex++;\n    }\n\n    if (departmentId) {\n      whereConditions.push(`e.department_id = $${valueIndex}`);\n      values.push(departmentId);\n      valueIndex++;\n    }\n\n    if (startDate) {\n      whereConditions.push(`la.accrual_date >= $${valueIndex}`);\n      values.push(startDate);\n      valueIndex++;\n    }\n\n    if (endDate) {\n      whereConditions.push(`la.accrual_date <= $${valueIndex}`);\n      values.push(endDate);\n      valueIndex++;\n    }\n\n    if (search) {\n      whereConditions.push(`(\n        e.employee_id ILIKE $${valueIndex} OR \n        u.first_name ILIKE $${valueIndex} OR\n        u.last_name ILIKE $${valueIndex} OR\n        u.email ILIKE $${valueIndex} OR\n        d.name ILIKE $${valueIndex}\n      )`);\n      values.push(`%${search}%`);\n      valueIndex++;\n    }\n\n    const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(' AND ')}` : '';\n\n    // Count query\n    const countQuery = `\n      SELECT COUNT(*) \n      FROM leave_accruals la\n      JOIN employees e ON la.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      ${whereClause}\n    `;\n    const countResult = await this.pool.query(countQuery, values);\n    const total = parseInt(countResult.rows[0].count);\n\n    // Main query\n    const query = `\n      SELECT \n        la.*,\n        e.id as employee_id,\n        e.employee_id as employee_code,\n        u.first_name,\n        u.last_name,\n        u.email,\n        d.id as department_id,\n        d.name as department_name,\n        ar.id as attendance_record_id,\n        ar.date as attendance_date,\n        ar.overall_status\n      FROM leave_accruals la\n      JOIN employees e ON la.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      LEFT JOIN attendance_records ar ON la.attendance_record_id = ar.id\n      ${whereClause}\n      ORDER BY la.${sortBy} ${sortOrder.toUpperCase()}\n      LIMIT $${valueIndex} OFFSET $${valueIndex + 1}\n    `;\n    values.push(limit, offset);\n\n    const result = await this.pool.query(query, values);\n    const accruals = result.rows.map(row => this.mapRowToLeaveAccrualWithDetails(row));\n\n    return {\n      accruals,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit)\n    };\n  }\n\n  async getEmployeeLeaveAccruals(employeeId: string, startDate?: Date, endDate?: Date): Promise<LeaveAccrualWithDetails[]> {\n    let whereConditions = ['la.employee_id = $1'];\n    let values: any[] = [employeeId];\n    let valueIndex = 2;\n\n    if (startDate) {\n      whereConditions.push(`la.accrual_date >= $${valueIndex}`);\n      values.push(startDate);\n      valueIndex++;\n    }\n\n    if (endDate) {\n      whereConditions.push(`la.accrual_date <= $${valueIndex}`);\n      values.push(endDate);\n      valueIndex++;\n    }\n\n    const whereClause = `WHERE ${whereConditions.join(' AND ')}`;\n\n    const query = `\n      SELECT \n        la.*,\n        e.id as employee_id,\n        e.employee_id as employee_code,\n        u.first_name,\n        u.last_name,\n        u.email,\n        d.id as department_id,\n        d.name as department_name,\n        ar.id as attendance_record_id,\n        ar.date as attendance_date,\n        ar.overall_status\n      FROM leave_accruals la\n      JOIN employees e ON la.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      LEFT JOIN attendance_records ar ON la.attendance_record_id = ar.id\n      ${whereClause}\n      ORDER BY la.accrual_date DESC\n    `;\n    \n    const result = await this.pool.query(query, values);\n    return result.rows.map(row => this.mapRowToLeaveAccrualWithDetails(row));\n  }\n\n  async getLeaveAccrualStats(employeeId?: string, departmentId?: string, startDate?: Date, endDate?: Date): Promise<{\n    totalAccruals: number;\n    totalOvertimeHours: number;\n    totalLeaveDaysAccrued: number;\n    averageOvertimeToLeaveRatio: number;\n    accrualsByEmployee: Array<{ employeeName: string; overtimeHours: number; leaveDaysAccrued: number }>;\n    accrualsByDepartment: Array<{ departmentName: string; overtimeHours: number; leaveDaysAccrued: number }>;\n    accrualsByMonth: Array<{ month: string; overtimeHours: number; leaveDaysAccrued: number }>;\n  }> {\n    let whereConditions: string[] = [];\n    let values: any[] = [];\n    let valueIndex = 1;\n\n    if (employeeId) {\n      whereConditions.push(`la.employee_id = $${valueIndex}`);\n      values.push(employeeId);\n      valueIndex++;\n    }\n\n    if (departmentId) {\n      whereConditions.push(`e.department_id = $${valueIndex}`);\n      values.push(departmentId);\n      valueIndex++;\n    }\n\n    if (startDate) {\n      whereConditions.push(`la.accrual_date >= $${valueIndex}`);\n      values.push(startDate);\n      valueIndex++;\n    }\n\n    if (endDate) {\n      whereConditions.push(`la.accrual_date <= $${valueIndex}`);\n      values.push(endDate);\n      valueIndex++;\n    }\n\n    const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(' AND ')}` : '';\n\n    // Total stats\n    const totalQuery = `\n      SELECT \n        COUNT(*) as total_accruals,\n        SUM(la.overtime_hours) as total_overtime_hours,\n        SUM(la.leave_days_accrued) as total_leave_days_accrued,\n        AVG(la.leave_days_accrued / NULLIF(la.overtime_hours, 0)) as avg_ratio\n      FROM leave_accruals la\n      JOIN employees e ON la.employee_id = e.id\n      ${whereClause}\n    `;\n    const totalResult = await this.pool.query(totalQuery, values);\n\n    // By employee\n    const employeeQuery = `\n      SELECT \n        CONCAT(u.first_name, ' ', u.last_name) as employee_name,\n        SUM(la.overtime_hours) as overtime_hours,\n        SUM(la.leave_days_accrued) as leave_days_accrued\n      FROM leave_accruals la\n      JOIN employees e ON la.employee_id = e.id\n      JOIN users u ON e.user_id = u.id\n      ${whereClause}\n      GROUP BY e.id, u.first_name, u.last_name\n      ORDER BY overtime_hours DESC\n      LIMIT 10\n    `;\n    const employeeResult = await this.pool.query(employeeQuery, values);\n\n    // By department\n    const departmentQuery = `\n      SELECT \n        COALESCE(d.name, 'No Department') as department_name,\n        SUM(la.overtime_hours) as overtime_hours,\n        SUM(la.leave_days_accrued) as leave_days_accrued\n      FROM leave_accruals la\n      JOIN employees e ON la.employee_id = e.id\n      LEFT JOIN departments d ON e.department_id = d.id\n      ${whereClause}\n      GROUP BY d.id, d.name\n      ORDER BY overtime_hours DESC\n    `;\n    const departmentResult = await this.pool.query(departmentQuery, values);\n\n    // By month\n    const monthQuery = `\n      SELECT \n        TO_CHAR(la.accrual_date, 'YYYY-MM') as month,\n        SUM(la.overtime_hours) as overtime_hours,\n        SUM(la.leave_days_accrued) as leave_days_accrued\n      FROM leave_accruals la\n      JOIN employees e ON la.employee_id = e.id\n      ${whereClause}\n      GROUP BY TO_CHAR(la.accrual_date, 'YYYY-MM')\n      ORDER BY month DESC\n      LIMIT 12\n    `;\n    const monthResult = await this.pool.query(monthQuery, values);\n\n    const totalRow = totalResult.rows[0];\n    return {\n      totalAccruals: parseInt(totalRow.total_accruals) || 0,\n      totalOvertimeHours: parseFloat(totalRow.total_overtime_hours) || 0,\n      totalLeaveDaysAccrued: parseFloat(totalRow.total_leave_days_accrued) || 0,\n      averageOvertimeToLeaveRatio: parseFloat(totalRow.avg_ratio) || 0,\n      accrualsByEmployee: employeeResult.rows,\n      accrualsByDepartment: departmentResult.rows,\n      accrualsByMonth: monthResult.rows\n    };\n  }\n\n  async deleteLeaveAccrual(id: string): Promise<boolean> {\n    const query = 'DELETE FROM leave_accruals WHERE id = $1';\n    const result = await this.pool.query(query, [id]);\n    return result.rowCount !== null && result.rowCount > 0;\n  }\n\n  async getLeaveAccrualCount(): Promise<number> {\n    const query = 'SELECT COUNT(*) FROM leave_accruals';\n    const result = await this.pool.query(query);\n    return parseInt(result.rows[0].count);\n  }\n\n  private mapRowToLeaveAccrual(row: any): LeaveAccrual {\n    return {\n      id: row.id,\n      employeeId: row.employee_id,\n      attendanceRecordId: row.attendance_record_id,\n      overtimeHours: parseFloat(row.overtime_hours),\n      leaveDaysAccrued: parseFloat(row.leave_days_accrued),\n      accrualDate: row.accrual_date,\n      createdAt: row.created_at\n    };\n  }\n\n  private mapRowToLeaveAccrualWithDetails(row: any): LeaveAccrualWithDetails {\n    return {\n      id: row.id,\n      employeeId: row.employee_id,\n      attendanceRecordId: row.attendance_record_id,\n      overtimeHours: parseFloat(row.overtime_hours),\n      leaveDaysAccrued: parseFloat(row.leave_days_accrued),\n      accrualDate: row.accrual_date,\n      createdAt: row.created_at,\n      employee: {\n        id: row.employee_id,\n        employeeId: row.employee_code,\n        firstName: row.first_name,\n        lastName: row.last_name,\n        email: row.email\n      },\n      department: row.department_id ? {\n        id: row.department_id,\n        name: row.department_name\n      } : null,\n      attendanceRecord: row.attendance_record_id ? {\n        id: row.attendance_record_id,\n        date: row.attendance_date,\n        overallStatus: row.overall_status\n      } : null\n    };\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dbe2adec0acd9ebeace2ddeb7de6d56264d60014"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22z5a1c7z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22z5a1c7z();
cov_22z5a1c7z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22z5a1c7z().s[1]++;
exports.LeaveAccrualModel = void 0;
const database_1 =
/* istanbul ignore next */
(cov_22z5a1c7z().s[2]++, require("../../config/database"));
class LeaveAccrualModel {
  constructor() {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[0]++;
    cov_22z5a1c7z().s[3]++;
    this.pool = (0, database_1.getPool)();
  }
  async createLeaveAccrual(data) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[1]++;
    const query =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[4]++, `
      INSERT INTO leave_accruals (
        employee_id, attendance_record_id, overtime_hours, leave_days_accrued, accrual_date
      ) VALUES ($1, $2, $3, $4, $5)
      RETURNING *
    `);
    const values =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[5]++, [data.employeeId,
    /* istanbul ignore next */
    (cov_22z5a1c7z().b[0][0]++, data.attendanceRecordId) ||
    /* istanbul ignore next */
    (cov_22z5a1c7z().b[0][1]++, null), data.overtimeHours, data.leaveDaysAccrued, data.accrualDate]);
    const result =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[6]++, await this.pool.query(query, values));
    /* istanbul ignore next */
    cov_22z5a1c7z().s[7]++;
    return this.mapRowToLeaveAccrual(result.rows[0]);
  }
  async findById(id) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[2]++;
    const query =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[8]++, 'SELECT * FROM leave_accruals WHERE id = $1');
    const result =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[9]++, await this.pool.query(query, [id]));
    /* istanbul ignore next */
    cov_22z5a1c7z().s[10]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[1][0]++;
      cov_22z5a1c7z().s[11]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[1][1]++;
    }
    cov_22z5a1c7z().s[12]++;
    return this.mapRowToLeaveAccrual(result.rows[0]);
  }
  async findByIdWithDetails(id) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[3]++;
    const query =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[13]++, `
      SELECT 
        la.*,
        e.id as employee_id,
        e.employee_id as employee_code,
        u.first_name,
        u.last_name,
        u.email,
        d.id as department_id,
        d.name as department_name,
        ar.id as attendance_record_id,
        ar.date as attendance_date,
        ar.overall_status
      FROM leave_accruals la
      JOIN employees e ON la.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      LEFT JOIN attendance_records ar ON la.attendance_record_id = ar.id
      WHERE la.id = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[14]++, await this.pool.query(query, [id]));
    /* istanbul ignore next */
    cov_22z5a1c7z().s[15]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[2][0]++;
      cov_22z5a1c7z().s[16]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[2][1]++;
    }
    cov_22z5a1c7z().s[17]++;
    return this.mapRowToLeaveAccrualWithDetails(result.rows[0]);
  }
  async listLeaveAccruals(params =
  /* istanbul ignore next */
  (cov_22z5a1c7z().b[3][0]++, {})) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[4]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[4][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[5][0]++, 20),
      employeeId,
      departmentId,
      startDate,
      endDate,
      search,
      sortBy =
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[6][0]++, 'accrual_date'),
      sortOrder =
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[7][0]++, 'desc')
    } =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[18]++, params);
    const offset =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[19]++, (page - 1) * limit);
    let whereConditions =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[20]++, []);
    let values =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[21]++, []);
    let valueIndex =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[22]++, 1);
    // Build WHERE conditions
    /* istanbul ignore next */
    cov_22z5a1c7z().s[23]++;
    if (employeeId) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[8][0]++;
      cov_22z5a1c7z().s[24]++;
      whereConditions.push(`la.employee_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[25]++;
      values.push(employeeId);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[26]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[8][1]++;
    }
    cov_22z5a1c7z().s[27]++;
    if (departmentId) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[9][0]++;
      cov_22z5a1c7z().s[28]++;
      whereConditions.push(`e.department_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[29]++;
      values.push(departmentId);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[30]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[9][1]++;
    }
    cov_22z5a1c7z().s[31]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[10][0]++;
      cov_22z5a1c7z().s[32]++;
      whereConditions.push(`la.accrual_date >= $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[33]++;
      values.push(startDate);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[34]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[10][1]++;
    }
    cov_22z5a1c7z().s[35]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[11][0]++;
      cov_22z5a1c7z().s[36]++;
      whereConditions.push(`la.accrual_date <= $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[37]++;
      values.push(endDate);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[38]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[11][1]++;
    }
    cov_22z5a1c7z().s[39]++;
    if (search) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[12][0]++;
      cov_22z5a1c7z().s[40]++;
      whereConditions.push(`(
        e.employee_id ILIKE $${valueIndex} OR 
        u.first_name ILIKE $${valueIndex} OR
        u.last_name ILIKE $${valueIndex} OR
        u.email ILIKE $${valueIndex} OR
        d.name ILIKE $${valueIndex}
      )`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[41]++;
      values.push(`%${search}%`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[42]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[12][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[43]++, whereConditions.length > 0 ?
    /* istanbul ignore next */
    (cov_22z5a1c7z().b[13][0]++, `WHERE ${whereConditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_22z5a1c7z().b[13][1]++, ''));
    // Count query
    const countQuery =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[44]++, `
      SELECT COUNT(*) 
      FROM leave_accruals la
      JOIN employees e ON la.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      ${whereClause}
    `);
    const countResult =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[45]++, await this.pool.query(countQuery, values));
    const total =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[46]++, parseInt(countResult.rows[0].count));
    // Main query
    const query =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[47]++, `
      SELECT 
        la.*,
        e.id as employee_id,
        e.employee_id as employee_code,
        u.first_name,
        u.last_name,
        u.email,
        d.id as department_id,
        d.name as department_name,
        ar.id as attendance_record_id,
        ar.date as attendance_date,
        ar.overall_status
      FROM leave_accruals la
      JOIN employees e ON la.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      LEFT JOIN attendance_records ar ON la.attendance_record_id = ar.id
      ${whereClause}
      ORDER BY la.${sortBy} ${sortOrder.toUpperCase()}
      LIMIT $${valueIndex} OFFSET $${valueIndex + 1}
    `);
    /* istanbul ignore next */
    cov_22z5a1c7z().s[48]++;
    values.push(limit, offset);
    const result =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[49]++, await this.pool.query(query, values));
    const accruals =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[50]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_22z5a1c7z().f[5]++;
      cov_22z5a1c7z().s[51]++;
      return this.mapRowToLeaveAccrualWithDetails(row);
    }));
    /* istanbul ignore next */
    cov_22z5a1c7z().s[52]++;
    return {
      accruals,
      total,
      page,
      limit,
      totalPages: Math.ceil(total / limit)
    };
  }
  async getEmployeeLeaveAccruals(employeeId, startDate, endDate) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[6]++;
    let whereConditions =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[53]++, ['la.employee_id = $1']);
    let values =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[54]++, [employeeId]);
    let valueIndex =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[55]++, 2);
    /* istanbul ignore next */
    cov_22z5a1c7z().s[56]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[14][0]++;
      cov_22z5a1c7z().s[57]++;
      whereConditions.push(`la.accrual_date >= $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[58]++;
      values.push(startDate);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[59]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[14][1]++;
    }
    cov_22z5a1c7z().s[60]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[15][0]++;
      cov_22z5a1c7z().s[61]++;
      whereConditions.push(`la.accrual_date <= $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[62]++;
      values.push(endDate);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[63]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[15][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[64]++, `WHERE ${whereConditions.join(' AND ')}`);
    const query =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[65]++, `
      SELECT 
        la.*,
        e.id as employee_id,
        e.employee_id as employee_code,
        u.first_name,
        u.last_name,
        u.email,
        d.id as department_id,
        d.name as department_name,
        ar.id as attendance_record_id,
        ar.date as attendance_date,
        ar.overall_status
      FROM leave_accruals la
      JOIN employees e ON la.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      LEFT JOIN departments d ON e.department_id = d.id
      LEFT JOIN attendance_records ar ON la.attendance_record_id = ar.id
      ${whereClause}
      ORDER BY la.accrual_date DESC
    `);
    const result =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[66]++, await this.pool.query(query, values));
    /* istanbul ignore next */
    cov_22z5a1c7z().s[67]++;
    return result.rows.map(row => {
      /* istanbul ignore next */
      cov_22z5a1c7z().f[7]++;
      cov_22z5a1c7z().s[68]++;
      return this.mapRowToLeaveAccrualWithDetails(row);
    });
  }
  async getLeaveAccrualStats(employeeId, departmentId, startDate, endDate) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[8]++;
    let whereConditions =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[69]++, []);
    let values =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[70]++, []);
    let valueIndex =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[71]++, 1);
    /* istanbul ignore next */
    cov_22z5a1c7z().s[72]++;
    if (employeeId) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[16][0]++;
      cov_22z5a1c7z().s[73]++;
      whereConditions.push(`la.employee_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[74]++;
      values.push(employeeId);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[75]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[16][1]++;
    }
    cov_22z5a1c7z().s[76]++;
    if (departmentId) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[17][0]++;
      cov_22z5a1c7z().s[77]++;
      whereConditions.push(`e.department_id = $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[78]++;
      values.push(departmentId);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[79]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[17][1]++;
    }
    cov_22z5a1c7z().s[80]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[18][0]++;
      cov_22z5a1c7z().s[81]++;
      whereConditions.push(`la.accrual_date >= $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[82]++;
      values.push(startDate);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[83]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[18][1]++;
    }
    cov_22z5a1c7z().s[84]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_22z5a1c7z().b[19][0]++;
      cov_22z5a1c7z().s[85]++;
      whereConditions.push(`la.accrual_date <= $${valueIndex}`);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[86]++;
      values.push(endDate);
      /* istanbul ignore next */
      cov_22z5a1c7z().s[87]++;
      valueIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_22z5a1c7z().b[19][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[88]++, whereConditions.length > 0 ?
    /* istanbul ignore next */
    (cov_22z5a1c7z().b[20][0]++, `WHERE ${whereConditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_22z5a1c7z().b[20][1]++, ''));
    // Total stats
    const totalQuery =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[89]++, `
      SELECT 
        COUNT(*) as total_accruals,
        SUM(la.overtime_hours) as total_overtime_hours,
        SUM(la.leave_days_accrued) as total_leave_days_accrued,
        AVG(la.leave_days_accrued / NULLIF(la.overtime_hours, 0)) as avg_ratio
      FROM leave_accruals la
      JOIN employees e ON la.employee_id = e.id
      ${whereClause}
    `);
    const totalResult =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[90]++, await this.pool.query(totalQuery, values));
    // By employee
    const employeeQuery =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[91]++, `
      SELECT 
        CONCAT(u.first_name, ' ', u.last_name) as employee_name,
        SUM(la.overtime_hours) as overtime_hours,
        SUM(la.leave_days_accrued) as leave_days_accrued
      FROM leave_accruals la
      JOIN employees e ON la.employee_id = e.id
      JOIN users u ON e.user_id = u.id
      ${whereClause}
      GROUP BY e.id, u.first_name, u.last_name
      ORDER BY overtime_hours DESC
      LIMIT 10
    `);
    const employeeResult =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[92]++, await this.pool.query(employeeQuery, values));
    // By department
    const departmentQuery =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[93]++, `
      SELECT 
        COALESCE(d.name, 'No Department') as department_name,
        SUM(la.overtime_hours) as overtime_hours,
        SUM(la.leave_days_accrued) as leave_days_accrued
      FROM leave_accruals la
      JOIN employees e ON la.employee_id = e.id
      LEFT JOIN departments d ON e.department_id = d.id
      ${whereClause}
      GROUP BY d.id, d.name
      ORDER BY overtime_hours DESC
    `);
    const departmentResult =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[94]++, await this.pool.query(departmentQuery, values));
    // By month
    const monthQuery =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[95]++, `
      SELECT 
        TO_CHAR(la.accrual_date, 'YYYY-MM') as month,
        SUM(la.overtime_hours) as overtime_hours,
        SUM(la.leave_days_accrued) as leave_days_accrued
      FROM leave_accruals la
      JOIN employees e ON la.employee_id = e.id
      ${whereClause}
      GROUP BY TO_CHAR(la.accrual_date, 'YYYY-MM')
      ORDER BY month DESC
      LIMIT 12
    `);
    const monthResult =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[96]++, await this.pool.query(monthQuery, values));
    const totalRow =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[97]++, totalResult.rows[0]);
    /* istanbul ignore next */
    cov_22z5a1c7z().s[98]++;
    return {
      totalAccruals:
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[21][0]++, parseInt(totalRow.total_accruals)) ||
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[21][1]++, 0),
      totalOvertimeHours:
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[22][0]++, parseFloat(totalRow.total_overtime_hours)) ||
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[22][1]++, 0),
      totalLeaveDaysAccrued:
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[23][0]++, parseFloat(totalRow.total_leave_days_accrued)) ||
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[23][1]++, 0),
      averageOvertimeToLeaveRatio:
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[24][0]++, parseFloat(totalRow.avg_ratio)) ||
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[24][1]++, 0),
      accrualsByEmployee: employeeResult.rows,
      accrualsByDepartment: departmentResult.rows,
      accrualsByMonth: monthResult.rows
    };
  }
  async deleteLeaveAccrual(id) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[9]++;
    const query =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[99]++, 'DELETE FROM leave_accruals WHERE id = $1');
    const result =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[100]++, await this.pool.query(query, [id]));
    /* istanbul ignore next */
    cov_22z5a1c7z().s[101]++;
    return /* istanbul ignore next */(cov_22z5a1c7z().b[25][0]++, result.rowCount !== null) &&
    /* istanbul ignore next */
    (cov_22z5a1c7z().b[25][1]++, result.rowCount > 0);
  }
  async getLeaveAccrualCount() {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[10]++;
    const query =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[102]++, 'SELECT COUNT(*) FROM leave_accruals');
    const result =
    /* istanbul ignore next */
    (cov_22z5a1c7z().s[103]++, await this.pool.query(query));
    /* istanbul ignore next */
    cov_22z5a1c7z().s[104]++;
    return parseInt(result.rows[0].count);
  }
  mapRowToLeaveAccrual(row) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[11]++;
    cov_22z5a1c7z().s[105]++;
    return {
      id: row.id,
      employeeId: row.employee_id,
      attendanceRecordId: row.attendance_record_id,
      overtimeHours: parseFloat(row.overtime_hours),
      leaveDaysAccrued: parseFloat(row.leave_days_accrued),
      accrualDate: row.accrual_date,
      createdAt: row.created_at
    };
  }
  mapRowToLeaveAccrualWithDetails(row) {
    /* istanbul ignore next */
    cov_22z5a1c7z().f[12]++;
    cov_22z5a1c7z().s[106]++;
    return {
      id: row.id,
      employeeId: row.employee_id,
      attendanceRecordId: row.attendance_record_id,
      overtimeHours: parseFloat(row.overtime_hours),
      leaveDaysAccrued: parseFloat(row.leave_days_accrued),
      accrualDate: row.accrual_date,
      createdAt: row.created_at,
      employee: {
        id: row.employee_id,
        employeeId: row.employee_code,
        firstName: row.first_name,
        lastName: row.last_name,
        email: row.email
      },
      department: row.department_id ?
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[26][0]++, {
        id: row.department_id,
        name: row.department_name
      }) :
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[26][1]++, null),
      attendanceRecord: row.attendance_record_id ?
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[27][0]++, {
        id: row.attendance_record_id,
        date: row.attendance_date,
        overallStatus: row.overall_status
      }) :
      /* istanbul ignore next */
      (cov_22z5a1c7z().b[27][1]++, null)
    };
  }
}
/* istanbul ignore next */
cov_22z5a1c7z().s[107]++;
exports.LeaveAccrualModel = LeaveAccrualModel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,