{"version":3,"names":["cov_guy4e4fj4","actualCoverage","s","express_1","require","overtimeController_1","authenticate_1","authorize_1","router","Router","use","authenticate","post","authorize","overtimeController","createOvertimeRequest","get","listOvertimeRequests","getEmployeeOvertimeRequests","getPendingRequestsForDepartmentHead","getOvertimeStats","getEmployeeOvertimeSummary","getOvertimeRequest","put","approveOvertimeRequest","delete","deleteOvertimeRequest","exports","default"],"sources":["/home/kim/tito/server/src/routes/attendance/overtimeRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { overtimeController } from '../../controllers/attendance/overtimeController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { authorize } from '../../middleware/auth/authorize';\n\nconst router = Router();\n\n// Apply authentication to all routes\nrouter.use(authenticate);\n\n/**\n * @route POST /api/v1/overtime\n * @desc Create an overtime request\n * @access Employee\n */\nrouter.post('/', authorize(['employee']), overtimeController.createOvertimeRequest);\n\n/**\n * @route GET /api/v1/overtime\n * @desc List overtime requests\n * @access HR, Department Head\n * @query page, limit, employeeId, departmentId, status, startDate, endDate, search, sortBy, sortOrder\n */\nrouter.get('/', authorize(['hr', 'department_head']), overtimeController.listOvertimeRequests);\n\n/**\n * @route GET /api/v1/overtime/employee\n * @desc Get employee's overtime requests\n * @access Employee\n * @query startDate, endDate, page, limit\n */\nrouter.get('/employee', authorize(['employee']), overtimeController.getEmployeeOvertimeRequests);\n\n/**\n * @route GET /api/v1/overtime/pending\n * @desc Get pending requests for department head\n * @access Department Head\n */\nrouter.get('/pending', authorize(['department_head']), overtimeController.getPendingRequestsForDepartmentHead);\n\n/**\n * @route GET /api/v1/overtime/stats\n * @desc Get overtime statistics\n * @access HR, Department Head\n * @query employeeId, departmentId\n */\nrouter.get('/stats', authorize(['hr', 'department_head']), overtimeController.getOvertimeStats);\n\n/**\n * @route GET /api/v1/overtime/summary\n * @desc Get employee overtime summary\n * @access Employee\n * @query startDate, endDate\n */\nrouter.get('/summary', authorize(['employee']), overtimeController.getEmployeeOvertimeSummary);\n\n/**\n * @route GET /api/v1/overtime/:id\n * @desc Get overtime request by ID\n * @access Employee, HR, Department Head\n */\nrouter.get('/:id', authorize(['employee', 'hr', 'department_head']), overtimeController.getOvertimeRequest);\n\n/**\n * @route PUT /api/v1/overtime/:id/approve\n * @desc Approve or reject an overtime request\n * @access Department Head\n */\nrouter.put('/:id/approve', authorize(['department_head']), overtimeController.approveOvertimeRequest);\n\n/**\n * @route DELETE /api/v1/overtime/:id\n * @desc Delete an overtime request\n * @access Employee (own requests only)\n */\nrouter.delete('/:id', authorize(['employee']), overtimeController.deleteOvertimeRequest);\n\nexport default router;"],"mappings":"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","ignoreList":[]}