74dad8e579cb64fb509bdf62ceb3db34
"use strict";

/* istanbul ignore next */
function cov_3uv1ebtyd() {
  var path = "/home/kim/tito/server/src/routes/payroll/payrollRoutes.ts";
  var hash = "04165e9954f86e7f1ff73fd068df3b4597f197ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/routes/payroll/payrollRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 28
        },
        end: {
          line: 4,
          column: 82
        }
      },
      "3": {
        start: {
          line: 5,
          column: 34
        },
        end: {
          line: 5,
          column: 94
        }
      },
      "4": {
        start: {
          line: 6,
          column: 36
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "5": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 68
        }
      },
      "6": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "7": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "8": {
        start: {
          line: 10,
          column: 34
        },
        end: {
          line: 10,
          column: 93
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "10": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 163
        }
      },
      "11": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 160
        }
      },
      "12": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 163
        }
      },
      "13": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 166
        }
      },
      "14": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 169
        }
      },
      "15": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 179
        }
      },
      "16": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 54,
          column: 181
        }
      },
      "17": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 172
        }
      },
      "18": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 160
        }
      },
      "19": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 72,
          column: 170
        }
      },
      "20": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 78,
          column: 163
        }
      },
      "21": {
        start: {
          line: 84,
          column: 0
        },
        end: {
          line: 84,
          column: 156
        }
      },
      "22": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 90,
          column: 183
        }
      },
      "23": {
        start: {
          line: 96,
          column: 0
        },
        end: {
          line: 96,
          column: 166
        }
      },
      "24": {
        start: {
          line: 102,
          column: 0
        },
        end: {
          line: 102,
          column: 176
        }
      },
      "25": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 108,
          column: 179
        }
      },
      "26": {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 114,
          column: 177
        }
      },
      "27": {
        start: {
          line: 120,
          column: 0
        },
        end: {
          line: 120,
          column: 192
        }
      },
      "28": {
        start: {
          line: 126,
          column: 0
        },
        end: {
          line: 126,
          column: 190
        }
      },
      "29": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 132,
          column: 218
        }
      },
      "30": {
        start: {
          line: 138,
          column: 0
        },
        end: {
          line: 138,
          column: 175
        }
      },
      "31": {
        start: {
          line: 144,
          column: 0
        },
        end: {
          line: 144,
          column: 195
        }
      },
      "32": {
        start: {
          line: 150,
          column: 0
        },
        end: {
          line: 150,
          column: 192
        }
      },
      "33": {
        start: {
          line: 156,
          column: 0
        },
        end: {
          line: 156,
          column: 205
        }
      },
      "34": {
        start: {
          line: 162,
          column: 0
        },
        end: {
          line: 162,
          column: 195
        }
      },
      "35": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 168,
          column: 198
        }
      },
      "36": {
        start: {
          line: 174,
          column: 0
        },
        end: {
          line: 174,
          column: 201
        }
      },
      "37": {
        start: {
          line: 180,
          column: 0
        },
        end: {
          line: 180,
          column: 210
        }
      },
      "38": {
        start: {
          line: 186,
          column: 0
        },
        end: {
          line: 186,
          column: 214
        }
      },
      "39": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 193,
          column: 143
        }
      },
      "40": {
        start: {
          line: 199,
          column: 0
        },
        end: {
          line: 199,
          column: 141
        }
      },
      "41": {
        start: {
          line: 205,
          column: 0
        },
        end: {
          line: 205,
          column: 150
        }
      },
      "42": {
        start: {
          line: 211,
          column: 0
        },
        end: {
          line: 211,
          column: 162
        }
      },
      "43": {
        start: {
          line: 217,
          column: 0
        },
        end: {
          line: 217,
          column: 199
        }
      },
      "44": {
        start: {
          line: 223,
          column: 0
        },
        end: {
          line: 223,
          column: 174
        }
      },
      "45": {
        start: {
          line: 229,
          column: 0
        },
        end: {
          line: 229,
          column: 178
        }
      },
      "46": {
        start: {
          line: 235,
          column: 0
        },
        end: {
          line: 235,
          column: 180
        }
      },
      "47": {
        start: {
          line: 241,
          column: 0
        },
        end: {
          line: 241,
          column: 149
        }
      },
      "48": {
        start: {
          line: 249,
          column: 0
        },
        end: {
          line: 249,
          column: 167
        }
      },
      "49": {
        start: {
          line: 255,
          column: 0
        },
        end: {
          line: 255,
          column: 164
        }
      },
      "50": {
        start: {
          line: 261,
          column: 0
        },
        end: {
          line: 261,
          column: 170
        }
      },
      "51": {
        start: {
          line: 267,
          column: 0
        },
        end: {
          line: 267,
          column: 173
        }
      },
      "52": {
        start: {
          line: 274,
          column: 0
        },
        end: {
          line: 274,
          column: 191
        }
      },
      "53": {
        start: {
          line: 280,
          column: 0
        },
        end: {
          line: 280,
          column: 194
        }
      },
      "54": {
        start: {
          line: 286,
          column: 0
        },
        end: {
          line: 286,
          column: 202
        }
      },
      "55": {
        start: {
          line: 292,
          column: 0
        },
        end: {
          line: 292,
          column: 200
        }
      },
      "56": {
        start: {
          line: 299,
          column: 0
        },
        end: {
          line: 299,
          column: 172
        }
      },
      "57": {
        start: {
          line: 305,
          column: 0
        },
        end: {
          line: 305,
          column: 175
        }
      },
      "58": {
        start: {
          line: 311,
          column: 0
        },
        end: {
          line: 311,
          column: 183
        }
      },
      "59": {
        start: {
          line: 317,
          column: 0
        },
        end: {
          line: 317,
          column: 178
        }
      },
      "60": {
        start: {
          line: 323,
          column: 0
        },
        end: {
          line: 323,
          column: 181
        }
      },
      "61": {
        start: {
          line: 329,
          column: 0
        },
        end: {
          line: 329,
          column: 179
        }
      },
      "62": {
        start: {
          line: 335,
          column: 0
        },
        end: {
          line: 335,
          column: 185
        }
      },
      "63": {
        start: {
          line: 341,
          column: 0
        },
        end: {
          line: 341,
          column: 173
        }
      },
      "64": {
        start: {
          line: 347,
          column: 0
        },
        end: {
          line: 347,
          column: 212
        }
      },
      "65": {
        start: {
          line: 348,
          column: 0
        },
        end: {
          line: 348,
          column: 25
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/home/kim/tito/server/src/routes/payroll/payrollRoutes.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/routes/payroll/payrollRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\nimport { payrollController } from '../../controllers/payroll/payrollController';\nimport { deductionTypeController } from '../../controllers/payroll/deductionTypeController';\nimport { PayrollApprovalController } from '../../controllers/payroll/payrollApprovalController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { authorize } from '../../middleware/auth/authorize';\n\nconst router = Router();\nconst payrollApprovalController = new PayrollApprovalController();\n\n// Apply authentication to all routes\nrouter.use(authenticate);\n\n/**\n * @route POST /api/v1/payroll/periods\n * @desc Create a new payroll period\n * @access HR Admin\n */\nrouter.post('/periods', authorize(['hr']), payrollController.createPayrollPeriod.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/periods\n * @desc Get all payroll periods\n * @access HR Admin\n */\nrouter.get('/periods', authorize(['hr']), payrollController.getPayrollPeriods.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/periods/:id\n * @desc Get payroll period by ID\n * @access HR Admin\n */\nrouter.get('/periods/:id', authorize(['hr']), payrollController.getPayrollPeriod.bind(payrollController));\n\n/**\n * @route PUT /api/v1/payroll/periods/:id\n * @desc Update payroll period\n * @access HR Admin\n */\nrouter.put('/periods/:id', authorize(['hr']), payrollController.updatePayrollPeriod.bind(payrollController));\n\n/**\n * @route DELETE /api/v1/payroll/periods/:id\n * @desc Delete payroll period\n * @access HR Admin\n */\nrouter.delete('/periods/:id', authorize(['hr']), payrollController.deletePayrollPeriod.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/periods/:id/generate\n * @desc Generate payroll records for a period\n * @access HR Admin\n */\nrouter.post('/periods/:id/generate', authorize(['hr']), payrollController.generatePayrollRecords.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/periods/:id/reprocess\n * @desc Reprocess payroll records for a period (clears existing and regenerates)\n * @access HR Admin\n */\nrouter.post('/periods/:id/reprocess', authorize(['hr']), payrollController.reprocessPayrollRecords.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/periods/:id/summary\n * @desc Get payroll period summary\n * @access HR Admin\n */\nrouter.get('/periods/:id/summary', authorize(['hr']), payrollController.getPayrollSummary.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/records\n * @desc Get payroll records\n * @access HR Admin\n */\nrouter.get('/records', authorize(['hr']), payrollController.getPayrollRecords.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/records/export\n * @desc Export payroll records\n * @access HR Admin\n */\nrouter.get('/records/export', authorize(['hr']), payrollController.exportPayrollRecords.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/records/:id\n * @desc Get payroll record by ID\n * @access HR Admin\n */\nrouter.get('/records/:id', authorize(['hr']), payrollController.getPayrollRecord.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/stats\n * @desc Get payroll statistics\n * @access HR Admin\n */\nrouter.get('/stats', authorize(['hr']), payrollController.getPayrollStats.bind(payrollController));\n\n/**\n * @route PUT /api/v1/payroll/records/bulk-paid\n * @desc Bulk update payroll records to paid status\n * @access HR Admin\n */\nrouter.put('/records/bulk-paid', authorize(['hr']), payrollController.bulkUpdatePayrollRecordsToPaid.bind(payrollController));\n\n/**\n * @route PUT /api/v1/payroll/records/:id\n * @desc Update payroll record\n * @access HR Admin\n */\nrouter.put('/records/:id', authorize(['hr']), payrollController.updatePayrollRecord.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/records/:id/approve\n * @desc Approve payroll record\n * @access HR Admin\n */\nrouter.post('/records/:id/approve', authorize(['hr']), payrollController.approvePayrollRecord.bind(payrollController));\n\n/**\n * @route PUT /api/v1/payroll/records/:id/status\n * @desc Update payroll record status\n * @access HR Admin\n */\nrouter.put('/records/:id/status', authorize(['hr']), payrollController.updatePayrollRecordStatus.bind(payrollController));\n\n/**\n * @route PUT /api/v1/payroll/periods/:id/complete\n * @desc Complete payroll period (mark as completed when all departments approve)\n * @access HR Admin\n */\nrouter.put('/periods/:id/complete', authorize(['hr']), payrollController.completePayrollPeriod.bind(payrollController));\n\n/**\n * @route PUT /api/v1/payroll/periods/:id/records/status\n * @desc Bulk update payroll records status for a period\n * @access HR Admin\n */\nrouter.put('/periods/:id/records/status', authorize(['hr']), payrollController.bulkUpdatePayrollRecordsStatus.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/periods/:id/export/paystubs/pdf\n * @desc Export all employee paystubs for a period as PDF\n * @access HR Admin\n */\nrouter.get('/periods/:id/export/paystubs/pdf', authorize(['hr']), payrollController.exportPeriodPaystubsPDF.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/periods/:id/export/paystubs/department/pdf\n * @desc Export department employee paystubs for a period as PDF\n * @access Department Head\n */\nrouter.get('/periods/:id/export/paystubs/department/pdf', authorize(['department_head']), payrollController.exportDepartmentPaystubsPDF.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/records/:id/mark-paid\n * @desc Mark payroll record as paid\n * @access HR Admin\n */\nrouter.post('/records/:id/mark-paid', authorize(['hr']), payrollController.markPayrollAsPaid.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/deduction-types\n * @desc Create a new deduction type\n * @access HR Admin\n */\nrouter.post('/deduction-types', authorize(['hr']), deductionTypeController.createDeductionType.bind(deductionTypeController));\n\n/**\n * @route GET /api/v1/payroll/deduction-types\n * @desc Get all deduction types\n * @access HR Admin\n */\nrouter.get('/deduction-types', authorize(['hr']), deductionTypeController.getDeductionTypes.bind(deductionTypeController));\n\n/**\n * @route GET /api/v1/payroll/deduction-types/active\n * @desc Get active deduction types\n * @access HR Admin\n */\nrouter.get('/deduction-types/active', authorize(['hr']), deductionTypeController.getActiveDeductionTypes.bind(deductionTypeController));\n\n/**\n * @route GET /api/v1/payroll/deduction-types/:id\n * @desc Get deduction type by ID\n * @access HR Admin\n */\nrouter.get('/deduction-types/:id', authorize(['hr']), deductionTypeController.getDeductionType.bind(deductionTypeController));\n\n/**\n * @route PUT /api/v1/payroll/deduction-types/:id\n * @desc Update deduction type\n * @access HR Admin\n */\nrouter.put('/deduction-types/:id', authorize(['hr']), deductionTypeController.updateDeductionType.bind(deductionTypeController));\n\n/**\n * @route DELETE /api/v1/payroll/deduction-types/:id\n * @desc Delete deduction type\n * @access HR Admin\n */\nrouter.delete('/deduction-types/:id', authorize(['hr']), deductionTypeController.deleteDeductionType.bind(deductionTypeController));\n\n/**\n * @route POST /api/v1/payroll/deduction-types/:id/activate\n * @desc Activate deduction type\n * @access HR Admin\n */\nrouter.post('/deduction-types/:id/activate', authorize(['hr']), deductionTypeController.activateDeductionType.bind(deductionTypeController));\n\n/**\n * @route POST /api/v1/payroll/deduction-types/:id/deactivate\n * @desc Deactivate deduction type\n * @access HR Admin\n */\nrouter.post('/deduction-types/:id/deactivate', authorize(['hr']), deductionTypeController.deactivateDeductionType.bind(deductionTypeController));\n\n// ===== PAYROLL APPROVAL ROUTES =====\n\n/**\n * @route POST /api/v1/payroll/approvals\n * @desc Create a new payroll approval\n * @access HR Admin\n */\nrouter.post('/approvals', authorize(['hr']), payrollApprovalController.createPayrollApproval.bind(payrollApprovalController));\n\n/**\n * @route GET /api/v1/payroll/approvals\n * @desc Get all payroll approvals\n * @access HR Admin\n */\nrouter.get('/approvals', authorize(['hr']), payrollApprovalController.listPayrollApprovals.bind(payrollApprovalController));\n\n/**\n * @route GET /api/v1/payroll/approvals/stats\n * @desc Get payroll approval statistics\n * @access HR Admin\n */\nrouter.get('/approvals/stats', authorize(['hr']), payrollApprovalController.getPayrollApprovalStats.bind(payrollApprovalController));\n\n/**\n * @route GET /api/v1/payroll/approvals/:id\n * @desc Get payroll approval by ID\n * @access HR Admin, Department Head\n */\nrouter.get('/approvals/:id', authorize(['hr', 'department_head']), payrollApprovalController.getPayrollApproval.bind(payrollApprovalController));\n\n/**\n * @route GET /api/v1/payroll/approvals/approver/:approverId/pending\n * @desc Get pending approvals for a specific approver\n * @access HR Admin, Department Head\n */\nrouter.get('/approvals/approver/:approverId/pending', authorize(['hr', 'department_head']), payrollApprovalController.getPendingApprovalsForApprover.bind(payrollApprovalController));\n\n/**\n * @route PUT /api/v1/payroll/approvals/:id/approve\n * @desc Approve or reject a payroll approval\n * @access HR Admin, Department Head\n */\nrouter.put('/approvals/:id/approve', authorize(['hr', 'department_head']), payrollApprovalController.approvePayrollApproval.bind(payrollApprovalController));\n\n/**\n * @route POST /api/v1/payroll/periods/:payrollPeriodId/approvals\n * @desc Create approvals for a payroll period\n * @access HR Admin\n */\nrouter.post('/periods/:payrollPeriodId/approvals', authorize(['hr']), payrollApprovalController.createApprovalsForPayrollPeriod.bind(payrollApprovalController));\n\n/**\n * @route GET /api/v1/payroll/periods/:payrollPeriodId/approvals/workflow\n * @desc Get approval workflow status for a payroll period\n * @access HR Admin\n */\nrouter.get('/periods/:payrollPeriodId/approvals/workflow', authorize(['hr']), payrollApprovalController.getApprovalWorkflowStatus.bind(payrollApprovalController));\n\n/**\n * @route DELETE /api/v1/payroll/approvals/:id\n * @desc Delete a payroll approval\n * @access HR Admin\n */\nrouter.delete('/approvals/:id', authorize(['hr']), payrollApprovalController.deletePayrollApproval.bind(payrollApprovalController));\n\n// ===== NEW PAYROLL SYSTEM ROUTES =====\n\n// New routes for benefit types management\n/**\n * @route POST /api/v1/payroll/benefit-types\n * @desc Create a new benefit type\n * @access HR Admin\n */\nrouter.post('/benefit-types', authorize(['hr']), payrollController.createBenefitType.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/benefit-types\n * @desc Get all benefit types\n * @access HR Admin\n */\nrouter.get('/benefit-types', authorize(['hr']), payrollController.getBenefitTypes.bind(payrollController));\n\n/**\n * @route PUT /api/v1/payroll/benefit-types/:id\n * @desc Update benefit type\n * @access HR Admin\n */\nrouter.put('/benefit-types/:id', authorize(['hr']), payrollController.updateBenefitType.bind(payrollController));\n\n/**\n * @route DELETE /api/v1/payroll/benefit-types/:id\n * @desc Delete benefit type\n * @access HR Admin\n */\nrouter.delete('/benefit-types/:id', authorize(['hr']), payrollController.deleteBenefitType.bind(payrollController));\n\n// New routes for employee deduction balances management\n/**\n * @route GET /api/v1/payroll/employee-deduction-balances\n * @desc Get employee deduction balances\n * @access HR Admin\n */\nrouter.get('/employee-deduction-balances', authorize(['hr']), payrollController.getEmployeeDeductionBalances.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/employee-deduction-balances\n * @desc Create employee deduction balance\n * @access HR Admin\n */\nrouter.post('/employee-deduction-balances', authorize(['hr']), payrollController.createEmployeeDeductionBalance.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/employee-deduction-balances/upload\n * @desc Upload employee deduction balances from CSV\n * @access HR Admin\n */\nrouter.post('/employee-deduction-balances/upload', authorize(['hr']), payrollController.uploadEmployeeDeductionBalances.bind(payrollController));\n\n/**\n * @route DELETE /api/v1/payroll/employee-deduction-balances/:id\n * @desc Delete employee deduction balance\n * @access HR Admin\n */\nrouter.delete('/employee-deduction-balances/:id', authorize(['hr']), payrollController.deleteEmployeeDeductionBalance.bind(payrollController));\n\n// New routes for employee benefits management\n/**\n * @route GET /api/v1/payroll/employee-benefits\n * @desc Get employee benefits\n * @access HR Admin\n */\nrouter.get('/employee-benefits', authorize(['hr']), payrollController.getEmployeeBenefits.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/employee-benefits\n * @desc Create employee benefit\n * @access HR Admin\n */\nrouter.post('/employee-benefits', authorize(['hr']), payrollController.createEmployeeBenefit.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/employee-benefits/upload\n * @desc Upload employee benefits from CSV\n * @access HR Admin\n */\nrouter.post('/employee-benefits/upload', authorize(['hr']), payrollController.uploadEmployeeBenefits.bind(payrollController));\n\n/**\n * @route PUT /api/v1/payroll/employee-benefits/:id\n * @desc Update employee benefit\n * @access HR Admin\n */\nrouter.put('/employee-benefits/:id', authorize(['hr']), payrollController.updateEmployeeBenefit.bind(payrollController));\n\n/**\n * @route DELETE /api/v1/payroll/employee-benefits/:id\n * @desc Delete employee benefit\n * @access HR Admin\n */\nrouter.delete('/employee-benefits/:id', authorize(['hr']), payrollController.deleteEmployeeBenefit.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/initialize-periods\n * @desc Initialize payroll periods for the current year\n * @access HR Admin\n */\nrouter.post('/initialize-periods', authorize(['hr']), payrollController.initializePayrollPeriods.bind(payrollController));\n\n/**\n * @route POST /api/v1/payroll/generate-current-month\n * @desc Generate payroll period for the current month only\n * @access HR Admin\n */\nrouter.post('/generate-current-month', authorize(['hr']), payrollController.generateCurrentMonthPeriod.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/expected-hours\n * @desc Get expected monthly hours from system settings\n * @access HR Admin\n */\nrouter.get('/expected-hours', authorize(['hr']), payrollController.getExpectedMonthlyHours.bind(payrollController));\n\n/**\n * @route GET /api/v1/payroll/paystubs/department/:departmentId/period/:periodId\n * @desc Generate PDF paystubs for a department's employees for a specific period\n * @access HR Admin\n */\nrouter.get('/paystubs/department/:departmentId/period/:periodId', authorize(['hr']), payrollController.generateDepartmentPaystubs.bind(payrollController));\n\nexport default router;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "04165e9954f86e7f1ff73fd068df3b4597f197ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_3uv1ebtyd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_3uv1ebtyd();
cov_3uv1ebtyd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_3uv1ebtyd().s[1]++, require("express"));
const payrollController_1 =
/* istanbul ignore next */
(cov_3uv1ebtyd().s[2]++, require("../../controllers/payroll/payrollController"));
const deductionTypeController_1 =
/* istanbul ignore next */
(cov_3uv1ebtyd().s[3]++, require("../../controllers/payroll/deductionTypeController"));
const payrollApprovalController_1 =
/* istanbul ignore next */
(cov_3uv1ebtyd().s[4]++, require("../../controllers/payroll/payrollApprovalController"));
const authenticate_1 =
/* istanbul ignore next */
(cov_3uv1ebtyd().s[5]++, require("../../middleware/auth/authenticate"));
const authorize_1 =
/* istanbul ignore next */
(cov_3uv1ebtyd().s[6]++, require("../../middleware/auth/authorize"));
const router =
/* istanbul ignore next */
(cov_3uv1ebtyd().s[7]++, (0, express_1.Router)());
const payrollApprovalController =
/* istanbul ignore next */
(cov_3uv1ebtyd().s[8]++, new payrollApprovalController_1.PayrollApprovalController());
// Apply authentication to all routes
/* istanbul ignore next */
cov_3uv1ebtyd().s[9]++;
router.use(authenticate_1.authenticate);
/**
 * @route POST /api/v1/payroll/periods
 * @desc Create a new payroll period
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[10]++;
router.post('/periods', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.createPayrollPeriod.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/periods
 * @desc Get all payroll periods
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[11]++;
router.get('/periods', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getPayrollPeriods.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/periods/:id
 * @desc Get payroll period by ID
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[12]++;
router.get('/periods/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getPayrollPeriod.bind(payrollController_1.payrollController));
/**
 * @route PUT /api/v1/payroll/periods/:id
 * @desc Update payroll period
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[13]++;
router.put('/periods/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.updatePayrollPeriod.bind(payrollController_1.payrollController));
/**
 * @route DELETE /api/v1/payroll/periods/:id
 * @desc Delete payroll period
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[14]++;
router.delete('/periods/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.deletePayrollPeriod.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/periods/:id/generate
 * @desc Generate payroll records for a period
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[15]++;
router.post('/periods/:id/generate', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.generatePayrollRecords.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/periods/:id/reprocess
 * @desc Reprocess payroll records for a period (clears existing and regenerates)
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[16]++;
router.post('/periods/:id/reprocess', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.reprocessPayrollRecords.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/periods/:id/summary
 * @desc Get payroll period summary
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[17]++;
router.get('/periods/:id/summary', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getPayrollSummary.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/records
 * @desc Get payroll records
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[18]++;
router.get('/records', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getPayrollRecords.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/records/export
 * @desc Export payroll records
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[19]++;
router.get('/records/export', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.exportPayrollRecords.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/records/:id
 * @desc Get payroll record by ID
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[20]++;
router.get('/records/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getPayrollRecord.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/stats
 * @desc Get payroll statistics
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[21]++;
router.get('/stats', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getPayrollStats.bind(payrollController_1.payrollController));
/**
 * @route PUT /api/v1/payroll/records/bulk-paid
 * @desc Bulk update payroll records to paid status
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[22]++;
router.put('/records/bulk-paid', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.bulkUpdatePayrollRecordsToPaid.bind(payrollController_1.payrollController));
/**
 * @route PUT /api/v1/payroll/records/:id
 * @desc Update payroll record
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[23]++;
router.put('/records/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.updatePayrollRecord.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/records/:id/approve
 * @desc Approve payroll record
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[24]++;
router.post('/records/:id/approve', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.approvePayrollRecord.bind(payrollController_1.payrollController));
/**
 * @route PUT /api/v1/payroll/records/:id/status
 * @desc Update payroll record status
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[25]++;
router.put('/records/:id/status', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.updatePayrollRecordStatus.bind(payrollController_1.payrollController));
/**
 * @route PUT /api/v1/payroll/periods/:id/complete
 * @desc Complete payroll period (mark as completed when all departments approve)
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[26]++;
router.put('/periods/:id/complete', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.completePayrollPeriod.bind(payrollController_1.payrollController));
/**
 * @route PUT /api/v1/payroll/periods/:id/records/status
 * @desc Bulk update payroll records status for a period
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[27]++;
router.put('/periods/:id/records/status', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.bulkUpdatePayrollRecordsStatus.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/periods/:id/export/paystubs/pdf
 * @desc Export all employee paystubs for a period as PDF
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[28]++;
router.get('/periods/:id/export/paystubs/pdf', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.exportPeriodPaystubsPDF.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/periods/:id/export/paystubs/department/pdf
 * @desc Export department employee paystubs for a period as PDF
 * @access Department Head
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[29]++;
router.get('/periods/:id/export/paystubs/department/pdf', (0, authorize_1.authorize)(['department_head']), payrollController_1.payrollController.exportDepartmentPaystubsPDF.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/records/:id/mark-paid
 * @desc Mark payroll record as paid
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[30]++;
router.post('/records/:id/mark-paid', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.markPayrollAsPaid.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/deduction-types
 * @desc Create a new deduction type
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[31]++;
router.post('/deduction-types', (0, authorize_1.authorize)(['hr']), deductionTypeController_1.deductionTypeController.createDeductionType.bind(deductionTypeController_1.deductionTypeController));
/**
 * @route GET /api/v1/payroll/deduction-types
 * @desc Get all deduction types
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[32]++;
router.get('/deduction-types', (0, authorize_1.authorize)(['hr']), deductionTypeController_1.deductionTypeController.getDeductionTypes.bind(deductionTypeController_1.deductionTypeController));
/**
 * @route GET /api/v1/payroll/deduction-types/active
 * @desc Get active deduction types
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[33]++;
router.get('/deduction-types/active', (0, authorize_1.authorize)(['hr']), deductionTypeController_1.deductionTypeController.getActiveDeductionTypes.bind(deductionTypeController_1.deductionTypeController));
/**
 * @route GET /api/v1/payroll/deduction-types/:id
 * @desc Get deduction type by ID
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[34]++;
router.get('/deduction-types/:id', (0, authorize_1.authorize)(['hr']), deductionTypeController_1.deductionTypeController.getDeductionType.bind(deductionTypeController_1.deductionTypeController));
/**
 * @route PUT /api/v1/payroll/deduction-types/:id
 * @desc Update deduction type
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[35]++;
router.put('/deduction-types/:id', (0, authorize_1.authorize)(['hr']), deductionTypeController_1.deductionTypeController.updateDeductionType.bind(deductionTypeController_1.deductionTypeController));
/**
 * @route DELETE /api/v1/payroll/deduction-types/:id
 * @desc Delete deduction type
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[36]++;
router.delete('/deduction-types/:id', (0, authorize_1.authorize)(['hr']), deductionTypeController_1.deductionTypeController.deleteDeductionType.bind(deductionTypeController_1.deductionTypeController));
/**
 * @route POST /api/v1/payroll/deduction-types/:id/activate
 * @desc Activate deduction type
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[37]++;
router.post('/deduction-types/:id/activate', (0, authorize_1.authorize)(['hr']), deductionTypeController_1.deductionTypeController.activateDeductionType.bind(deductionTypeController_1.deductionTypeController));
/**
 * @route POST /api/v1/payroll/deduction-types/:id/deactivate
 * @desc Deactivate deduction type
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[38]++;
router.post('/deduction-types/:id/deactivate', (0, authorize_1.authorize)(['hr']), deductionTypeController_1.deductionTypeController.deactivateDeductionType.bind(deductionTypeController_1.deductionTypeController));
// ===== PAYROLL APPROVAL ROUTES =====
/**
 * @route POST /api/v1/payroll/approvals
 * @desc Create a new payroll approval
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[39]++;
router.post('/approvals', (0, authorize_1.authorize)(['hr']), payrollApprovalController.createPayrollApproval.bind(payrollApprovalController));
/**
 * @route GET /api/v1/payroll/approvals
 * @desc Get all payroll approvals
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[40]++;
router.get('/approvals', (0, authorize_1.authorize)(['hr']), payrollApprovalController.listPayrollApprovals.bind(payrollApprovalController));
/**
 * @route GET /api/v1/payroll/approvals/stats
 * @desc Get payroll approval statistics
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[41]++;
router.get('/approvals/stats', (0, authorize_1.authorize)(['hr']), payrollApprovalController.getPayrollApprovalStats.bind(payrollApprovalController));
/**
 * @route GET /api/v1/payroll/approvals/:id
 * @desc Get payroll approval by ID
 * @access HR Admin, Department Head
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[42]++;
router.get('/approvals/:id', (0, authorize_1.authorize)(['hr', 'department_head']), payrollApprovalController.getPayrollApproval.bind(payrollApprovalController));
/**
 * @route GET /api/v1/payroll/approvals/approver/:approverId/pending
 * @desc Get pending approvals for a specific approver
 * @access HR Admin, Department Head
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[43]++;
router.get('/approvals/approver/:approverId/pending', (0, authorize_1.authorize)(['hr', 'department_head']), payrollApprovalController.getPendingApprovalsForApprover.bind(payrollApprovalController));
/**
 * @route PUT /api/v1/payroll/approvals/:id/approve
 * @desc Approve or reject a payroll approval
 * @access HR Admin, Department Head
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[44]++;
router.put('/approvals/:id/approve', (0, authorize_1.authorize)(['hr', 'department_head']), payrollApprovalController.approvePayrollApproval.bind(payrollApprovalController));
/**
 * @route POST /api/v1/payroll/periods/:payrollPeriodId/approvals
 * @desc Create approvals for a payroll period
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[45]++;
router.post('/periods/:payrollPeriodId/approvals', (0, authorize_1.authorize)(['hr']), payrollApprovalController.createApprovalsForPayrollPeriod.bind(payrollApprovalController));
/**
 * @route GET /api/v1/payroll/periods/:payrollPeriodId/approvals/workflow
 * @desc Get approval workflow status for a payroll period
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[46]++;
router.get('/periods/:payrollPeriodId/approvals/workflow', (0, authorize_1.authorize)(['hr']), payrollApprovalController.getApprovalWorkflowStatus.bind(payrollApprovalController));
/**
 * @route DELETE /api/v1/payroll/approvals/:id
 * @desc Delete a payroll approval
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[47]++;
router.delete('/approvals/:id', (0, authorize_1.authorize)(['hr']), payrollApprovalController.deletePayrollApproval.bind(payrollApprovalController));
// ===== NEW PAYROLL SYSTEM ROUTES =====
// New routes for benefit types management
/**
 * @route POST /api/v1/payroll/benefit-types
 * @desc Create a new benefit type
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[48]++;
router.post('/benefit-types', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.createBenefitType.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/benefit-types
 * @desc Get all benefit types
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[49]++;
router.get('/benefit-types', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getBenefitTypes.bind(payrollController_1.payrollController));
/**
 * @route PUT /api/v1/payroll/benefit-types/:id
 * @desc Update benefit type
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[50]++;
router.put('/benefit-types/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.updateBenefitType.bind(payrollController_1.payrollController));
/**
 * @route DELETE /api/v1/payroll/benefit-types/:id
 * @desc Delete benefit type
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[51]++;
router.delete('/benefit-types/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.deleteBenefitType.bind(payrollController_1.payrollController));
// New routes for employee deduction balances management
/**
 * @route GET /api/v1/payroll/employee-deduction-balances
 * @desc Get employee deduction balances
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[52]++;
router.get('/employee-deduction-balances', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getEmployeeDeductionBalances.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/employee-deduction-balances
 * @desc Create employee deduction balance
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[53]++;
router.post('/employee-deduction-balances', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.createEmployeeDeductionBalance.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/employee-deduction-balances/upload
 * @desc Upload employee deduction balances from CSV
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[54]++;
router.post('/employee-deduction-balances/upload', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.uploadEmployeeDeductionBalances.bind(payrollController_1.payrollController));
/**
 * @route DELETE /api/v1/payroll/employee-deduction-balances/:id
 * @desc Delete employee deduction balance
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[55]++;
router.delete('/employee-deduction-balances/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.deleteEmployeeDeductionBalance.bind(payrollController_1.payrollController));
// New routes for employee benefits management
/**
 * @route GET /api/v1/payroll/employee-benefits
 * @desc Get employee benefits
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[56]++;
router.get('/employee-benefits', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getEmployeeBenefits.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/employee-benefits
 * @desc Create employee benefit
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[57]++;
router.post('/employee-benefits', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.createEmployeeBenefit.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/employee-benefits/upload
 * @desc Upload employee benefits from CSV
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[58]++;
router.post('/employee-benefits/upload', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.uploadEmployeeBenefits.bind(payrollController_1.payrollController));
/**
 * @route PUT /api/v1/payroll/employee-benefits/:id
 * @desc Update employee benefit
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[59]++;
router.put('/employee-benefits/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.updateEmployeeBenefit.bind(payrollController_1.payrollController));
/**
 * @route DELETE /api/v1/payroll/employee-benefits/:id
 * @desc Delete employee benefit
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[60]++;
router.delete('/employee-benefits/:id', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.deleteEmployeeBenefit.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/initialize-periods
 * @desc Initialize payroll periods for the current year
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[61]++;
router.post('/initialize-periods', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.initializePayrollPeriods.bind(payrollController_1.payrollController));
/**
 * @route POST /api/v1/payroll/generate-current-month
 * @desc Generate payroll period for the current month only
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[62]++;
router.post('/generate-current-month', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.generateCurrentMonthPeriod.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/expected-hours
 * @desc Get expected monthly hours from system settings
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[63]++;
router.get('/expected-hours', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.getExpectedMonthlyHours.bind(payrollController_1.payrollController));
/**
 * @route GET /api/v1/payroll/paystubs/department/:departmentId/period/:periodId
 * @desc Generate PDF paystubs for a department's employees for a specific period
 * @access HR Admin
 */
/* istanbul ignore next */
cov_3uv1ebtyd().s[64]++;
router.get('/paystubs/department/:departmentId/period/:periodId', (0, authorize_1.authorize)(['hr']), payrollController_1.payrollController.generateDepartmentPaystubs.bind(payrollController_1.payrollController));
/* istanbul ignore next */
cov_3uv1ebtyd().s[65]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,