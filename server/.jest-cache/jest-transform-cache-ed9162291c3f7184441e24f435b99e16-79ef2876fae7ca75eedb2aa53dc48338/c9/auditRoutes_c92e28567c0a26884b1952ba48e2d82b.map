{"version":3,"names":["cov_26pn4w6duj","actualCoverage","s","express_1","require","auditController_1","authenticate_1","authorize_1","router","Router","auditController","AuditController","use","authenticate","authorize","get","getAuditLogs","bind","getAuditStats","getAuditLogById","getAuditLogsByRecord","getAuditLogsByUser","post","cleanupOldLogs","exports","default"],"sources":["/home/kim/tito/server/src/routes/audit/auditRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { AuditController } from '../../controllers/audit/auditController';\nimport { authenticate } from '../../middleware/auth/authenticate';\nimport { authorize } from '../../middleware/auth/authorize';\n\nconst router = Router();\nconst auditController = new AuditController();\n\n// All audit routes require authentication and HR role\nrouter.use(authenticate);\nrouter.use(authorize(['hr']));\n\n// Get audit logs with filtering and pagination\nrouter.get(\n  '/',\n  auditController.getAuditLogs.bind(auditController)\n);\n\n// Get audit statistics\nrouter.get(\n  '/stats',\n  auditController.getAuditStats.bind(auditController)\n);\n\n// Get specific audit log by ID\nrouter.get(\n  '/:id',\n  auditController.getAuditLogById.bind(auditController)\n);\n\n// Get audit logs for a specific record\nrouter.get(\n  '/record/:tableName/:recordId',\n  auditController.getAuditLogsByRecord.bind(auditController)\n);\n\n// Get audit logs for a specific user\nrouter.get(\n  '/user/:userId',\n  auditController.getAuditLogsByUser.bind(auditController)\n);\n\n// Cleanup old audit logs\nrouter.post(\n  '/cleanup',\n  auditController.cleanupOldLogs.bind(auditController)\n);\n\nexport default router;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwBA;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;AAxBA,MAAAC,SAAA;AAAA;AAAA,CAAAH,cAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAC,iBAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAE,cAAA;AAAA;AAAA,CAAAN,cAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAG,WAAA;AAAA;AAAA,CAAAP,cAAA,GAAAE,CAAA,OAAAE,OAAA;AAEA,MAAMI,MAAM;AAAA;AAAA,CAAAR,cAAA,GAAAE,CAAA,OAAG,IAAAC,SAAA,CAAAM,MAAM,GAAE;AACvB,MAAMC,eAAe;AAAA;AAAA,CAAAV,cAAA,GAAAE,CAAA,OAAG,IAAIG,iBAAA,CAAAM,eAAe,EAAE;AAE7C;AAAA;AAAAX,cAAA,GAAAE,CAAA;AACAM,MAAM,CAACI,GAAG,CAACN,cAAA,CAAAO,YAAY,CAAC;AAAC;AAAAb,cAAA,GAAAE,CAAA;AACzBM,MAAM,CAACI,GAAG,CAAC,IAAAL,WAAA,CAAAO,SAAS,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAE7B;AAAA;AAAAd,cAAA,GAAAE,CAAA;AACAM,MAAM,CAACO,GAAG,CACR,GAAG,EACHL,eAAe,CAACM,YAAY,CAACC,IAAI,CAACP,eAAe,CAAC,CACnD;AAED;AAAA;AAAAV,cAAA,GAAAE,CAAA;AACAM,MAAM,CAACO,GAAG,CACR,QAAQ,EACRL,eAAe,CAACQ,aAAa,CAACD,IAAI,CAACP,eAAe,CAAC,CACpD;AAED;AAAA;AAAAV,cAAA,GAAAE,CAAA;AACAM,MAAM,CAACO,GAAG,CACR,MAAM,EACNL,eAAe,CAACS,eAAe,CAACF,IAAI,CAACP,eAAe,CAAC,CACtD;AAED;AAAA;AAAAV,cAAA,GAAAE,CAAA;AACAM,MAAM,CAACO,GAAG,CACR,8BAA8B,EAC9BL,eAAe,CAACU,oBAAoB,CAACH,IAAI,CAACP,eAAe,CAAC,CAC3D;AAED;AAAA;AAAAV,cAAA,GAAAE,CAAA;AACAM,MAAM,CAACO,GAAG,CACR,eAAe,EACfL,eAAe,CAACW,kBAAkB,CAACJ,IAAI,CAACP,eAAe,CAAC,CACzD;AAED;AAAA;AAAAV,cAAA,GAAAE,CAAA;AACAM,MAAM,CAACc,IAAI,CACT,UAAU,EACVZ,eAAe,CAACa,cAAc,CAACN,IAAI,CAACP,eAAe,CAAC,CACrD;AAAC;AAAAV,cAAA,GAAAE,CAAA;AAEFsB,OAAA,CAAAC,OAAA,GAAejB,MAAM","ignoreList":[]}