{"version":3,"names":["cov_rlvv7x6b5","actualCoverage","joi_1","s","__importDefault","require","exports","createDepartmentSchema","default","object","name","string","min","max","required","messages","description","allow","optional","department_head_user_id","uuid","is_active","boolean","updateDepartmentSchema","departmentIdSchema","id","departmentNameSchema","assignDepartmentHeadSchema","department_id","user_id","listDepartmentsSchema","page","number","integer","limit","search","has_head"],"sources":["/home/kim/tito/server/src/utils/validation/departmentSchemas.ts"],"sourcesContent":["import Joi from 'joi';\n\nexport const createDepartmentSchema = Joi.object({\n  name: Joi.string().min(2).max(100).required().messages({\n    'string.min': 'Department name must be at least 2 characters long',\n    'string.max': 'Department name must not exceed 100 characters',\n    'any.required': 'Department name is required'\n  }),\n  description: Joi.string().max(500).allow(null, '').optional().messages({\n    'string.max': 'Description must not exceed 500 characters'\n  }),\n  department_head_user_id: Joi.string().uuid().allow(null).optional().messages({\n    'string.guid': 'Department head user ID must be a valid UUID'\n  }),\n  is_active: Joi.boolean().default(true).messages({\n    'boolean.base': 'Is active must be a boolean'\n  })\n});\n\nexport const updateDepartmentSchema = Joi.object({\n  name: Joi.string().min(2).max(100).optional().messages({\n    'string.min': 'Department name must be at least 2 characters long',\n    'string.max': 'Department name must not exceed 100 characters'\n  }),\n  description: Joi.string().max(500).allow(null, '').optional().messages({\n    'string.max': 'Description must not exceed 500 characters'\n  }),\n  department_head_user_id: Joi.string().uuid().allow(null).optional().messages({\n    'string.guid': 'Department head user ID must be a valid UUID'\n  }),\n  is_active: Joi.boolean().optional().messages({\n    'boolean.base': 'Is active must be a boolean'\n  })\n});\n\nexport const departmentIdSchema = Joi.object({\n  id: Joi.string().uuid().required().messages({\n    'string.guid': 'Department ID must be a valid UUID',\n    'any.required': 'Department ID is required'\n  })\n});\n\nexport const departmentNameSchema = Joi.object({\n  name: Joi.string().min(2).max(100).required().messages({\n    'string.min': 'Department name must be at least 2 characters long',\n    'string.max': 'Department name must not exceed 100 characters',\n    'string.empty': 'Department name cannot be empty',\n    'any.required': 'Department name is required'\n  })\n});\n\nexport const assignDepartmentHeadSchema = Joi.object({\n  department_id: Joi.string().uuid().required().messages({\n    'string.guid': 'Department ID must be a valid UUID',\n    'any.required': 'Department ID is required'\n  }),\n  user_id: Joi.string().uuid().required().messages({\n    'string.guid': 'User ID must be a valid UUID',\n    'any.required': 'User ID is required'\n  })\n});\n\nexport const listDepartmentsSchema = Joi.object({\n  page: Joi.number().integer().min(1).default(1).messages({\n    'number.base': 'Page must be a number',\n    'number.integer': 'Page must be an integer',\n    'number.min': 'Page must be at least 1'\n  }),\n  limit: Joi.number().integer().min(1).max(100).default(20).messages({\n    'number.base': 'Limit must be a number',\n    'number.integer': 'Limit must be an integer',\n    'number.min': 'Limit must be at least 1',\n    'number.max': 'Limit cannot exceed 100'\n  }),\n  is_active: Joi.boolean().optional().messages({\n    'boolean.base': 'Is active must be a boolean'\n  }),\n  search: Joi.string().min(1).max(100).optional().messages({\n    'string.min': 'Search term must be at least 1 character',\n    'string.max': 'Search term cannot exceed 100 characters'\n  }),\n  has_head: Joi.boolean().optional().messages({\n    'boolean.base': 'Has head must be a boolean'\n  })\n}); "],"mappings":"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","ignoreList":[]}