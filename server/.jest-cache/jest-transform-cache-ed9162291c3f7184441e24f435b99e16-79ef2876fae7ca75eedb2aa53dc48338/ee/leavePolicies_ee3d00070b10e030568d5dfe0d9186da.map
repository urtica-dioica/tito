{"file":"/home/kim/tito/server/src/config/leavePolicies.ts","mappings":";AAAA;;;;;GAKG;;;AA4DH,sDAEC;AAKD,0CAGC;AAKD,8DAGC;AAKD,sDAGC;AA5EY,QAAA,sBAAsB,GAAyB;IAC1D;QACE,SAAS,EAAE,UAAU;QACrB,MAAM,EAAE,IAAI;QACZ,iBAAiB,EAAE,GAAG;QACtB,WAAW,EAAE,8BAA8B;KAC5C;IACD;QACE,SAAS,EAAE,MAAM;QACjB,MAAM,EAAE,IAAI;QACZ,iBAAiB,EAAE,GAAG;QACtB,kBAAkB,EAAE,EAAE,EAAE,sCAAsC;QAC9D,WAAW,EAAE,iDAAiD;KAC/D;IACD;QACE,SAAS,EAAE,WAAW;QACtB,MAAM,EAAE,IAAI;QACZ,iBAAiB,EAAE,GAAG;QACtB,WAAW,EAAE,+BAA+B;KAC7C;IACD;QACE,SAAS,EAAE,WAAW;QACtB,MAAM,EAAE,IAAI;QACZ,iBAAiB,EAAE,GAAG;QACtB,WAAW,EAAE,+BAA+B;KAC7C;IACD;QACE,SAAS,EAAE,aAAa;QACxB,MAAM,EAAE,IAAI;QACZ,iBAAiB,EAAE,GAAG;QACtB,kBAAkB,EAAE,CAAC,EAAE,4CAA4C;QACnE,WAAW,EAAE,uDAAuD;KACrE;IACD;QACE,SAAS,EAAE,UAAU;QACrB,MAAM,EAAE,KAAK;QACb,iBAAiB,EAAE,CAAC;QACpB,WAAW,EAAE,0BAA0B;KACxC;IACD;QACE,SAAS,EAAE,OAAO;QAClB,MAAM,EAAE,KAAK;QACb,iBAAiB,EAAE,CAAC;QACpB,WAAW,EAAE,yCAAyC;KACvD;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,qBAAqB,CAAC,SAAiB;IACrD,OAAO,8BAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC;AAC/E,CAAC;AAED;;GAEG;AACH,SAAgB,eAAe,CAAC,SAAiB;IAC/C,MAAM,MAAM,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAChD,OAAO,MAAM,EAAE,MAAM,IAAI,KAAK,CAAC;AACjC,CAAC;AAED;;GAEG;AACH,SAAgB,yBAAyB,CAAC,SAAiB;IACzD,MAAM,MAAM,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAChD,OAAO,MAAM,EAAE,iBAAiB,IAAI,CAAC,CAAC;AACxC,CAAC;AAED;;GAEG;AACH,SAAgB,qBAAqB,CAAC,SAAiB;IACrD,MAAM,MAAM,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAChD,OAAO,MAAM,EAAE,kBAAkB,CAAC;AACpC,CAAC","names":[],"sources":["/home/kim/tito/server/src/config/leavePolicies.ts"],"sourcesContent":["/**\n * Leave Payment Policies Configuration\n * \n * This file defines which leave types are paid and their payment policies.\n * This can be extended to support more complex policies in the future.\n */\n\nexport interface LeavePaymentPolicy {\n  leaveType: string;\n  isPaid: boolean;\n  paymentPercentage?: number; // For partial payment (e.g., 50% for some sick leave)\n  maxPaidDaysPerYear?: number; // Maximum paid days per year for this leave type\n  description: string;\n}\n\nexport const LEAVE_PAYMENT_POLICIES: LeavePaymentPolicy[] = [\n  {\n    leaveType: 'vacation',\n    isPaid: true,\n    paymentPercentage: 100,\n    description: 'Vacation leave is fully paid'\n  },\n  {\n    leaveType: 'sick',\n    isPaid: true,\n    paymentPercentage: 100,\n    maxPaidDaysPerYear: 10, // Example: 10 paid sick days per year\n    description: 'Sick leave is fully paid up to 10 days per year'\n  },\n  {\n    leaveType: 'maternity',\n    isPaid: true,\n    paymentPercentage: 100,\n    description: 'Maternity leave is fully paid'\n  },\n  {\n    leaveType: 'paternity',\n    isPaid: true,\n    paymentPercentage: 100,\n    description: 'Paternity leave is fully paid'\n  },\n  {\n    leaveType: 'bereavement',\n    isPaid: true,\n    paymentPercentage: 100,\n    maxPaidDaysPerYear: 3, // Example: 3 paid bereavement days per year\n    description: 'Bereavement leave is fully paid up to 3 days per year'\n  },\n  {\n    leaveType: 'personal',\n    isPaid: false,\n    paymentPercentage: 0,\n    description: 'Personal leave is unpaid'\n  },\n  {\n    leaveType: 'other',\n    isPaid: false,\n    paymentPercentage: 0,\n    description: 'Other leave types are unpaid by default'\n  }\n];\n\n/**\n * Get payment policy for a specific leave type\n */\nexport function getLeavePaymentPolicy(leaveType: string): LeavePaymentPolicy | undefined {\n  return LEAVE_PAYMENT_POLICIES.find(policy => policy.leaveType === leaveType);\n}\n\n/**\n * Check if a leave type is paid\n */\nexport function isLeaveTypePaid(leaveType: string): boolean {\n  const policy = getLeavePaymentPolicy(leaveType);\n  return policy?.isPaid || false;\n}\n\n/**\n * Get payment percentage for a leave type\n */\nexport function getLeavePaymentPercentage(leaveType: string): number {\n  const policy = getLeavePaymentPolicy(leaveType);\n  return policy?.paymentPercentage || 0;\n}\n\n/**\n * Get maximum paid days per year for a leave type\n */\nexport function getMaxPaidDaysPerYear(leaveType: string): number | undefined {\n  const policy = getLeavePaymentPolicy(leaveType);\n  return policy?.maxPaidDaysPerYear;\n}\n"],"version":3}