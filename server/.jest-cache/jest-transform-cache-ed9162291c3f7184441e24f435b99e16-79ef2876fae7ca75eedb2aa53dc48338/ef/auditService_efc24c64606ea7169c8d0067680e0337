edb3fa10def92435248ab07bbfd7affe
"use strict";

/* istanbul ignore next */
function cov_1n7z2ckb73() {
  var path = "/home/kim/tito/server/src/services/audit/auditService.ts";
  var hash = "52d3294da9bf3bc7c796d32ea21e3f7f5659ee60";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/kim/tito/server/src/services/audit/auditService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "37": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 57
        }
      },
      "38": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 60
        }
      },
      "39": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 61
        }
      },
      "40": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 69
        }
      },
      "41": {
        start: {
          line: 48,
          column: 30
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "42": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 36
        }
      },
      "43": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "44": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 68,
          column: 17
        }
      },
      "45": {
        start: {
          line: 53,
          column: 42
        },
        end: {
          line: 53,
          column: 125
        }
      },
      "46": {
        start: {
          line: 53,
          column: 77
        },
        end: {
          line: 53,
          column: 124
        }
      },
      "47": {
        start: {
          line: 54,
          column: 38
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "48": {
        start: {
          line: 55,
          column: 33
        },
        end: {
          line: 55,
          column: 78
        }
      },
      "49": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 64,
          column: 21
        }
      },
      "50": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 63,
          column: 26
        }
      },
      "51": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 73,
          column: 14
        }
      },
      "52": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "53": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 57
        }
      },
      "54": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "55": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 24
        }
      },
      "56": {
        start: {
          line: 85,
          column: 28
        },
        end: {
          line: 85,
          column: 32
        }
      },
      "57": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "58": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "59": {
        start: {
          line: 88,
          column: 38
        },
        end: {
          line: 88,
          column: 121
        }
      },
      "60": {
        start: {
          line: 88,
          column: 73
        },
        end: {
          line: 88,
          column: 120
        }
      },
      "61": {
        start: {
          line: 89,
          column: 34
        },
        end: {
          line: 89,
          column: 49
        }
      },
      "62": {
        start: {
          line: 90,
          column: 29
        },
        end: {
          line: 90,
          column: 74
        }
      },
      "63": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "64": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 98,
          column: 22
        }
      },
      "65": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "66": {
        start: {
          line: 111,
          column: 21
        },
        end: {
          line: 111,
          column: 87
        }
      },
      "67": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "68": {
        start: {
          line: 113,
          column: 32
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "69": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "70": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 131,
          column: 17
        }
      },
      "71": {
        start: {
          line: 116,
          column: 42
        },
        end: {
          line: 116,
          column: 125
        }
      },
      "72": {
        start: {
          line: 116,
          column: 77
        },
        end: {
          line: 116,
          column: 124
        }
      },
      "73": {
        start: {
          line: 117,
          column: 38
        },
        end: {
          line: 117,
          column: 53
        }
      },
      "74": {
        start: {
          line: 118,
          column: 33
        },
        end: {
          line: 118,
          column: 78
        }
      },
      "75": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 127,
          column: 21
        }
      },
      "76": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 126,
          column: 26
        }
      },
      "77": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "78": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 29
        }
      },
      "79": {
        start: {
          line: 141,
          column: 21
        },
        end: {
          line: 141,
          column: 79
        }
      },
      "80": {
        start: {
          line: 142,
          column: 30
        },
        end: {
          line: 167,
          column: 11
        }
      },
      "81": {
        start: {
          line: 143,
          column: 32
        },
        end: {
          line: 143,
          column: 36
        }
      },
      "82": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "83": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 161,
          column: 17
        }
      },
      "84": {
        start: {
          line: 146,
          column: 42
        },
        end: {
          line: 146,
          column: 125
        }
      },
      "85": {
        start: {
          line: 146,
          column: 77
        },
        end: {
          line: 146,
          column: 124
        }
      },
      "86": {
        start: {
          line: 147,
          column: 38
        },
        end: {
          line: 147,
          column: 53
        }
      },
      "87": {
        start: {
          line: 148,
          column: 33
        },
        end: {
          line: 148,
          column: 78
        }
      },
      "88": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 157,
          column: 21
        }
      },
      "89": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 156,
          column: 26
        }
      },
      "90": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 166,
          column: 14
        }
      },
      "91": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 29
        }
      },
      "92": {
        start: {
          line: 171,
          column: 27
        },
        end: {
          line: 171,
          column: 67
        }
      },
      "93": {
        start: {
          line: 173,
          column: 30
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "94": {
        start: {
          line: 187,
          column: 28
        },
        end: {
          line: 187,
          column: 110
        }
      },
      "95": {
        start: {
          line: 187,
          column: 63
        },
        end: {
          line: 187,
          column: 109
        }
      },
      "96": {
        start: {
          line: 188,
          column: 21
        },
        end: {
          line: 188,
          column: 30
        }
      },
      "97": {
        start: {
          line: 189,
          column: 31
        },
        end: {
          line: 189,
          column: 62
        }
      },
      "98": {
        start: {
          line: 190,
          column: 25
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "99": {
        start: {
          line: 190,
          column: 57
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "100": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 198,
          column: 10
        }
      },
      "101": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 71
        }
      },
      "102": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 212,
          column: 11
        }
      },
      "103": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 223,
          column: 11
        }
      },
      "104": {
        start: {
          line: 226,
          column: 0
        },
        end: {
          line: 226,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 26
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 36
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 45
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 48,
            column: 64
          },
          end: {
            line: 48,
            column: 65
          }
        },
        loc: {
          start: {
            line: 48,
            column: 79
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 48
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 53,
            column: 71
          },
          end: {
            line: 53,
            column: 72
          }
        },
        loc: {
          start: {
            line: 53,
            column: 77
          },
          end: {
            line: 53,
            column: 124
          }
        },
        line: 53
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 30
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 80
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 88,
            column: 67
          },
          end: {
            line: 88,
            column: 68
          }
        },
        loc: {
          start: {
            line: 88,
            column: 73
          },
          end: {
            line: 88,
            column: 120
          }
        },
        line: 88
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 52
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 110
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 112,
            column: 57
          },
          end: {
            line: 112,
            column: 58
          }
        },
        loc: {
          start: {
            line: 112,
            column: 72
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 112
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 116,
            column: 71
          },
          end: {
            line: 116,
            column: 72
          }
        },
        loc: {
          start: {
            line: 116,
            column: 77
          },
          end: {
            line: 116,
            column: 124
          }
        },
        line: 116
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 49
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 140
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 142,
            column: 57
          },
          end: {
            line: 142,
            column: 58
          }
        },
        loc: {
          start: {
            line: 142,
            column: 72
          },
          end: {
            line: 167,
            column: 9
          }
        },
        line: 142
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 146,
            column: 71
          },
          end: {
            line: 146,
            column: 72
          }
        },
        loc: {
          start: {
            line: 146,
            column: 77
          },
          end: {
            line: 146,
            column: 124
          }
        },
        line: 146
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 170
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 187,
            column: 57
          },
          end: {
            line: 187,
            column: 58
          }
        },
        loc: {
          start: {
            line: 187,
            column: 63
          },
          end: {
            line: 187,
            column: 109
          }
        },
        line: 187
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 190,
            column: 49
          },
          end: {
            line: 190,
            column: 50
          }
        },
        loc: {
          start: {
            line: 190,
            column: 57
          },
          end: {
            line: 194,
            column: 9
          }
        },
        line: 190
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 42
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 200
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 79
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 204
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 73
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 215
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 34
          }
        }],
        line: 45
      },
      "18": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "19": {
        loc: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "20": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "21": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "22": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "23": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "24": {
        loc: {
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 127,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 127,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "25": {
        loc: {
          start: {
            line: 140,
            column: 37
          },
          end: {
            line: 140,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 140,
            column: 45
          },
          end: {
            line: 140,
            column: 47
          }
        }],
        line: 140
      },
      "26": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "27": {
        loc: {
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 157,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 157,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "28": {
        loc: {
          start: {
            line: 200,
            column: 25
          },
          end: {
            line: 200,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 200,
            column: 38
          },
          end: {
            line: 200,
            column: 40
          }
        }],
        line: 200
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0]
    },
    inputSourceMap: {
      file: "/home/kim/tito/server/src/services/audit/auditService.ts",
      mappings: "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",
      names: [],
      sources: ["/home/kim/tito/server/src/services/audit/auditService.ts"],
      sourcesContent: ["import { AuditLogModel, CreateAuditLogData, AuditLog, AuditLogListParams } from '../../models/audit/AuditLog';\n\nexport interface AuditLogWithUser extends AuditLog {\n  changedByUser?: {\n    id: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    role: string;\n  } | null;\n}\n\nexport interface AuditStats {\n  totalLogs: number;\n  logsByAction: Array<{ action: string; count: number }>;\n  logsByTable: Array<{ tableName: string; count: number }>;\n  recentActivity: number;\n  topUsers: Array<{ userId: string; userName: string; count: number }>;\n}\n\nexport class AuditService {\n  private auditLogModel: AuditLogModel;\n\n  constructor() {\n    this.auditLogModel = new AuditLogModel();\n  }\n\n  async logAction(data: CreateAuditLogData): Promise<AuditLog> {\n    return await this.auditLogModel.createAuditLog(data);\n  }\n\n  async getAuditLogs(params: AuditLogListParams = {}): Promise<{\n    logs: AuditLogWithUser[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    const result = await this.auditLogModel.listAuditLogs(params);\n    \n    // Enhance logs with user information\n    const logsWithUsers = await Promise.all(\n      result.logs.map(async (log) => {\n        let changedByUser = null;\n        if (log.changedByUserId) {\n          try {\n            // Import here to avoid circular dependency\n            const { UserModel } = await import('../../models/auth/User');\n            const userModel = new UserModel();\n            const user = await userModel.findById(log.changedByUserId);\n            if (user) {\n              changedByUser = {\n                id: user.id,\n                email: user.email,\n                firstName: user.first_name,\n                lastName: user.last_name,\n                role: user.role\n              };\n            }\n          } catch (error) {\n            // User might not exist, continue without user info\n          }\n        }\n        \n        return {\n          ...log,\n          changedByUser\n        };\n      })\n    );\n\n    return {\n      ...result,\n      logs: logsWithUsers\n    };\n  }\n\n  async getAuditLogById(id: string): Promise<AuditLogWithUser | null> {\n    const log = await this.auditLogModel.findById(id);\n    if (!log) {\n      return null;\n    }\n\n    let changedByUser = null;\n    if (log.changedByUserId) {\n      try {\n        const { UserModel } = await import('../../models/auth/User');\n        const userModel = new UserModel();\n        const user = await userModel.findById(log.changedByUserId);\n        if (user) {\n          changedByUser = {\n            id: user.id,\n            email: user.email,\n            firstName: user.first_name,\n            lastName: user.last_name,\n            role: user.role\n          };\n        }\n      } catch (error) {\n        // User might not exist, continue without user info\n      }\n    }\n\n    return {\n      ...log,\n      changedByUser\n    };\n  }\n\n  async getAuditLogsByRecord(tableName: string, recordId: string): Promise<AuditLogWithUser[]> {\n    const logs = await this.auditLogModel.getAuditLogsByRecord(tableName, recordId);\n    \n    const logsWithUsers = await Promise.all(\n      logs.map(async (log) => {\n        let changedByUser = null;\n        if (log.changedByUserId) {\n          try {\n            const { UserModel } = await import('../../models/auth/User');\n            const userModel = new UserModel();\n            const user = await userModel.findById(log.changedByUserId);\n            if (user) {\n              changedByUser = {\n                id: user.id,\n                email: user.email,\n                firstName: user.first_name,\n                lastName: user.last_name,\n                role: user.role\n              };\n            }\n          } catch (error) {\n            // User might not exist, continue without user info\n          }\n        }\n        \n        return {\n          ...log,\n          changedByUser\n        };\n      })\n    );\n\n    return logsWithUsers;\n  }\n\n  async getAuditLogsByUser(userId: string, limit: number = 50): Promise<AuditLogWithUser[]> {\n    const logs = await this.auditLogModel.getAuditLogsByUser(userId, limit);\n    \n    const logsWithUsers = await Promise.all(\n      logs.map(async (log) => {\n        let changedByUser = null;\n        if (log.changedByUserId) {\n          try {\n            const { UserModel } = await import('../../models/auth/User');\n            const userModel = new UserModel();\n            const user = await userModel.findById(log.changedByUserId);\n            if (user) {\n              changedByUser = {\n                id: user.id,\n                email: user.email,\n                firstName: user.first_name,\n                lastName: user.last_name,\n                role: user.role\n              };\n            }\n          } catch (error) {\n            // User might not exist, continue without user info\n          }\n        }\n        \n        return {\n          ...log,\n          changedByUser\n        };\n      })\n    );\n\n    return logsWithUsers;\n  }\n\n  async getAuditStats(): Promise<AuditStats> {\n    const basicStats = await this.auditLogModel.getAuditStats();\n    \n    // Get top users by activity\n    const topUsersQuery = `\n      SELECT \n        changed_by_user_id as user_id,\n        u.email,\n        u.first_name,\n        u.last_name,\n        COUNT(*) as count\n      FROM audit_log al\n      LEFT JOIN users u ON al.changed_by_user_id = u.id\n      WHERE changed_by_user_id IS NOT NULL\n      GROUP BY changed_by_user_id, u.email, u.first_name, u.last_name\n      ORDER BY count DESC\n      LIMIT 10\n    `;\n    \n    const { getPool } = await import('../../config/database');\n    const pool = getPool();\n    const topUsersResult = await pool.query(topUsersQuery);\n    \n    const topUsers = topUsersResult.rows.map(row => ({\n      userId: row.user_id,\n      userName: `${row.first_name} ${row.last_name} (${row.email})`,\n      count: parseInt(row.count)\n    }));\n\n    return {\n      ...basicStats,\n      topUsers\n    };\n  }\n\n  async cleanupOldLogs(daysToKeep: number = 90): Promise<number> {\n    return await this.auditLogModel.deleteOldAuditLogs(daysToKeep);\n  }\n\n  // Helper method to log user actions\n  async logUserAction(\n    userId: string,\n    tableName: string,\n    recordId: string,\n    action: 'INSERT' | 'UPDATE' | 'DELETE',\n    oldData?: any,\n    newData?: any\n  ): Promise<void> {\n    await this.logAction({\n      tableName,\n      recordId,\n      action,\n      oldData,\n      newData,\n      changedByUserId: userId\n    });\n  }\n\n  // Helper method to log system actions\n  async logSystemAction(\n    tableName: string,\n    recordId: string,\n    action: 'INSERT' | 'UPDATE' | 'DELETE',\n    oldData?: any,\n    newData?: any\n  ): Promise<void> {\n    await this.logAction({\n      tableName,\n      recordId,\n      action,\n      oldData,\n      newData\n      // No changedByUserId for system actions\n    });\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "52d3294da9bf3bc7c796d32ea21e3f7f5659ee60"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1n7z2ckb73 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1n7z2ckb73();
var __createBinding =
/* istanbul ignore next */
(cov_1n7z2ckb73().s[0]++,
/* istanbul ignore next */
(cov_1n7z2ckb73().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1n7z2ckb73().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1n7z2ckb73().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1n7z2ckb73().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1n7z2ckb73().f[0]++;
  cov_1n7z2ckb73().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().b[2][0]++;
    cov_1n7z2ckb73().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1n7z2ckb73().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1n7z2ckb73().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1n7z2ckb73().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[5][1]++,
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().b[3][0]++;
    cov_1n7z2ckb73().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1n7z2ckb73().f[1]++;
        cov_1n7z2ckb73().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1n7z2ckb73().b[3][1]++;
  }
  cov_1n7z2ckb73().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1n7z2ckb73().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1n7z2ckb73().f[2]++;
  cov_1n7z2ckb73().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().b[7][0]++;
    cov_1n7z2ckb73().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1n7z2ckb73().b[7][1]++;
  }
  cov_1n7z2ckb73().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1n7z2ckb73().s[11]++,
/* istanbul ignore next */
(cov_1n7z2ckb73().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1n7z2ckb73().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1n7z2ckb73().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1n7z2ckb73().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1n7z2ckb73().f[3]++;
  cov_1n7z2ckb73().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1n7z2ckb73().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1n7z2ckb73().f[4]++;
  cov_1n7z2ckb73().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1n7z2ckb73().s[14]++,
/* istanbul ignore next */
(cov_1n7z2ckb73().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1n7z2ckb73().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1n7z2ckb73().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1n7z2ckb73().f[5]++;
  cov_1n7z2ckb73().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[6]++;
    cov_1n7z2ckb73().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1n7z2ckb73().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1n7z2ckb73().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1n7z2ckb73().s[17]++, []);
      /* istanbul ignore next */
      cov_1n7z2ckb73().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1n7z2ckb73().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1n7z2ckb73().b[12][0]++;
          cov_1n7z2ckb73().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1n7z2ckb73().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1n7z2ckb73().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1n7z2ckb73().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[8]++;
    cov_1n7z2ckb73().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1n7z2ckb73().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1n7z2ckb73().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1n7z2ckb73().b[13][0]++;
      cov_1n7z2ckb73().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1n7z2ckb73().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[26]++, {});
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1n7z2ckb73().b[15][0]++;
      cov_1n7z2ckb73().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1n7z2ckb73().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1n7z2ckb73().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1n7z2ckb73().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1n7z2ckb73().b[16][0]++;
          cov_1n7z2ckb73().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1n7z2ckb73().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1n7z2ckb73().b[15][1]++;
    }
    cov_1n7z2ckb73().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_1n7z2ckb73().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1n7z2ckb73().s[36]++;
exports.AuditService = void 0;
const AuditLog_1 =
/* istanbul ignore next */
(cov_1n7z2ckb73().s[37]++, require("../../models/audit/AuditLog"));
class AuditService {
  constructor() {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[9]++;
    cov_1n7z2ckb73().s[38]++;
    this.auditLogModel = new AuditLog_1.AuditLogModel();
  }
  async logAction(data) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[10]++;
    cov_1n7z2ckb73().s[39]++;
    return await this.auditLogModel.createAuditLog(data);
  }
  async getAuditLogs(params =
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[17][0]++, {})) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[11]++;
    const result =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[40]++, await this.auditLogModel.listAuditLogs(params));
    // Enhance logs with user information
    const logsWithUsers =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[41]++, await Promise.all(result.logs.map(async log => {
      /* istanbul ignore next */
      cov_1n7z2ckb73().f[12]++;
      let changedByUser =
      /* istanbul ignore next */
      (cov_1n7z2ckb73().s[42]++, null);
      /* istanbul ignore next */
      cov_1n7z2ckb73().s[43]++;
      if (log.changedByUserId) {
        /* istanbul ignore next */
        cov_1n7z2ckb73().b[18][0]++;
        cov_1n7z2ckb73().s[44]++;
        try {
          // Import here to avoid circular dependency
          const {
            UserModel
          } =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[45]++, await Promise.resolve().then(() => {
            /* istanbul ignore next */
            cov_1n7z2ckb73().f[13]++;
            cov_1n7z2ckb73().s[46]++;
            return __importStar(require('../../models/auth/User'));
          }));
          const userModel =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[47]++, new UserModel());
          const user =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[48]++, await userModel.findById(log.changedByUserId));
          /* istanbul ignore next */
          cov_1n7z2ckb73().s[49]++;
          if (user) {
            /* istanbul ignore next */
            cov_1n7z2ckb73().b[19][0]++;
            cov_1n7z2ckb73().s[50]++;
            changedByUser = {
              id: user.id,
              email: user.email,
              firstName: user.first_name,
              lastName: user.last_name,
              role: user.role
            };
          } else
          /* istanbul ignore next */
          {
            cov_1n7z2ckb73().b[19][1]++;
          }
        } catch (error) {
          // User might not exist, continue without user info
        }
      } else
      /* istanbul ignore next */
      {
        cov_1n7z2ckb73().b[18][1]++;
      }
      cov_1n7z2ckb73().s[51]++;
      return {
        ...log,
        changedByUser
      };
    })));
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[52]++;
    return {
      ...result,
      logs: logsWithUsers
    };
  }
  async getAuditLogById(id) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[14]++;
    const log =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[53]++, await this.auditLogModel.findById(id));
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[54]++;
    if (!log) {
      /* istanbul ignore next */
      cov_1n7z2ckb73().b[20][0]++;
      cov_1n7z2ckb73().s[55]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1n7z2ckb73().b[20][1]++;
    }
    let changedByUser =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[56]++, null);
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[57]++;
    if (log.changedByUserId) {
      /* istanbul ignore next */
      cov_1n7z2ckb73().b[21][0]++;
      cov_1n7z2ckb73().s[58]++;
      try {
        const {
          UserModel
        } =
        /* istanbul ignore next */
        (cov_1n7z2ckb73().s[59]++, await Promise.resolve().then(() => {
          /* istanbul ignore next */
          cov_1n7z2ckb73().f[15]++;
          cov_1n7z2ckb73().s[60]++;
          return __importStar(require('../../models/auth/User'));
        }));
        const userModel =
        /* istanbul ignore next */
        (cov_1n7z2ckb73().s[61]++, new UserModel());
        const user =
        /* istanbul ignore next */
        (cov_1n7z2ckb73().s[62]++, await userModel.findById(log.changedByUserId));
        /* istanbul ignore next */
        cov_1n7z2ckb73().s[63]++;
        if (user) {
          /* istanbul ignore next */
          cov_1n7z2ckb73().b[22][0]++;
          cov_1n7z2ckb73().s[64]++;
          changedByUser = {
            id: user.id,
            email: user.email,
            firstName: user.first_name,
            lastName: user.last_name,
            role: user.role
          };
        } else
        /* istanbul ignore next */
        {
          cov_1n7z2ckb73().b[22][1]++;
        }
      } catch (error) {
        // User might not exist, continue without user info
      }
    } else
    /* istanbul ignore next */
    {
      cov_1n7z2ckb73().b[21][1]++;
    }
    cov_1n7z2ckb73().s[65]++;
    return {
      ...log,
      changedByUser
    };
  }
  async getAuditLogsByRecord(tableName, recordId) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[16]++;
    const logs =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[66]++, await this.auditLogModel.getAuditLogsByRecord(tableName, recordId));
    const logsWithUsers =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[67]++, await Promise.all(logs.map(async log => {
      /* istanbul ignore next */
      cov_1n7z2ckb73().f[17]++;
      let changedByUser =
      /* istanbul ignore next */
      (cov_1n7z2ckb73().s[68]++, null);
      /* istanbul ignore next */
      cov_1n7z2ckb73().s[69]++;
      if (log.changedByUserId) {
        /* istanbul ignore next */
        cov_1n7z2ckb73().b[23][0]++;
        cov_1n7z2ckb73().s[70]++;
        try {
          const {
            UserModel
          } =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[71]++, await Promise.resolve().then(() => {
            /* istanbul ignore next */
            cov_1n7z2ckb73().f[18]++;
            cov_1n7z2ckb73().s[72]++;
            return __importStar(require('../../models/auth/User'));
          }));
          const userModel =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[73]++, new UserModel());
          const user =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[74]++, await userModel.findById(log.changedByUserId));
          /* istanbul ignore next */
          cov_1n7z2ckb73().s[75]++;
          if (user) {
            /* istanbul ignore next */
            cov_1n7z2ckb73().b[24][0]++;
            cov_1n7z2ckb73().s[76]++;
            changedByUser = {
              id: user.id,
              email: user.email,
              firstName: user.first_name,
              lastName: user.last_name,
              role: user.role
            };
          } else
          /* istanbul ignore next */
          {
            cov_1n7z2ckb73().b[24][1]++;
          }
        } catch (error) {
          // User might not exist, continue without user info
        }
      } else
      /* istanbul ignore next */
      {
        cov_1n7z2ckb73().b[23][1]++;
      }
      cov_1n7z2ckb73().s[77]++;
      return {
        ...log,
        changedByUser
      };
    })));
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[78]++;
    return logsWithUsers;
  }
  async getAuditLogsByUser(userId, limit =
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[25][0]++, 50)) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[19]++;
    const logs =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[79]++, await this.auditLogModel.getAuditLogsByUser(userId, limit));
    const logsWithUsers =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[80]++, await Promise.all(logs.map(async log => {
      /* istanbul ignore next */
      cov_1n7z2ckb73().f[20]++;
      let changedByUser =
      /* istanbul ignore next */
      (cov_1n7z2ckb73().s[81]++, null);
      /* istanbul ignore next */
      cov_1n7z2ckb73().s[82]++;
      if (log.changedByUserId) {
        /* istanbul ignore next */
        cov_1n7z2ckb73().b[26][0]++;
        cov_1n7z2ckb73().s[83]++;
        try {
          const {
            UserModel
          } =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[84]++, await Promise.resolve().then(() => {
            /* istanbul ignore next */
            cov_1n7z2ckb73().f[21]++;
            cov_1n7z2ckb73().s[85]++;
            return __importStar(require('../../models/auth/User'));
          }));
          const userModel =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[86]++, new UserModel());
          const user =
          /* istanbul ignore next */
          (cov_1n7z2ckb73().s[87]++, await userModel.findById(log.changedByUserId));
          /* istanbul ignore next */
          cov_1n7z2ckb73().s[88]++;
          if (user) {
            /* istanbul ignore next */
            cov_1n7z2ckb73().b[27][0]++;
            cov_1n7z2ckb73().s[89]++;
            changedByUser = {
              id: user.id,
              email: user.email,
              firstName: user.first_name,
              lastName: user.last_name,
              role: user.role
            };
          } else
          /* istanbul ignore next */
          {
            cov_1n7z2ckb73().b[27][1]++;
          }
        } catch (error) {
          // User might not exist, continue without user info
        }
      } else
      /* istanbul ignore next */
      {
        cov_1n7z2ckb73().b[26][1]++;
      }
      cov_1n7z2ckb73().s[90]++;
      return {
        ...log,
        changedByUser
      };
    })));
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[91]++;
    return logsWithUsers;
  }
  async getAuditStats() {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[22]++;
    const basicStats =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[92]++, await this.auditLogModel.getAuditStats());
    // Get top users by activity
    const topUsersQuery =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[93]++, `
      SELECT 
        changed_by_user_id as user_id,
        u.email,
        u.first_name,
        u.last_name,
        COUNT(*) as count
      FROM audit_log al
      LEFT JOIN users u ON al.changed_by_user_id = u.id
      WHERE changed_by_user_id IS NOT NULL
      GROUP BY changed_by_user_id, u.email, u.first_name, u.last_name
      ORDER BY count DESC
      LIMIT 10
    `);
    const {
      getPool
    } =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[94]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1n7z2ckb73().f[23]++;
      cov_1n7z2ckb73().s[95]++;
      return __importStar(require('../../config/database'));
    }));
    const pool =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[96]++, getPool());
    const topUsersResult =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[97]++, await pool.query(topUsersQuery));
    const topUsers =
    /* istanbul ignore next */
    (cov_1n7z2ckb73().s[98]++, topUsersResult.rows.map(row => {
      /* istanbul ignore next */
      cov_1n7z2ckb73().f[24]++;
      cov_1n7z2ckb73().s[99]++;
      return {
        userId: row.user_id,
        userName: `${row.first_name} ${row.last_name} (${row.email})`,
        count: parseInt(row.count)
      };
    }));
    /* istanbul ignore next */
    cov_1n7z2ckb73().s[100]++;
    return {
      ...basicStats,
      topUsers
    };
  }
  async cleanupOldLogs(daysToKeep =
  /* istanbul ignore next */
  (cov_1n7z2ckb73().b[28][0]++, 90)) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[25]++;
    cov_1n7z2ckb73().s[101]++;
    return await this.auditLogModel.deleteOldAuditLogs(daysToKeep);
  }
  // Helper method to log user actions
  async logUserAction(userId, tableName, recordId, action, oldData, newData) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[26]++;
    cov_1n7z2ckb73().s[102]++;
    await this.logAction({
      tableName,
      recordId,
      action,
      oldData,
      newData,
      changedByUserId: userId
    });
  }
  // Helper method to log system actions
  async logSystemAction(tableName, recordId, action, oldData, newData) {
    /* istanbul ignore next */
    cov_1n7z2ckb73().f[27]++;
    cov_1n7z2ckb73().s[103]++;
    await this.logAction({
      tableName,
      recordId,
      action,
      oldData,
      newData
      // No changedByUserId for system actions
    });
  }
}
/* istanbul ignore next */
cov_1n7z2ckb73().s[104]++;
exports.AuditService = AuditService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,