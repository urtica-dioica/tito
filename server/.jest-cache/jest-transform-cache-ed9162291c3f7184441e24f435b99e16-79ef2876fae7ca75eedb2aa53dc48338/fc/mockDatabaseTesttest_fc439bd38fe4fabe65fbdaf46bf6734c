e82d567f839ac2d12be6b4f9f6fd50d3
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mockDatabaseService_1 = require("../../utils/mockDatabaseService");
describe('Mock Database Service', () => {
    it('should handle COUNT queries correctly', async () => {
        // Test COUNT query
        const result = await mockDatabaseService_1.mockDatabaseService.query('SELECT COUNT(*) FROM payroll_periods');
        expect(result).toBeDefined();
        expect(result.rows).toBeDefined();
        expect(result.rows.length).toBe(1);
        expect(result.rows[0]).toBeDefined();
        expect(result.rows[0].count).toBeDefined();
        expect(typeof result.rows[0].count).toBe('string');
    });
    it('should handle COUNT queries with WHERE clauses', async () => {
        // Test COUNT query with WHERE clause
        const result = await mockDatabaseService_1.mockDatabaseService.query('SELECT COUNT(*) FROM payroll_periods WHERE status = $1', ['draft']);
        expect(result).toBeDefined();
        expect(result.rows).toBeDefined();
        expect(result.rows.length).toBe(1);
        expect(result.rows[0]).toBeDefined();
        expect(result.rows[0].count).toBeDefined();
        expect(typeof result.rows[0].count).toBe('string');
    });
    it('should handle INSERT queries', async () => {
        // Test INSERT query
        const result = await mockDatabaseService_1.mockDatabaseService.query('INSERT INTO payroll_periods (period_name, start_date, end_date, status) VALUES ($1, $2, $3, $4)', ['Test Period', '2025-01-01', '2025-01-31', 'draft']);
        expect(result).toBeDefined();
        expect(result.rows).toBeDefined();
        expect(result.rows.length).toBe(1);
        expect(result.rows[0].id).toBeDefined();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUva2ltL3RpdG8vc2VydmVyL3Rlc3RzL3VuaXQvc2VydmljZXMvbW9ja0RhdGFiYXNlVGVzdC50ZXN0LnRzIiwibWFwcGluZ3MiOiI7O0FBQUEseUVBQXNFO0FBRXRFLFFBQVEsQ0FBQyx1QkFBdUIsRUFBRSxHQUFHLEVBQUU7SUFDckMsRUFBRSxDQUFDLHVDQUF1QyxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ3JELG1CQUFtQjtRQUNuQixNQUFNLE1BQU0sR0FBRyxNQUFNLHlDQUFtQixDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO1FBRXZGLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM3QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2xDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3JDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGdEQUFnRCxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQzlELHFDQUFxQztRQUNyQyxNQUFNLE1BQU0sR0FBRyxNQUFNLHlDQUFtQixDQUFDLEtBQUssQ0FBQyx3REFBd0QsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFcEgsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzdCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25DLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDckMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDM0MsTUFBTSxDQUFDLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsOEJBQThCLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDNUMsb0JBQW9CO1FBQ3BCLE1BQU0sTUFBTSxHQUFHLE1BQU0seUNBQW1CLENBQUMsS0FBSyxDQUM1QyxpR0FBaUcsRUFDakcsQ0FBQyxhQUFhLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FDckQsQ0FBQztRQUVGLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM3QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2xDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUMxQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL2tpbS90aXRvL3NlcnZlci90ZXN0cy91bml0L3NlcnZpY2VzL21vY2tEYXRhYmFzZVRlc3QudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtb2NrRGF0YWJhc2VTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvbW9ja0RhdGFiYXNlU2VydmljZSc7XG5cbmRlc2NyaWJlKCdNb2NrIERhdGFiYXNlIFNlcnZpY2UnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgaGFuZGxlIENPVU5UIHF1ZXJpZXMgY29ycmVjdGx5JywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIFRlc3QgQ09VTlQgcXVlcnlcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtb2NrRGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5KCdTRUxFQ1QgQ09VTlQoKikgRlJPTSBwYXlyb2xsX3BlcmlvZHMnKTtcbiAgICBcbiAgICBleHBlY3QocmVzdWx0KS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChyZXN1bHQucm93cykudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QocmVzdWx0LnJvd3MubGVuZ3RoKS50b0JlKDEpO1xuICAgIGV4cGVjdChyZXN1bHQucm93c1swXSkudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QocmVzdWx0LnJvd3NbMF0uY291bnQpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHR5cGVvZiByZXN1bHQucm93c1swXS5jb3VudCkudG9CZSgnc3RyaW5nJyk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgaGFuZGxlIENPVU5UIHF1ZXJpZXMgd2l0aCBXSEVSRSBjbGF1c2VzJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIFRlc3QgQ09VTlQgcXVlcnkgd2l0aCBXSEVSRSBjbGF1c2VcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtb2NrRGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5KCdTRUxFQ1QgQ09VTlQoKikgRlJPTSBwYXlyb2xsX3BlcmlvZHMgV0hFUkUgc3RhdHVzID0gJDEnLCBbJ2RyYWZ0J10pO1xuICAgIFxuICAgIGV4cGVjdChyZXN1bHQpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHJlc3VsdC5yb3dzKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChyZXN1bHQucm93cy5sZW5ndGgpLnRvQmUoMSk7XG4gICAgZXhwZWN0KHJlc3VsdC5yb3dzWzBdKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChyZXN1bHQucm93c1swXS5jb3VudCkudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QodHlwZW9mIHJlc3VsdC5yb3dzWzBdLmNvdW50KS50b0JlKCdzdHJpbmcnKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBoYW5kbGUgSU5TRVJUIHF1ZXJpZXMnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gVGVzdCBJTlNFUlQgcXVlcnlcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtb2NrRGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5KFxuICAgICAgJ0lOU0VSVCBJTlRPIHBheXJvbGxfcGVyaW9kcyAocGVyaW9kX25hbWUsIHN0YXJ0X2RhdGUsIGVuZF9kYXRlLCBzdGF0dXMpIFZBTFVFUyAoJDEsICQyLCAkMywgJDQpJyxcbiAgICAgIFsnVGVzdCBQZXJpb2QnLCAnMjAyNS0wMS0wMScsICcyMDI1LTAxLTMxJywgJ2RyYWZ0J11cbiAgICApO1xuICAgIFxuICAgIGV4cGVjdChyZXN1bHQpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHJlc3VsdC5yb3dzKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChyZXN1bHQucm93cy5sZW5ndGgpLnRvQmUoMSk7XG4gICAgZXhwZWN0KHJlc3VsdC5yb3dzWzBdLmlkKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9